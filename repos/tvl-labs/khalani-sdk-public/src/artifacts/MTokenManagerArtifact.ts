import { InterfaceAbi } from 'ethers-v6'

export const MTOKEN_MANAGER_ABI: InterfaceAbi = [
  { type: 'constructor', inputs: [], stateMutability: 'nonpayable' },
  {
    type: 'function',
    name: 'addAuthorizedLocker',
    inputs: [{ name: 'locker', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'addAuthorizedMinter',
    inputs: [{ name: 'minter', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'burnMToken',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
      { name: 'mToken', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'checkAuthorizedLocker',
    inputs: [{ name: 'locker', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'checkAuthorizedMinter',
    inputs: [{ name: 'minter', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'getAllowance',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'spender', type: 'address', internalType: 'address' },
      { name: 'mToken', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getBalanceOfResource',
    inputs: [
      { name: 'resourceId', type: 'bytes32', internalType: 'bytes32' },
      { name: 'mToken', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getBalanceOfUser',
    inputs: [
      { name: 'user', type: 'address', internalType: 'address' },
      { name: 'mToken', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getIntentBalance',
    inputs: [{ name: 'intentId', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isAuthorizedLocker',
    inputs: [{ name: 'locker', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isAuthorizedMinter',
    inputs: [{ name: 'minter', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'mTokenApprove',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'spender', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
      { name: 'mToken', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'mTokenTransfer',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
      { name: 'mToken', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'mTokenTransferFrom',
    inputs: [
      { name: 'spender', type: 'address', internalType: 'address' },
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
      { name: 'mToken', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'mintMToken',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'mToken', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'removeAuthorizedLocker',
    inputs: [{ name: 'locker', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'removeAuthorizedMinter',
    inputs: [{ name: 'minter', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setIntentBook',
    inputs: [{ name: '_intentBook', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setReceiptManager',
    inputs: [
      { name: '_receiptManager', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setTokenRegistry',
    inputs: [
      { name: '_tokenRegistry', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setWithdrawalHandler',
    inputs: [
      { name: '_withdrawalHandler', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'totalSupply',
    inputs: [{ name: 'mToken', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferMTokensToIntent',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'intentId', type: 'bytes32', internalType: 'bytes32' },
      { name: 'mToken', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
      {
        name: 'signedIntent',
        type: 'tuple',
        internalType: 'struct SignedIntent',
        components: [
          {
            name: 'intent',
            type: 'tuple',
            internalType: 'struct Intent',
            components: [
              { name: 'author', type: 'address', internalType: 'address' },
              { name: 'ttl', type: 'uint256', internalType: 'uint256' },
              { name: 'nonce', type: 'uint256', internalType: 'uint256' },
              { name: 'srcMToken', type: 'address', internalType: 'address' },
              { name: 'srcAmount', type: 'uint256', internalType: 'uint256' },
              {
                name: 'outcome',
                type: 'tuple',
                internalType: 'struct Outcome',
                components: [
                  {
                    name: 'mTokens',
                    type: 'address[]',
                    internalType: 'address[]',
                  },
                  {
                    name: 'mAmounts',
                    type: 'uint256[]',
                    internalType: 'uint256[]',
                  },
                  {
                    name: 'outcomeAssetStructure',
                    type: 'uint8',
                    internalType: 'enum OutcomeAssetStructure',
                  },
                  {
                    name: 'fillStructure',
                    type: 'uint8',
                    internalType: 'enum FillStructure',
                  },
                ],
              },
            ],
          },
          { name: 'signature', type: 'bytes', internalType: 'bytes' },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferMTokensToReceipt',
    inputs: [
      { name: 'intentId', type: 'bytes32', internalType: 'bytes32' },
      { name: 'receiptId', type: 'bytes32', internalType: 'bytes32' },
      { name: 'mToken', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawIntentBalance',
    inputs: [
      { name: 'intentId', type: 'bytes32', internalType: 'bytes32' },
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'mToken', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'withdrawMToken',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'mToken', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'withdrawMTokensFromReceipt',
    inputs: [
      { name: 'resourceId', type: 'bytes32', internalType: 'bytes32' },
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'mToken', type: 'address', internalType: 'address' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'Approval',
    inputs: [
      {
        name: 'mToken',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'owner',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'spender',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'AuthorizedLockerAdded',
    inputs: [
      {
        name: 'locker',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'AuthorizedLockerRemoved',
    inputs: [
      {
        name: 'locker',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'AuthorizedMinterAdded',
    inputs: [
      {
        name: 'minter',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'AuthorizedMinterChecked',
    inputs: [
      {
        name: 'minter',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'AuthorizedMinterRemoved',
    inputs: [
      {
        name: 'minter',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MTokenBurned',
    inputs: [
      {
        name: 'mToken',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'user', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MTokenMinted',
    inputs: [
      {
        name: 'mToken',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      { name: 'user', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MTokenTransferred',
    inputs: [
      {
        name: 'mToken',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'fromId',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      { name: 'toId', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'AuthorMismatch', inputs: [] },
  {
    type: 'error',
    name: 'AuthorizationManager__UnauthorizedCaller',
    inputs: [{ name: 'minter', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'CallerNotIntentBook', inputs: [] },
  { type: 'error', name: 'InsufficientAllowance', inputs: [] },
  {
    type: 'error',
    name: 'InsufficientIntentBalance',
    inputs: [
      { name: 'intentBalance', type: 'uint256', internalType: 'uint256' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'InsufficientMTokens', inputs: [] },
  { type: 'error', name: 'IntentIDMismatch', inputs: [] },
  { type: 'error', name: 'InvalidSignature', inputs: [] },
  { type: 'error', name: 'MTokenDestroyed', inputs: [] },
  { type: 'error', name: 'MTokenPaused', inputs: [] },
  { type: 'error', name: 'MissmatchedMToken', inputs: [] },
  { type: 'error', name: 'ReceiptAndIntentTokensDoNotMatch', inputs: [] },
  { type: 'error', name: 'UnauthorizedCaller', inputs: [] },
  { type: 'error', name: 'UnsupportedMToken', inputs: [] },
  { type: 'error', name: 'UserBalanceNotEnough', inputs: [] },
]
