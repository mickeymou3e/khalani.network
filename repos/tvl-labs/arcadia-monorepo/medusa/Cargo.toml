[package]
name = "medusa-service"
version = "0.1.0"
edition = "2024"

[workspace]
resolver = "2"
members = [
    "crates/medusa-api",
    "crates/medusa-apm",
    "crates/medusa-config",
    "crates/medusa-event",
    "crates/solver",
    "crates/medusa-storage",
    "crates/medusa-tx-worker",
    "crates/medusa-types",
    "crates/db-migration",
    "crates/medusa-apm-derive",
]

[workspace.dependencies]
alloy = { version = "1.0.6", features = ["full", "signer-aws"] }
anyhow = { version = "1.0.98", features = ["backtrace"] }
async-trait = "0.1"
aws-config = "1.6.3"
aws-sdk-kms = "1.71.0"
aws-types = "1.3.7"
axum = "0.8.3"
backtrace = "0.3.75"
base64 = "0.22"
bcs = "0.1.6"
clap = "4.5.38"
config = "0.15.11"
convert_case = "0.8.0"
ctrlc-async = "3.2"
dashmap = "6.1.0"
dotenv = "0.15"
env_logger = "0.11"
ethers = { version = "2.0", features = ["ws"] }
futures = "0.3.31"
fut-ret = "0.3.0"
hex = "0.4.3"
jsonrpsee = { version = "0.25.1", features = ["full"] }
lazy_static = "1.4.0"
log = "0.4"
mockall = "0.13"
once_cell = "1.21.3"
parking_lot = "0.12.1"
proc-macro2 = "1.0.95"
prometheus = { version = "0.14", default-features = false }
prometheus-static-metric = "0.5"
quote = "1.0.33"
rand = "0.8.5"
reqwest = "0.12.15"
rocksdb = { version = "0.23.0", features = ["lz4", "snappy"] }
rustc-hash = "2.1.1"
sea-orm = { version = "1.1.11", default-features = false, features = [
    "runtime-tokio-rustls",
    "macros",
] }
sea-orm-migration = { version = "1.1.11", features = ["runtime-tokio-rustls"] }
sqlx = { version = "0.8.3", default-features = false, features = [
    "macros",
    "migrate",
] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_yaml = "0.9.33"
syn = { version = "2.0", features = ["full"] }
thiserror = "2.0.12"
tokio = { version = "1.45", features = ["full"] }
tokio-stream = "0.1.17"
tokio-tungstenite = "0.26.2"
toml = "0.8.22"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
url = "2"
uuid = { version = "1.16", features = ["v4", "serde"] }

medusa-api = { path = "crates/medusa-api", default-features = false }
medusa-apm = { path = "crates/medusa-apm" }
medusa-apm-derive = { path = "crates/medusa-apm-derive" }
medusa-config = { path = "crates/medusa-config" }
medusa-types = { path = "crates/medusa-types" }
medusa-storage = { path = "crates/medusa-storage", default-features = false }
medusa-tx-worker = { path = "crates/medusa-tx-worker" }

[features]
default = ["sqlite", "postgres"]
sqlite = ["medusa-storage/sqlite"]
postgres = ["medusa-storage/postgres"]

[dependencies]
alloy = { workspace = true }
anyhow.workspace = true
async-trait.workspace = true
aws-config.workspace = true
aws-sdk-kms.workspace = true
aws-types.workspace = true
backtrace.workspace = true
log.workspace = true
prometheus.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
tokio.workspace = true
toml.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true

medusa-api.workspace = true
medusa-apm.workspace = true
medusa-config.workspace = true
medusa-types.workspace = true
medusa-storage.workspace = true
medusa-tx-worker.workspace = true
