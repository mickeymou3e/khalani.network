name: Arcadia E2E Tests

on:
  push: # run when we directly push to dev too
    branches:
      - dev
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/.gitignore'
      - '**/.dockerignore'
      - '**/Dockerfile'
      - '**/docker-compose.yml'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/e2e_tests.yml'
  workflow_dispatch:
      inputs:
        branch:
          description: 'Branch to test from'
          required: true
          type: string
          default: 'dev'
  pull_request:
    branches:
      - dev  # only run e2e test when we want to merge to dev
    # TODO: figure out the best way to include/exclude files to trigger ci
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/.gitignore'
      - '**/.dockerignore'
      - '**/Dockerfile'
      - '**/docker-compose.yml'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/e2e_tests.yml'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    environment: e2e
    steps:

    # checkout repo
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # install node &yarn
    - name: Install Node.js & Yarn
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'yarn'
        cache-dependency-path: 'dev-env/hyperlane-dev-env/yarn.lock'

    # install hyperlane cli
    - name: Install Hyperlane
      run: |
        npm install -g @hyperlane-xyz/cli
        hyperlane --version

    # install rust
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    # cache cargo
    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/
          ~/.cargo/git/
          medusa/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    # install foundry
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1

    # build contracts
    - name: Build contracts
      run: forge build
      working-directory: contracts

    # build medusa
    - name: Build medusa
      run: cargo build --release --all 
      working-directory: medusa

    # install dev-env dependencies & set env vars
    - name: Prepare dev-env
      env:
        ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
      run: |
        yarn install
        cp .env.example .env
        sed -i '/^FORK_URL=/d' .env
        echo "FORK_URL=https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}" >> .env
      working-directory: dev-env/hyperlane-dev-env

    # run e2e tests
    - name: Run e2e tests
      env:
        ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
      run: |
        export FORK_URL=https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}
        if [ -f .env ]; then
          echo ".env file exists"
          sed -i '/^FORK_URL=/d' .env
          echo "FORK_URL=${FORK_URL}" >> .env
          sed 's/\(ALCHEMY_API_KEY=\).*/\1***/' .env
        else
          echo ".env file not found"
          exit 1
        fi
        chmod +x ./e2e.sh 
        ./e2e.sh
        exit_code=$?
        echo "=== e2e.sh exit code: $exit_code ==="
      working-directory: dev-env/hyperlane-dev-env
      timeout-minutes: 20
