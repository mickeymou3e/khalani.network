// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "forge-std/Test.sol";
import {IntentBook} from "../src/hub/IntentBook.sol";

contract SimulationTest is Test {
    address contractAddress = 0x79Cff9ba2bf85C4b7f963864bd25dE87aAC53c9c;
    IntentBook intentBook;

    address user;
    uint256 userKey;

    function setUp() public {
        user = address(0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266);
        userKey = vm.envUint("PRIVATE_KEY");
        
        intentBook = IntentBook(contractAddress);
        // Check that the userKey corresponds to the user address
        address derivedAddress = vm.addr(userKey);
        assertEq(derivedAddress, user, "The derived address from the private key does not match the user address.");
        vm.startPrank(user);
    }

    function testSimulation1() public {        
        // Encode the calldata
        bytes memory _calldata = hex"3ce30eba000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000200000000000000000000000000c13113e56e00050327be3ad164185103541f19030000000000000000000000000000000000000000000000000000000067138cba00000000000000000000000000000000000000000000000000000000671385b2000000000000000000000000f434241755f01fe1ce067869c8e37e94425b24fd0000000000000000000000000000000000000000000000056bc75e2d6310000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000007342c34ee0d0bcd6c7508fb0721e5028b94b9e3c00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000000000000000000041413df8371001cf8ce0d48f7401a28fe838a55a043413633ca7deecbec909bb1046ad48ca014a90d923c875fed4ee69121d4272416763d74d2380bdb327ff47471b00000000000000000000000000000000000000000000000000000000000000";

        // Simulate sending Ether to the contract with the calldata
        (bool success, bytes memory returnData) = address(intentBook).call(_calldata);

        require(success, string(returnData));
    }
}

// Command to run:
// forge test --rpc-url http://35.92.4.131:8000 -vvvvv --match-test testSimulation