# Default values for wallet-balance-monitor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

walletBalanceMonitor:
  interval: 10 # Seconds
  prometheusPushGatewayUrl: http://prometheus-stack-pushgateway-prometheus-pushgateway.monitoring.svc.cluster.local:9091
  addressesContent:
  rpcUrlsContent:

replicaCount: 1

image:
  repository: ghcr.io/tvl-labs/wallet-balance-monitor
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - name: ghcr-login-secret
nameOverride: ""
fullnameOverride: ""

prometheusRule:
  enabled: true
  minimumBalance: 0.5
  walletName: example
  chain: mainnet

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {
    eks.amazonaws.com/role-arn: arn:aws:iam::803035318642:role/wallet-balance-monitor
  }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "wallet-balance-monitor"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
