/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ArbitrageSwap, ArbitrageSwapInterface } from "../ArbitrageSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingPoolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "pCKBAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "WCKBAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quoteAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "quoteTokenAddress",
            type: "address",
          },
          {
            internalType: "enum ArbitrageSwap.SwapOrder",
            name: "order",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "batchSwapCalldata",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "yokaiPoolAddress",
            type: "address",
          },
        ],
        internalType: "struct ArbitrageSwap.ArbitrageParams",
        name: "arbitrageParams",
        type: "tuple",
      },
    ],
    name: "arbitrage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "premiums",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ed238038062001ed283398181016040528101906200003791906200015b565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505062000215565b6000815190506200015581620001fb565b92915050565b600080600080608085870312156200017257600080fd5b6000620001828782880162000144565b9450506020620001958782880162000144565b9350506040620001a88782880162000144565b9250506060620001bb8782880162000144565b91505092959194509250565b6000620001d482620001db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020681620001c7565b81146200021257600080fd5b50565b611cad80620002256000396000f3fe60806040526004361061002d5760003560e01c8063516a00dc14610039578063920f5c841461006257610034565b3661003457005b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190611439565b61009f565b005b34801561006e57600080fd5b50610089600480360381019061008491906112e7565b6102cd565b60405161009691906118a7565b60405180910390f35b6060600167ffffffffffffffff811180156100b957600080fd5b506040519080825280602002602001820160405280156100e85781602001602082028036833780820191505090505b5090508160400151816000815181106100fd57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506060600167ffffffffffffffff8111801561015157600080fd5b506040519080825280602002602001820160405280156101805781602001602082028036833780820191505090505b50905082600001518160008151811061019557fe5b6020026020010181815250506060600167ffffffffffffffff811180156101bb57600080fd5b506040519080825280602002602001820160405280156101ea5781602001602082028036833780820191505090505b5090506000816000815181106101fc57fe5b6020026020010181815250506060338560405160200161021d92919061184e565b604051602081830303815290604052905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab9c4b5d30868686308760006040518863ffffffff1660e01b815260040161029497969594939291906117c3565b600060405180830381600087803b1580156102ae57600080fd5b505af11580156102c2573d6000803e3d6000fd5b505050505050505050565b6000806102d8610f29565b84848101906102e79190611293565b80925081935050506000816020015190506000826040015190506000600181111561030e57fe5b8360600151600181111561031e57fe5b141561058b578073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161039c91906117a8565b60206040518083038186803b1580156103b457600080fd5b505afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec919061147a565b6040518363ffffffff1660e01b815260040161040992919061187e565b602060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190611410565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683608001516040516104a79190611791565b6000604051808303816000865af19150503d80600081146104e4576040519150601f19603f3d011682016040523d82523d6000602084013e6104e9565b606091505b50505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052791906117a8565b60206040518083038186803b15801561053f57600080fd5b505afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610577919061147a565b9050610585828483876109f1565b50610796565b60018081111561059757fe5b836060015160018111156105a757fe5b1415610795576105cc82828e8e60008181106105bf57fe5b90506020020135866109f1565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161064491906117a8565b60206040518083038186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610694919061147a565b6040518363ffffffff1660e01b81526004016106b192919061187e565b602060405180830381600087803b1580156106cb57600080fd5b505af11580156106df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107039190611410565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836080015160405161074f9190611791565b6000604051808303816000865af19150503d806000811461078c576040519150601f19603f3d011682016040523d82523d6000602084013e610791565b606091505b5050505b5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107d191906117a8565b60206040518083038186803b1580156107e957600080fd5b505afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610821919061147a565b905060008b8b600081811061083257fe5b905060200201358e8e600081811061084657fe5b9050602002013501905081811115610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a9061190e565b60405180910390fd5b8181101561092c578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb878385036040518363ffffffff1660e01b81526004016108d892919061187e565b602060405180830381600087803b1580156108f257600080fd5b505af1158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190611410565b505b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161098792919061187e565b602060405180830381600087803b1580156109a157600080fd5b505af11580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190611410565b50600196505050505050509998505050505050505050565b6060600267ffffffffffffffff81118015610a0b57600080fd5b50604051908082528060200260200182016040528015610a3a5781602001602082028036833780820191505090505b5090508381600081518110610a4b57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508481600181518110610a9357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38360a00151856040518363ffffffff1660e01b8152600401610b0c92919061187e565b602060405180830381600087803b158015610b2657600080fd5b505af1158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5e9190611410565b5060008260a001519050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610ce757600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600181518110610bee57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff166318cbafe585600085307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518663ffffffff1660e01b8152600401610c8a95949392919061192e565b600060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ce191906113cf565b50610f21565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610e6557600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600081518110610d6d57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff16637ff36ab585600085307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518663ffffffff1660e01b8152600401610e0894939291906118c2565b6000604051808303818588803b158015610e2157600080fd5b505af1158015610e35573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f82011682018060405250810190610e5f91906113cf565b50610f20565b8073ffffffffffffffffffffffffffffffffffffffff166338ed173985600085307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518663ffffffff1660e01b8152600401610ec795949392919061192e565b600060405180830381600087803b158015610ee157600080fd5b505af1158015610ef5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f1e91906113cf565b505b5b505050505050565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006001811115610f8257fe5b815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050610fbb81611c0b565b92915050565b600081359050610fd081611c22565b92915050565b60008083601f840112610fe857600080fd5b8235905067ffffffffffffffff81111561100157600080fd5b60208301915083602082028301111561101957600080fd5b9250929050565b60008083601f84011261103257600080fd5b8235905067ffffffffffffffff81111561104b57600080fd5b60208301915083602082028301111561106357600080fd5b9250929050565b600082601f83011261107b57600080fd5b815161108e611089826119b5565b611988565b915081818352602084019350602081019050838560208402820111156110b357600080fd5b60005b838110156110e357816110c9888261127e565b8452602084019350602083019250506001810190506110b6565b5050505092915050565b6000815190506110fc81611c39565b92915050565b60008083601f84011261111457600080fd5b8235905067ffffffffffffffff81111561112d57600080fd5b60208301915083600182028301111561114557600080fd5b9250929050565b600082601f83011261115d57600080fd5b813561117061116b826119dd565b611988565b9150808252602083016020830185838301111561118c57600080fd5b611197838284611bab565b50505092915050565b6000813590506111af81611c50565b92915050565b600060c082840312156111c757600080fd5b6111d160c0611988565b905060006111e184828501611269565b60008301525060206111f584828501610fac565b602083015250604061120984828501610fac565b604083015250606061121d848285016111a0565b606083015250608082013567ffffffffffffffff81111561123d57600080fd5b6112498482850161114c565b60808301525060a061125d84828501610fac565b60a08301525092915050565b60008135905061127881611c60565b92915050565b60008151905061128d81611c60565b92915050565b600080604083850312156112a657600080fd5b60006112b485828601610fc1565b925050602083013567ffffffffffffffff8111156112d157600080fd5b6112dd858286016111b5565b9150509250929050565b600080600080600080600080600060a08a8c03121561130557600080fd5b60008a013567ffffffffffffffff81111561131f57600080fd5b61132b8c828d01610fd6565b995099505060208a013567ffffffffffffffff81111561134a57600080fd5b6113568c828d01611020565b975097505060408a013567ffffffffffffffff81111561137557600080fd5b6113818c828d01611020565b955095505060606113948c828d01610fac565b93505060808a013567ffffffffffffffff8111156113b157600080fd5b6113bd8c828d01611102565b92509250509295985092959850929598565b6000602082840312156113e157600080fd5b600082015167ffffffffffffffff8111156113fb57600080fd5b6114078482850161106a565b91505092915050565b60006020828403121561142257600080fd5b6000611430848285016110ed565b91505092915050565b60006020828403121561144b57600080fd5b600082013567ffffffffffffffff81111561146557600080fd5b611471848285016111b5565b91505092915050565b60006020828403121561148c57600080fd5b600061149a8482850161127e565b91505092915050565b60006114af83836114f1565b60208301905092915050565b60006114c78383611773565b60208301905092915050565b6114dc81611b3f565b82525050565b6114eb81611ad6565b82525050565b6114fa81611ac4565b82525050565b61150981611ac4565b82525050565b600061151a82611a29565b6115248185611a64565b935061152f83611a09565b8060005b8381101561156057815161154788826114a3565b975061155283611a4a565b925050600181019050611533565b5085935050505092915050565b600061157882611a34565b6115828185611a75565b935061158d83611a19565b8060005b838110156115be5781516115a588826114bb565b97506115b083611a57565b925050600181019050611591565b5085935050505092915050565b6115d481611ae8565b82525050565b60006115e582611a3f565b6115ef8185611a86565b93506115ff818560208601611bba565b61160881611bed565b840191505092915050565b600061161e82611a3f565b6116288185611a97565b9350611638818560208601611bba565b61164181611bed565b840191505092915050565b600061165782611a3f565b6116618185611aa8565b9350611671818560208601611bba565b80840191505092915050565b61168681611b51565b82525050565b61169581611b63565b82525050565b6116a481611b75565b82525050565b60006116b7601083611ab3565b91507f4e656761746976652070726f66697421000000000000000000000000000000006000830152602082019050919050565b600060c0830160008301516117026000860182611773565b50602083015161171560208601826114f1565b50604083015161172860408601826114f1565b50606083015161173b606086018261167d565b506080830151848203608086015261175382826115da565b91505060a083015161176860a08601826114f1565b508091505092915050565b61177c81611b35565b82525050565b61178b81611b35565b82525050565b600061179d828461164c565b915081905092915050565b60006020820190506117bd60008301846114d3565b92915050565b600060e0820190506117d8600083018a6114d3565b81810360208301526117ea818961150f565b905081810360408301526117fe818861156d565b90508181036060830152611812818761156d565b905061182160808301866114d3565b81810360a08301526118338185611613565b905061184260c083018461168c565b98975050505050505050565b600060408201905061186360008301856114e2565b818103602083015261187581846116ea565b90509392505050565b60006040820190506118936000830185611500565b6118a06020830184611782565b9392505050565b60006020820190506118bc60008301846115cb565b92915050565b60006080820190506118d7600083018761169b565b81810360208301526118e9818661150f565b90506118f860408301856114d3565b6119056060830184611782565b95945050505050565b60006020820190508181036000830152611927816116aa565b9050919050565b600060a0820190506119436000830188611782565b611950602083018761169b565b8181036040830152611962818661150f565b905061197160608301856114d3565b61197e6080830184611782565b9695505050505050565b6000604051905081810181811067ffffffffffffffff821117156119ab57600080fd5b8060405250919050565b600067ffffffffffffffff8211156119cc57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156119f457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611acf82611b15565b9050919050565b6000611ae182611b15565b9050919050565b60008115159050919050565b6000819050611b0282611bfe565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b4a82611b87565b9050919050565b6000611b5c82611af4565b9050919050565b6000611b6e82611b07565b9050919050565b6000611b8082611b35565b9050919050565b6000611b9282611b99565b9050919050565b6000611ba482611b15565b9050919050565b82818337600083830152505050565b60005b83811015611bd8578082015181840152602081019050611bbd565b83811115611be7576000848401525b50505050565b6000601f19601f8301169050919050565b60028110611c0857fe5b50565b611c1481611ac4565b8114611c1f57600080fd5b50565b611c2b81611ad6565b8114611c3657600080fd5b50565b611c4281611ae8565b8114611c4d57600080fd5b50565b60028110611c5d57600080fd5b50565b611c6981611b35565b8114611c7457600080fd5b5056fea2646970667358221220890c62e5d91b1020f01d56d16c24d7e87e099390af0402c1e6dc65cf34cdcb7164736f6c634300060c0033";

type ArbitrageSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrageSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrageSwap__factory extends ContractFactory {
  constructor(...args: ArbitrageSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vaultAddress: PromiseOrValue<string>,
    lendingPoolAddress: PromiseOrValue<string>,
    pCKBAddress: PromiseOrValue<string>,
    WCKBAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrageSwap> {
    return super.deploy(
      _vaultAddress,
      lendingPoolAddress,
      pCKBAddress,
      WCKBAddress,
      overrides || {}
    ) as Promise<ArbitrageSwap>;
  }
  override getDeployTransaction(
    _vaultAddress: PromiseOrValue<string>,
    lendingPoolAddress: PromiseOrValue<string>,
    pCKBAddress: PromiseOrValue<string>,
    WCKBAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vaultAddress,
      lendingPoolAddress,
      pCKBAddress,
      WCKBAddress,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrageSwap {
    return super.attach(address) as ArbitrageSwap;
  }
  override connect(signer: Signer): ArbitrageSwap__factory {
    return super.connect(signer) as ArbitrageSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrageSwapInterface {
    return new utils.Interface(_abi) as ArbitrageSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrageSwap {
    return new Contract(address, _abi, signerOrProvider) as ArbitrageSwap;
  }
}
