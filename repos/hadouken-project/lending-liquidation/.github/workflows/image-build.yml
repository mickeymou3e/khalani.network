name: Docker image publish

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

env:
  AWS_REGION: us-east-1
  IMAGE_REPO: 803035318642.dkr.ecr.us-east-1.amazonaws.com/liquidation
  IMAGE_NAME: liquidation
  DIA_ORACLE_ADDRESS: '0xB0d0fc380a13f0179974C447f36D10Bd00560805'
  BAND_ORACLE_ADDRESS: '0x686960658611c18cE9C35012DE035ebC9A51473D'
  NODE_VERSION: 16.13.2

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract short git hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Log in to the Container registry
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.7.0
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: 'Use Node.js v${{ env.NODE_VERSION }}'
        uses: actions/setup-node@master
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@hadouken-project'

      - name: Create npmrc file
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGES_READ_TOKEN }}" > $HOME/.npmrc
          echo "@hadouken-project:registry=https://npm.pkg.github.com/" >> $HOME/.npmrc

      - name: Install yarn dependencies
        run: |
          npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_READ_TOKEN }}

      - name: Build application package
        run: |
          npm run build
          node_modules/.bin/node-lambda package -n api -A .
        shell: bash

      - name: Setup docker context for buildx
        id: buildx-context
        run: docker context create builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: zip app
        run: make liquidatation.zip

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }},${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
          labels: ${{ steps.meta.outputs.labels }}
