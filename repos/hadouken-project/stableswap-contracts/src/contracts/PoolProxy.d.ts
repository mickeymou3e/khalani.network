/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface PoolProxyInterface extends ethers.utils.Interface {
  functions: {
    "commit_set_admins(address,address,address)": FunctionFragment;
    "apply_set_admins()": FunctionFragment;
    "set_burner(address,address)": FunctionFragment;
    "set_many_burners(address[20],address[20])": FunctionFragment;
    "withdraw_admin_fees(address)": FunctionFragment;
    "withdraw_many(address[20])": FunctionFragment;
    "burn(address)": FunctionFragment;
    "burn_many(address[20])": FunctionFragment;
    "kill_me(address)": FunctionFragment;
    "unkill_me(address)": FunctionFragment;
    "set_burner_kill(bool)": FunctionFragment;
    "commit_transfer_ownership(address,address)": FunctionFragment;
    "apply_transfer_ownership(address)": FunctionFragment;
    "accept_transfer_ownership(address)": FunctionFragment;
    "revert_transfer_ownership(address)": FunctionFragment;
    "commit_new_parameters(address,uint256,uint256,uint256,uint256)": FunctionFragment;
    "apply_new_parameters(address)": FunctionFragment;
    "revert_new_parameters(address)": FunctionFragment;
    "commit_new_fee(address,uint256,uint256)": FunctionFragment;
    "apply_new_fee(address)": FunctionFragment;
    "ramp_A(address,uint256,uint256)": FunctionFragment;
    "stop_ramp_A(address)": FunctionFragment;
    "set_aave_referral(address,uint256)": FunctionFragment;
    "set_donate_approval(address,address,bool)": FunctionFragment;
    "donate_admin_fees(address)": FunctionFragment;
    "ownership_admin()": FunctionFragment;
    "parameter_admin()": FunctionFragment;
    "emergency_admin()": FunctionFragment;
    "future_ownership_admin()": FunctionFragment;
    "future_parameter_admin()": FunctionFragment;
    "future_emergency_admin()": FunctionFragment;
    "min_asymmetries(address)": FunctionFragment;
    "burners(address)": FunctionFragment;
    "burner_kill()": FunctionFragment;
    "donate_approval(address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "commit_set_admins",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "apply_set_admins",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "set_burner",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "set_many_burners",
    values: [
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw_admin_fees",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw_many",
    values: [
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    ]
  ): string;
  encodeFunctionData(functionFragment: "burn", values: [string]): string;
  encodeFunctionData(
    functionFragment: "burn_many",
    values: [
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    ]
  ): string;
  encodeFunctionData(functionFragment: "kill_me", values: [string]): string;
  encodeFunctionData(functionFragment: "unkill_me", values: [string]): string;
  encodeFunctionData(
    functionFragment: "set_burner_kill",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "commit_transfer_ownership",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "apply_transfer_ownership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "accept_transfer_ownership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "revert_transfer_ownership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "commit_new_parameters",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "apply_new_parameters",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "revert_new_parameters",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "commit_new_fee",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "apply_new_fee",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ramp_A",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "stop_ramp_A", values: [string]): string;
  encodeFunctionData(
    functionFragment: "set_aave_referral",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "set_donate_approval",
    values: [string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "donate_admin_fees",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "ownership_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "parameter_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "emergency_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "future_ownership_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "future_parameter_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "future_emergency_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "min_asymmetries",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "burners", values: [string]): string;
  encodeFunctionData(
    functionFragment: "burner_kill",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "donate_approval",
    values: [string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "commit_set_admins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "apply_set_admins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "set_burner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "set_many_burners",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdraw_admin_fees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdraw_many",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burn_many", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "kill_me", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "unkill_me", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "set_burner_kill",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "commit_transfer_ownership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "apply_transfer_ownership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "accept_transfer_ownership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revert_transfer_ownership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "commit_new_parameters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "apply_new_parameters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revert_new_parameters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "commit_new_fee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "apply_new_fee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ramp_A", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "stop_ramp_A",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_aave_referral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_donate_approval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "donate_admin_fees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ownership_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parameter_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emergency_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "future_ownership_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "future_parameter_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "future_emergency_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "min_asymmetries",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "burners", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "burner_kill",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "donate_approval",
    data: BytesLike
  ): Result;

  events: {
    "CommitAdmins(address,address,address)": EventFragment;
    "ApplyAdmins(address,address,address)": EventFragment;
    "AddBurner(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CommitAdmins"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ApplyAdmins"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddBurner"): EventFragment;
}

export class PoolProxy extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PoolProxyInterface;

  functions: {
    commit_set_admins(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "commit_set_admins(address,address,address)"(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    apply_set_admins(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "apply_set_admins()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_burner(
      _coin: string,
      _burner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "set_burner(address,address)"(
      _coin: string,
      _burner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_many_burners(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "set_many_burners(address[20],address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdraw_admin_fees(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "withdraw_admin_fees(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdraw_many(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "withdraw_many(address[20])"(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    burn(
      _coin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "burn(address)"(
      _coin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    burn_many(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "burn_many(address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    kill_me(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "kill_me(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unkill_me(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "unkill_me(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_burner_kill(
      _is_killed: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "set_burner_kill(bool)"(
      _is_killed: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    commit_transfer_ownership(
      _pool: string,
      new_owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "commit_transfer_ownership(address,address)"(
      _pool: string,
      new_owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    apply_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "apply_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    accept_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "accept_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    revert_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "revert_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    commit_new_parameters(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "commit_new_parameters(address,uint256,uint256,uint256,uint256)"(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    apply_new_parameters(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "apply_new_parameters(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    revert_new_parameters(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "revert_new_parameters(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    commit_new_fee(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "commit_new_fee(address,uint256,uint256)"(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    apply_new_fee(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "apply_new_fee(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    ramp_A(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "ramp_A(address,uint256,uint256)"(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    stop_ramp_A(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "stop_ramp_A(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_aave_referral(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "set_aave_referral(address,uint256)"(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_donate_approval(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "set_donate_approval(address,address,bool)"(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    donate_admin_fees(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "donate_admin_fees(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    ownership_admin(overrides?: CallOverrides): Promise<[string]>;

    "ownership_admin()"(overrides?: CallOverrides): Promise<[string]>;

    parameter_admin(overrides?: CallOverrides): Promise<[string]>;

    "parameter_admin()"(overrides?: CallOverrides): Promise<[string]>;

    emergency_admin(overrides?: CallOverrides): Promise<[string]>;

    "emergency_admin()"(overrides?: CallOverrides): Promise<[string]>;

    future_ownership_admin(overrides?: CallOverrides): Promise<[string]>;

    "future_ownership_admin()"(overrides?: CallOverrides): Promise<[string]>;

    future_parameter_admin(overrides?: CallOverrides): Promise<[string]>;

    "future_parameter_admin()"(overrides?: CallOverrides): Promise<[string]>;

    future_emergency_admin(overrides?: CallOverrides): Promise<[string]>;

    "future_emergency_admin()"(overrides?: CallOverrides): Promise<[string]>;

    min_asymmetries(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "min_asymmetries(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    burners(arg0: string, overrides?: CallOverrides): Promise<[string]>;

    "burners(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    burner_kill(overrides?: CallOverrides): Promise<[boolean]>;

    "burner_kill()"(overrides?: CallOverrides): Promise<[boolean]>;

    donate_approval(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "donate_approval(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  commit_set_admins(
    _o_admin: string,
    _p_admin: string,
    _e_admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "commit_set_admins(address,address,address)"(
    _o_admin: string,
    _p_admin: string,
    _e_admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  apply_set_admins(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "apply_set_admins()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_burner(
    _coin: string,
    _burner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "set_burner(address,address)"(
    _coin: string,
    _burner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_many_burners(
    _coins: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    _burners: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "set_many_burners(address[20],address[20])"(
    _coins: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    _burners: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdraw_admin_fees(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "withdraw_admin_fees(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdraw_many(
    _pools: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "withdraw_many(address[20])"(
    _pools: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  burn(
    _coin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "burn(address)"(
    _coin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  burn_many(
    _coins: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "burn_many(address[20])"(
    _coins: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  kill_me(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "kill_me(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unkill_me(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "unkill_me(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_burner_kill(
    _is_killed: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "set_burner_kill(bool)"(
    _is_killed: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  commit_transfer_ownership(
    _pool: string,
    new_owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "commit_transfer_ownership(address,address)"(
    _pool: string,
    new_owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  apply_transfer_ownership(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "apply_transfer_ownership(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  accept_transfer_ownership(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "accept_transfer_ownership(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  revert_transfer_ownership(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "revert_transfer_ownership(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  commit_new_parameters(
    _pool: string,
    amplification: BigNumberish,
    new_fee: BigNumberish,
    new_admin_fee: BigNumberish,
    min_asymmetry: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "commit_new_parameters(address,uint256,uint256,uint256,uint256)"(
    _pool: string,
    amplification: BigNumberish,
    new_fee: BigNumberish,
    new_admin_fee: BigNumberish,
    min_asymmetry: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  apply_new_parameters(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "apply_new_parameters(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  revert_new_parameters(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "revert_new_parameters(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  commit_new_fee(
    _pool: string,
    new_fee: BigNumberish,
    new_admin_fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "commit_new_fee(address,uint256,uint256)"(
    _pool: string,
    new_fee: BigNumberish,
    new_admin_fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  apply_new_fee(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "apply_new_fee(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  ramp_A(
    _pool: string,
    _future_A: BigNumberish,
    _future_time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "ramp_A(address,uint256,uint256)"(
    _pool: string,
    _future_A: BigNumberish,
    _future_time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  stop_ramp_A(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "stop_ramp_A(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_aave_referral(
    _pool: string,
    referral_code: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "set_aave_referral(address,uint256)"(
    _pool: string,
    referral_code: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_donate_approval(
    _pool: string,
    _caller: string,
    _is_approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "set_donate_approval(address,address,bool)"(
    _pool: string,
    _caller: string,
    _is_approved: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  donate_admin_fees(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "donate_admin_fees(address)"(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  ownership_admin(overrides?: CallOverrides): Promise<string>;

  "ownership_admin()"(overrides?: CallOverrides): Promise<string>;

  parameter_admin(overrides?: CallOverrides): Promise<string>;

  "parameter_admin()"(overrides?: CallOverrides): Promise<string>;

  emergency_admin(overrides?: CallOverrides): Promise<string>;

  "emergency_admin()"(overrides?: CallOverrides): Promise<string>;

  future_ownership_admin(overrides?: CallOverrides): Promise<string>;

  "future_ownership_admin()"(overrides?: CallOverrides): Promise<string>;

  future_parameter_admin(overrides?: CallOverrides): Promise<string>;

  "future_parameter_admin()"(overrides?: CallOverrides): Promise<string>;

  future_emergency_admin(overrides?: CallOverrides): Promise<string>;

  "future_emergency_admin()"(overrides?: CallOverrides): Promise<string>;

  min_asymmetries(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  "min_asymmetries(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  burners(arg0: string, overrides?: CallOverrides): Promise<string>;

  "burners(address)"(arg0: string, overrides?: CallOverrides): Promise<string>;

  burner_kill(overrides?: CallOverrides): Promise<boolean>;

  "burner_kill()"(overrides?: CallOverrides): Promise<boolean>;

  donate_approval(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "donate_approval(address,address)"(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    commit_set_admins(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "commit_set_admins(address,address,address)"(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: CallOverrides
    ): Promise<void>;

    apply_set_admins(overrides?: CallOverrides): Promise<void>;

    "apply_set_admins()"(overrides?: CallOverrides): Promise<void>;

    set_burner(
      _coin: string,
      _burner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "set_burner(address,address)"(
      _coin: string,
      _burner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    set_many_burners(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    "set_many_burners(address[20],address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    withdraw_admin_fees(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdraw_admin_fees(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    withdraw_many(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    "withdraw_many(address[20])"(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    burn(_coin: string, overrides?: CallOverrides): Promise<void>;

    "burn(address)"(_coin: string, overrides?: CallOverrides): Promise<void>;

    burn_many(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    "burn_many(address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    kill_me(_pool: string, overrides?: CallOverrides): Promise<void>;

    "kill_me(address)"(_pool: string, overrides?: CallOverrides): Promise<void>;

    unkill_me(_pool: string, overrides?: CallOverrides): Promise<void>;

    "unkill_me(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    set_burner_kill(
      _is_killed: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "set_burner_kill(bool)"(
      _is_killed: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    commit_transfer_ownership(
      _pool: string,
      new_owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "commit_transfer_ownership(address,address)"(
      _pool: string,
      new_owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    apply_transfer_ownership(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "apply_transfer_ownership(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    accept_transfer_ownership(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "accept_transfer_ownership(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revert_transfer_ownership(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "revert_transfer_ownership(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    commit_new_parameters(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "commit_new_parameters(address,uint256,uint256,uint256,uint256)"(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    apply_new_parameters(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "apply_new_parameters(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revert_new_parameters(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "revert_new_parameters(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    commit_new_fee(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "commit_new_fee(address,uint256,uint256)"(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    apply_new_fee(_pool: string, overrides?: CallOverrides): Promise<void>;

    "apply_new_fee(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ramp_A(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "ramp_A(address,uint256,uint256)"(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    stop_ramp_A(_pool: string, overrides?: CallOverrides): Promise<void>;

    "stop_ramp_A(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    set_aave_referral(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "set_aave_referral(address,uint256)"(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    set_donate_approval(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "set_donate_approval(address,address,bool)"(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    donate_admin_fees(_pool: string, overrides?: CallOverrides): Promise<void>;

    "donate_admin_fees(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<void>;

    ownership_admin(overrides?: CallOverrides): Promise<string>;

    "ownership_admin()"(overrides?: CallOverrides): Promise<string>;

    parameter_admin(overrides?: CallOverrides): Promise<string>;

    "parameter_admin()"(overrides?: CallOverrides): Promise<string>;

    emergency_admin(overrides?: CallOverrides): Promise<string>;

    "emergency_admin()"(overrides?: CallOverrides): Promise<string>;

    future_ownership_admin(overrides?: CallOverrides): Promise<string>;

    "future_ownership_admin()"(overrides?: CallOverrides): Promise<string>;

    future_parameter_admin(overrides?: CallOverrides): Promise<string>;

    "future_parameter_admin()"(overrides?: CallOverrides): Promise<string>;

    future_emergency_admin(overrides?: CallOverrides): Promise<string>;

    "future_emergency_admin()"(overrides?: CallOverrides): Promise<string>;

    min_asymmetries(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "min_asymmetries(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burners(arg0: string, overrides?: CallOverrides): Promise<string>;

    "burners(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    burner_kill(overrides?: CallOverrides): Promise<boolean>;

    "burner_kill()"(overrides?: CallOverrides): Promise<boolean>;

    donate_approval(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "donate_approval(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    CommitAdmins(
      ownership_admin: null,
      parameter_admin: null,
      emergency_admin: null
    ): TypedEventFilter<
      [string, string, string],
      {
        ownership_admin: string;
        parameter_admin: string;
        emergency_admin: string;
      }
    >;

    ApplyAdmins(
      ownership_admin: null,
      parameter_admin: null,
      emergency_admin: null
    ): TypedEventFilter<
      [string, string, string],
      {
        ownership_admin: string;
        parameter_admin: string;
        emergency_admin: string;
      }
    >;

    AddBurner(burner: null): TypedEventFilter<[string], { burner: string }>;
  };

  estimateGas: {
    commit_set_admins(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "commit_set_admins(address,address,address)"(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    apply_set_admins(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "apply_set_admins()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_burner(
      _coin: string,
      _burner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "set_burner(address,address)"(
      _coin: string,
      _burner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_many_burners(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "set_many_burners(address[20],address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdraw_admin_fees(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "withdraw_admin_fees(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdraw_many(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "withdraw_many(address[20])"(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    burn(
      _coin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "burn(address)"(
      _coin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    burn_many(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "burn_many(address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    kill_me(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "kill_me(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unkill_me(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "unkill_me(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_burner_kill(
      _is_killed: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "set_burner_kill(bool)"(
      _is_killed: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    commit_transfer_ownership(
      _pool: string,
      new_owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "commit_transfer_ownership(address,address)"(
      _pool: string,
      new_owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    apply_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "apply_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    accept_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "accept_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    revert_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "revert_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    commit_new_parameters(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "commit_new_parameters(address,uint256,uint256,uint256,uint256)"(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    apply_new_parameters(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "apply_new_parameters(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    revert_new_parameters(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "revert_new_parameters(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    commit_new_fee(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "commit_new_fee(address,uint256,uint256)"(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    apply_new_fee(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "apply_new_fee(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    ramp_A(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "ramp_A(address,uint256,uint256)"(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    stop_ramp_A(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "stop_ramp_A(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_aave_referral(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "set_aave_referral(address,uint256)"(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_donate_approval(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "set_donate_approval(address,address,bool)"(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    donate_admin_fees(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "donate_admin_fees(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    ownership_admin(overrides?: CallOverrides): Promise<BigNumber>;

    "ownership_admin()"(overrides?: CallOverrides): Promise<BigNumber>;

    parameter_admin(overrides?: CallOverrides): Promise<BigNumber>;

    "parameter_admin()"(overrides?: CallOverrides): Promise<BigNumber>;

    emergency_admin(overrides?: CallOverrides): Promise<BigNumber>;

    "emergency_admin()"(overrides?: CallOverrides): Promise<BigNumber>;

    future_ownership_admin(overrides?: CallOverrides): Promise<BigNumber>;

    "future_ownership_admin()"(overrides?: CallOverrides): Promise<BigNumber>;

    future_parameter_admin(overrides?: CallOverrides): Promise<BigNumber>;

    "future_parameter_admin()"(overrides?: CallOverrides): Promise<BigNumber>;

    future_emergency_admin(overrides?: CallOverrides): Promise<BigNumber>;

    "future_emergency_admin()"(overrides?: CallOverrides): Promise<BigNumber>;

    min_asymmetries(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "min_asymmetries(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burners(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "burners(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burner_kill(overrides?: CallOverrides): Promise<BigNumber>;

    "burner_kill()"(overrides?: CallOverrides): Promise<BigNumber>;

    donate_approval(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "donate_approval(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    commit_set_admins(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "commit_set_admins(address,address,address)"(
      _o_admin: string,
      _p_admin: string,
      _e_admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    apply_set_admins(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "apply_set_admins()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_burner(
      _coin: string,
      _burner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "set_burner(address,address)"(
      _coin: string,
      _burner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_many_burners(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "set_many_burners(address[20],address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _burners: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdraw_admin_fees(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "withdraw_admin_fees(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdraw_many(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "withdraw_many(address[20])"(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    burn(
      _coin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "burn(address)"(
      _coin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    burn_many(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "burn_many(address[20])"(
      _coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    kill_me(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "kill_me(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unkill_me(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "unkill_me(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_burner_kill(
      _is_killed: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "set_burner_kill(bool)"(
      _is_killed: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    commit_transfer_ownership(
      _pool: string,
      new_owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "commit_transfer_ownership(address,address)"(
      _pool: string,
      new_owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    apply_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "apply_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    accept_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "accept_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    revert_transfer_ownership(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "revert_transfer_ownership(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    commit_new_parameters(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "commit_new_parameters(address,uint256,uint256,uint256,uint256)"(
      _pool: string,
      amplification: BigNumberish,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      min_asymmetry: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    apply_new_parameters(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "apply_new_parameters(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    revert_new_parameters(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "revert_new_parameters(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    commit_new_fee(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "commit_new_fee(address,uint256,uint256)"(
      _pool: string,
      new_fee: BigNumberish,
      new_admin_fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    apply_new_fee(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "apply_new_fee(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    ramp_A(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "ramp_A(address,uint256,uint256)"(
      _pool: string,
      _future_A: BigNumberish,
      _future_time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    stop_ramp_A(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "stop_ramp_A(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_aave_referral(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "set_aave_referral(address,uint256)"(
      _pool: string,
      referral_code: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_donate_approval(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "set_donate_approval(address,address,bool)"(
      _pool: string,
      _caller: string,
      _is_approved: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    donate_admin_fees(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "donate_admin_fees(address)"(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    ownership_admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ownership_admin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    parameter_admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "parameter_admin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    emergency_admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "emergency_admin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    future_ownership_admin(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "future_ownership_admin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    future_parameter_admin(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "future_parameter_admin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    future_emergency_admin(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "future_emergency_admin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    min_asymmetries(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "min_asymmetries(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burners(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "burners(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burner_kill(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "burner_kill()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    donate_approval(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "donate_approval(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
