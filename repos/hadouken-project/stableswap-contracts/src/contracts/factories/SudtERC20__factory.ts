/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { SudtERC20 } from "../SudtERC20";

export class SudtERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    sudtId_: BigNumberish,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SudtERC20> {
    return super.deploy(
      name_,
      symbol_,
      totalSupply_,
      sudtId_,
      decimals_,
      overrides || {}
    ) as Promise<SudtERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    sudtId_: BigNumberish,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      totalSupply_,
      sudtId_,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): SudtERC20 {
    return super.attach(address) as SudtERC20;
  }
  connect(signer: Signer): SudtERC20__factory {
    return super.connect(signer) as SudtERC20__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SudtERC20 {
    return new Contract(address, _abi, signerOrProvider) as SudtERC20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sudtId_",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sudtId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000bf238038062000bf28339810160408190526200003491620001f8565b84516200004990600390602088019062000085565b5083516200005f90600490602087019062000085565b506001929092556002556005805460ff191660ff90921691909117905550620002ce9050565b828054620000939062000291565b90600052602060002090601f016020900481019282620000b7576000855562000102565b82601f10620000d257805160ff191683800117855562000102565b8280016001018555821562000102579182015b8281111562000102578251825591602001919060010190620000e5565b506200011092915062000114565b5090565b5b8082111562000110576000815560010162000115565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015357600080fd5b81516001600160401b03808211156200017057620001706200012b565b604051601f8301601f19908116603f011681019082821181831017156200019b576200019b6200012b565b81604052838152602092508683858801011115620001b857600080fd5b600091505b83821015620001dc5785820183015181830184015290820190620001bd565b83821115620001ee5760008385830101525b9695505050505050565b600080600080600060a086880312156200021157600080fd5b85516001600160401b03808211156200022957600080fd5b6200023789838a0162000141565b965060208801519150808211156200024e57600080fd5b506200025d8882890162000141565b9450506040860151925060608601519150608086015160ff811681146200028357600080fd5b809150509295509295909350565b600181811c90821680620002a657607f821691505b60208210811415620002c857634e487b7160e01b600052602260045260246000fd5b50919050565b61091480620002de6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014757806395d89b411461015a5780639f8dfb5914610162578063a457c2d71461016a578063a9059cbb1461017d578063dd62ed3e1461019057600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101c7565b6040516100ce9190610732565b60405180910390f35b6100ea6100e53660046107a3565b610259565b60405190151581526020016100ce565b6001545b6040519081526020016100ce565b6100ea61011a3660046107cd565b61026f565b60055460405160ff90911681526020016100ce565b6100ea6101423660046107a3565b610323565b6100fe610155366004610809565b610358565b6100c161039d565b6002546100fe565b6100ea6101783660046107a3565b6103ac565b6100ea61018b3660046107a3565b610445565b6100fe61019e36600461082b565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b6060600380546101d69061085e565b80601f01602080910402602001604051908101604052809291908181526020018280546102029061085e565b801561024f5780601f106102245761010080835404028352916020019161024f565b820191906000526020600020905b81548152906001019060200180831161023257829003601f168201915b5050505050905090565b6000610266338484610452565b50600192915050565b600061027c848484610574565b6001600160a01b038416600090815260208181526040808320338452909152902054828110156103045760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610318853361031386856108af565b610452565b506001949350505050565b336000818152602081815260408083206001600160a01b038716845290915281205490916102669185906103139086906108c6565b60006103626106d8565b60025481526001600160a01b038316602082015261037e6106f6565b602081604084600060f0600019f161039557600080fd5b519392505050565b6060600480546101d69061085e565b336000908152602081815260408083206001600160a01b03861684529091528120548281101561042c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fb565b61043b338561031386856108af565b5060019392505050565b6000610266338484610574565b6001600160a01b0383166104b45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fb565b6001600160a01b0382166105155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fb565b6001600160a01b038381166000818152602081815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105d85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fb565b6001600160a01b03821661063a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fb565b610642610714565b60025481526001600160a01b038481166020830152831660408201526060810182905261066d6106f6565b602081608084600060f1600019f161068457600080fd5b836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106c991815260200190565b60405180910390a35050505050565b60405180604001604052806002906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b600060208083528351808285015260005b8181101561075f57858101830151858201604001528201610743565b81811115610771576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461079e57600080fd5b919050565b600080604083850312156107b657600080fd5b6107bf83610787565b946020939093013593505050565b6000806000606084860312156107e257600080fd5b6107eb84610787565b92506107f960208501610787565b9150604084013590509250925092565b60006020828403121561081b57600080fd5b61082482610787565b9392505050565b6000806040838503121561083e57600080fd5b61084783610787565b915061085560208401610787565b90509250929050565b600181811c9082168061087257607f821691505b6020821081141561089357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156108c1576108c1610899565b500390565b600082198211156108d9576108d9610899565b50019056fea2646970667358221220ce05a161b0976630f5b70d1963fb223af16396ed1582faafee8dd528148ce33f64736f6c634300080a0033";
