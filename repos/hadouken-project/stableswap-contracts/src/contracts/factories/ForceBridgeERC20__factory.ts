/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ForceBridgeERC20 } from "../ForceBridgeERC20";

export class ForceBridgeERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ForceBridgeERC20> {
    return super.deploy(overrides || {}) as Promise<ForceBridgeERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ForceBridgeERC20 {
    return super.attach(address) as ForceBridgeERC20;
  }
  connect(signer: Signer): ForceBridgeERC20__factory {
    return super.connect(signer) as ForceBridgeERC20__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForceBridgeERC20 {
    return new Contract(address, _abi, signerOrProvider) as ForceBridgeERC20;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506305f5e10060026000828254610027919061005a565b909155505033600090815260208190526040812080546305f5e100929061004f90849061005a565b909155506100809050565b6000821982111561007b57634e487b7160e01b600052601160045260246000fd5b500190565b6106f58061008f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146100ed578063a457c2d714610116578063a9059cbb14610129578063dd62ed3e1461013c57600080fd5b8063095ea7b31461008d57806318160ddd146100b557806323b872dd146100c757806339509351146100da575b600080fd5b6100a061009b3660046105c6565b610175565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100ac565b6100a06100d53660046105f0565b61018c565b6100a06100e83660046105c6565b6101dd565b6100b96100fb36600461062c565b6001600160a01b031660009081526020819052604090205490565b6100a06101243660046105c6565b610213565b6100a06101373660046105c6565b610249565b6100b961014a366004610647565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610182338484610256565b5060015b92915050565b6000610199848484610380565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546101d39186916101ce90866104e9565b610256565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101829185906101ce908661054c565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916101829185906101ce90866104e9565b6000610182338484610380565b6001600160a01b0383166102bd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b03821661031e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102b4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166103e45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102b4565b6001600160a01b0382166104465760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102b4565b6001600160a01b03831660009081526020819052604090205461046990826104e9565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610498908261054c565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610373565b60008282111561053b5760405162461bcd60e51b815260206004820152601d60248201527f556e646572666c6f7720647572696e67207375627472616374696f6e2e00000060448201526064016102b4565b6105458284610690565b9392505050565b600061055882846106a7565b9050828110156101865760405162461bcd60e51b815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e0000000000000060448201526064016102b4565b80356001600160a01b03811681146105c157600080fd5b919050565b600080604083850312156105d957600080fd5b6105e2836105aa565b946020939093013593505050565b60008060006060848603121561060557600080fd5b61060e846105aa565b925061061c602085016105aa565b9150604084013590509250925092565b60006020828403121561063e57600080fd5b610545826105aa565b6000806040838503121561065a57600080fd5b610663836105aa565b9150610671602084016105aa565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106a2576106a261067a565b500390565b600082198211156106ba576106ba61067a565b50019056fea26469706673582212202f8474fe4f012d1af4763349cc130968f13ce64027afd76700d5be68e105317564736f6c634300080a0033";
