/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface PoolInfoInterface extends ethers.utils.Interface {
  functions: {
    "get_pool_coins(address)": FunctionFragment;
    "get_pool_info(address)": FunctionFragment;
    "address_provider()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "get_pool_coins",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_pool_info",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "address_provider",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "get_pool_coins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_info",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "address_provider",
    data: BytesLike
  ): Result;

  events: {};
}

export class PoolInfo extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PoolInfoInterface;

  functions: {
    get_pool_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, string, string, string, string, string, string],
        [string, string, string, string, string, string, string, string],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ] & {
        coins: [string, string, string, string, string, string, string, string];
        underlying_coins: [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
      }
    >;

    "get_pool_coins(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, string, string, string, string, string, string],
        [string, string, string, string, string, string, string, string],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ] & {
        coins: [string, string, string, string, string, string, string, string];
        underlying_coins: [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
      }
    >;

    get_pool_info(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        string,
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        },
        boolean,
        string
      ] & {
        balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        rates: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        lp_token: string;
        params: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        };
        is_meta: boolean;
        name: string;
      }
    >;

    "get_pool_info(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        string,
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        },
        boolean,
        string
      ] & {
        balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        rates: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        lp_token: string;
        params: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        };
        is_meta: boolean;
        name: string;
      }
    >;

    address_provider(overrides?: CallOverrides): Promise<[string]>;

    "address_provider()"(overrides?: CallOverrides): Promise<[string]>;
  };

  get_pool_coins(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [string, string, string, string, string, string, string, string],
      [string, string, string, string, string, string, string, string],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ]
    ] & {
      coins: [string, string, string, string, string, string, string, string];
      underlying_coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ];
      decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      underlying_decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
    }
  >;

  "get_pool_coins(address)"(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [string, string, string, string, string, string, string, string],
      [string, string, string, string, string, string, string, string],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ]
    ] & {
      coins: [string, string, string, string, string, string, string, string];
      underlying_coins: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ];
      decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      underlying_decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
    }
  >;

  get_pool_info(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      string,
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        A: BigNumber;
        future_A: BigNumber;
        fee: BigNumber;
        admin_fee: BigNumber;
        future_fee: BigNumber;
        future_admin_fee: BigNumber;
        future_owner: string;
        initial_A: BigNumber;
        initial_A_time: BigNumber;
        future_A_time: BigNumber;
      },
      boolean,
      string
    ] & {
      balances: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      underlying_balances: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      underlying_decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      rates: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      lp_token: string;
      params: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        A: BigNumber;
        future_A: BigNumber;
        fee: BigNumber;
        admin_fee: BigNumber;
        future_fee: BigNumber;
        future_admin_fee: BigNumber;
        future_owner: string;
        initial_A: BigNumber;
        initial_A_time: BigNumber;
        future_A_time: BigNumber;
      };
      is_meta: boolean;
      name: string;
    }
  >;

  "get_pool_info(address)"(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<
    [
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      string,
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        A: BigNumber;
        future_A: BigNumber;
        fee: BigNumber;
        admin_fee: BigNumber;
        future_fee: BigNumber;
        future_admin_fee: BigNumber;
        future_owner: string;
        initial_A: BigNumber;
        initial_A_time: BigNumber;
        future_A_time: BigNumber;
      },
      boolean,
      string
    ] & {
      balances: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      underlying_balances: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      underlying_decimals: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      rates: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ];
      lp_token: string;
      params: [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        A: BigNumber;
        future_A: BigNumber;
        fee: BigNumber;
        admin_fee: BigNumber;
        future_fee: BigNumber;
        future_admin_fee: BigNumber;
        future_owner: string;
        initial_A: BigNumber;
        initial_A_time: BigNumber;
        future_A_time: BigNumber;
      };
      is_meta: boolean;
      name: string;
    }
  >;

  address_provider(overrides?: CallOverrides): Promise<string>;

  "address_provider()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    get_pool_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, string, string, string, string, string, string],
        [string, string, string, string, string, string, string, string],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ] & {
        coins: [string, string, string, string, string, string, string, string];
        underlying_coins: [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
      }
    >;

    "get_pool_coins(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [string, string, string, string, string, string, string, string],
        [string, string, string, string, string, string, string, string],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ] & {
        coins: [string, string, string, string, string, string, string, string];
        underlying_coins: [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
      }
    >;

    get_pool_info(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        string,
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        },
        boolean,
        string
      ] & {
        balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        rates: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        lp_token: string;
        params: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        };
        is_meta: boolean;
        name: string;
      }
    >;

    "get_pool_info(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ],
        string,
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        },
        boolean,
        string
      ] & {
        balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_balances: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        underlying_decimals: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        rates: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ];
        lp_token: string;
        params: [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          A: BigNumber;
          future_A: BigNumber;
          fee: BigNumber;
          admin_fee: BigNumber;
          future_fee: BigNumber;
          future_admin_fee: BigNumber;
          future_owner: string;
          initial_A: BigNumber;
          initial_A_time: BigNumber;
          future_A_time: BigNumber;
        };
        is_meta: boolean;
        name: string;
      }
    >;

    address_provider(overrides?: CallOverrides): Promise<string>;

    "address_provider()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    get_pool_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "get_pool_coins(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_pool_info(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    "get_pool_info(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    address_provider(overrides?: CallOverrides): Promise<BigNumber>;

    "address_provider()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    get_pool_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_pool_coins(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_pool_info(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "get_pool_info(address)"(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    address_provider(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "address_provider()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
