/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LiquidationTest,
  LiquidationTestInterface,
} from "../../../contracts/mocks/LiquidationTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidationTokenAddress",
        type: "address",
      },
      {
        internalType: "contract ILiquidation",
        name: "_liquidation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "debtToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidation",
    outputs: [
      {
        internalType: "contract ILiquidation",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILiquidation",
        name: "_liquidation",
        type: "address",
      },
    ],
    name: "setLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461008a57601f61059538819003918201601f19168301916001600160401b0383118484101761008f57808492604094855283398101031261008a5780516001600160a01b03918282169182900361008a576020015191821680920361008a5760018060a01b03199081600154161760015560005416176000556040516104ef90816100a68239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182631b6f1b471461038857508163aab3f868146100b3578163ab919ee31461007b575063f2dfbf661461005157600080fd5b34610077578160031936011261007757905490516001600160a01b039091168152602090f35b5080fd5b83903461007757602036600319011261007757356001600160a01b038116908190036100775781546001600160a01b03191617815580f35b838334610077576080366003190112610077576001600160a01b03928035848116908190036103845760249182358681168091036103805760443587811680910361037c5760015486516370a0823160e01b81523085820152602099918216908a818981855afa908115610372578a91610341575b50828a5416918951918c83019363a9059cbb60e01b85528a840152604483015260448252608082019267ffffffffffffffff928085108486111761032f5760c081018581108582111761031d578c528d85527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a0820152518c9182919082855af1913d1561030f573d9081116102fd57918c916101e594938c51906101d785601f19601f84011601836103ad565b81528d81943d92013e6103e5565b80518a81159182156102d9575b50509050156102845760849289959492899283541691895198899788966315567f0d60e31b8852870152850152604484015260643560648401525af1928315610279578093610244575b505051908152f35b909192508382813d8311610272575b61025d81836103ad565b8101031261026f57505190838061023c565b80fd5b503d610253565b8251903d90823e3d90fd5b865162461bcd60e51b81528085018a9052602a818801527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b83809293500103126102f95789015180151581036102f957808a8c6101f2565b8880fd5b634e487b7160e01b8c5260418852898cfd5b506101e592916060916103e5565b634e487b7160e01b8e5260418a528b8efd5b634e487b7160e01b8d52604189528a8dfd5b90508a81813d831161036b575b61035881836103ad565b8101031261036757518b610128565b8980fd5b503d61034e565b89513d8c823e3d90fd5b8680fd5b8580fd5b8380fd5b8490346100775781600319360112610077576001546001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff8211176103cf57604052565b634e487b7160e01b600052604160045260246000fd5b9192901561044757508151156103f9575090565b3b156104025790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561045a5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106104a0575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061047d56fea26469706673582212202d1383176347ecf674dd98b87c11ceb652120abb707eb9ddcb5917fa45a881c764736f6c63430008130033";

type LiquidationTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidationTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidationTest__factory extends ContractFactory {
  constructor(...args: LiquidationTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidationTokenAddress: PromiseOrValue<string>,
    _liquidation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidationTest> {
    return super.deploy(
      _liquidationTokenAddress,
      _liquidation,
      overrides || {}
    ) as Promise<LiquidationTest>;
  }
  override getDeployTransaction(
    _liquidationTokenAddress: PromiseOrValue<string>,
    _liquidation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _liquidationTokenAddress,
      _liquidation,
      overrides || {}
    );
  }
  override attach(address: string): LiquidationTest {
    return super.attach(address) as LiquidationTest;
  }
  override connect(signer: Signer): LiquidationTest__factory {
    return super.connect(signer) as LiquidationTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidationTestInterface {
    return new utils.Interface(_abi) as LiquidationTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidationTest {
    return new Contract(address, _abi, signerOrProvider) as LiquidationTest;
  }
}
