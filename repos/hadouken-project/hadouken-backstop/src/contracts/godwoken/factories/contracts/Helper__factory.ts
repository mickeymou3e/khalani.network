/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Helper, HelperInterface } from "../../contracts/Helper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "kind",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
    ],
    name: "encodeExitPoolUserData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stablePoolJoinKind",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "minimumBpt",
        type: "uint256",
      },
    ],
    name: "encodeJoinPoolUserData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getFundManagement",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptIndex",
        type: "uint256",
      },
    ],
    name: "skipBptIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a576105539081610020823930815050f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80635c46aecd146100675780636900a3ae1461006257806371d5184c1461005d5780638e3f4eb9146100585763d1244ca41461005357600080fd5b6102c9565b610266565b6101cc565b610145565b60603660031901126100a65760043560a05260243560c05260443560e0526060608052610095610100604052565b604051806100a2816100eb565b0390f35b600080fd5b919082519283825260005b8481106100d7575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016100b6565b90602091828152608051808483015260005b81811061011e575060409293506000838284010152601f8019910116010190565b60a08101518382016040015284016100fd565b9060206101429281815201906100ab565b90565b60203660031901126100a6576100a261015f6004356103ff565b6040519182916020835260208301906100ab565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff8211176101a557604052565b610173565b90601f8019910116810190811067ffffffffffffffff8211176101a557604052565b60603660031901126100a65767ffffffffffffffff6024358181116100a657366023820112156100a65780600401359182116101a5578160051b906040519160209361021a858301856101aa565b8352602484840191830101913683116100a657602401905b828210610257576100a261024b604435866004356104ba565b60405191829182610131565b81358152908401908401610232565b60403660031901126100a6576024356004358181146102a057602091811015610292575b604051908152f35b61029b906103b6565b61028a565b62461bcd60e51b60009081526020600452600760245266042414c233130360cc1b604452606490fd5b60203660031901126100a6576001600160a01b03600435818116908190036100a657606060809260409081516102fe81610189565b600093818580935282602082015282858201520152815161031e81610189565b8481526020810184815260608483019287845201948552835195865251151560208601525116908301525115156060820152f35b67ffffffffffffffff81116101a557601f01601f191660200190565b634e487b7160e01b600052601160045260246000fd5b9061038e82610352565b61039b60405191826101aa565b82815280926103ac601f1991610352565b0190602036910137565b6000198101919082116103c557565b61036e565b60300190816030116103c557565b9081518110156103e9570160200190565b634e487b7160e01b600052603260045260246000fd5b801561048b576000818181805b61046f575061041a81610384565b935b6104265750505090565b61042f906103b6565b90600a9061045a61044a6104448484066103ca565b60ff1690565b60f81b6001600160f81b03191690565b841a61046684876103d8565b5304908161041c565b915060001981146103c5576001600a910191048084929161040c565b506040516040810181811067ffffffffffffffff8211176101a55760405260018152600360fc1b602082015290565b909160405192839160808301602094858501526060604085015282518091528460a0850193019460005b828110610506575050506101429350606083015203601f1981018352826101aa565b8651855295810195879550938101936001016104e456fea2646970667358221220aa8ef9747e0cac86d74ac41463eff4ca5ae3c5d1674d32c58ffa4d0f12a7facf64736f6c63430008130033";

type HelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Helper__factory extends ContractFactory {
  constructor(...args: HelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Helper> {
    return super.deploy(overrides || {}) as Promise<Helper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Helper {
    return super.attach(address) as Helper;
  }
  override connect(signer: Signer): Helper__factory {
    return super.connect(signer) as Helper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelperInterface {
    return new utils.Interface(_abi) as HelperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Helper {
    return new Contract(address, _abi, signerOrProvider) as Helper;
  }
}
