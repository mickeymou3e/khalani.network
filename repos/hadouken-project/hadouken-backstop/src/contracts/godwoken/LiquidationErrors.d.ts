/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface LiquidationErrorsInterface extends ethers.utils.Interface {
  functions: {
    "ADDRESS_NOT_FOUND()": FunctionFragment;
    "NOT_ENOUGHT_BALANCE_IN_BACKSTOP()": FunctionFragment;
    "NOT_ENOUGHT_DEBT_TOKENS()": FunctionFragment;
    "NO_STEPS()": FunctionFragment;
    "WRONG_ADDRESS_FOR_WRAPPED_TOKENS()": FunctionFragment;
    "WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN()": FunctionFragment;
    "WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN()": FunctionFragment;
    "WRONG_UNDERYLING_TOKEN_TO_POOL_ID()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ADDRESS_NOT_FOUND",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NOT_ENOUGHT_BALANCE_IN_BACKSTOP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NOT_ENOUGHT_DEBT_TOKENS",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "NO_STEPS", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "WRONG_ADDRESS_FOR_WRAPPED_TOKENS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WRONG_UNDERYLING_TOKEN_TO_POOL_ID",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ADDRESS_NOT_FOUND",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NOT_ENOUGHT_BALANCE_IN_BACKSTOP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NOT_ENOUGHT_DEBT_TOKENS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "NO_STEPS", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "WRONG_ADDRESS_FOR_WRAPPED_TOKENS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WRONG_UNDERYLING_TOKEN_TO_POOL_ID",
    data: BytesLike
  ): Result;

  events: {};
}

export class LiquidationErrors extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: LiquidationErrorsInterface;

  functions: {
    ADDRESS_NOT_FOUND(overrides?: CallOverrides): Promise<[string]>;

    NOT_ENOUGHT_BALANCE_IN_BACKSTOP(
      overrides?: CallOverrides
    ): Promise<[string]>;

    NOT_ENOUGHT_DEBT_TOKENS(overrides?: CallOverrides): Promise<[string]>;

    NO_STEPS(overrides?: CallOverrides): Promise<[string]>;

    WRONG_ADDRESS_FOR_WRAPPED_TOKENS(
      overrides?: CallOverrides
    ): Promise<[string]>;

    WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN(
      overrides?: CallOverrides
    ): Promise<[string]>;

    WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN(
      overrides?: CallOverrides
    ): Promise<[string]>;

    WRONG_UNDERYLING_TOKEN_TO_POOL_ID(
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  ADDRESS_NOT_FOUND(overrides?: CallOverrides): Promise<string>;

  NOT_ENOUGHT_BALANCE_IN_BACKSTOP(overrides?: CallOverrides): Promise<string>;

  NOT_ENOUGHT_DEBT_TOKENS(overrides?: CallOverrides): Promise<string>;

  NO_STEPS(overrides?: CallOverrides): Promise<string>;

  WRONG_ADDRESS_FOR_WRAPPED_TOKENS(overrides?: CallOverrides): Promise<string>;

  WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN(
    overrides?: CallOverrides
  ): Promise<string>;

  WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN(
    overrides?: CallOverrides
  ): Promise<string>;

  WRONG_UNDERYLING_TOKEN_TO_POOL_ID(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    ADDRESS_NOT_FOUND(overrides?: CallOverrides): Promise<string>;

    NOT_ENOUGHT_BALANCE_IN_BACKSTOP(overrides?: CallOverrides): Promise<string>;

    NOT_ENOUGHT_DEBT_TOKENS(overrides?: CallOverrides): Promise<string>;

    NO_STEPS(overrides?: CallOverrides): Promise<string>;

    WRONG_ADDRESS_FOR_WRAPPED_TOKENS(
      overrides?: CallOverrides
    ): Promise<string>;

    WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN(
      overrides?: CallOverrides
    ): Promise<string>;

    WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN(
      overrides?: CallOverrides
    ): Promise<string>;

    WRONG_UNDERYLING_TOKEN_TO_POOL_ID(
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    ADDRESS_NOT_FOUND(overrides?: CallOverrides): Promise<BigNumber>;

    NOT_ENOUGHT_BALANCE_IN_BACKSTOP(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    NOT_ENOUGHT_DEBT_TOKENS(overrides?: CallOverrides): Promise<BigNumber>;

    NO_STEPS(overrides?: CallOverrides): Promise<BigNumber>;

    WRONG_ADDRESS_FOR_WRAPPED_TOKENS(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    WRONG_UNDERYLING_TOKEN_TO_POOL_ID(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ADDRESS_NOT_FOUND(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    NOT_ENOUGHT_BALANCE_IN_BACKSTOP(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    NOT_ENOUGHT_DEBT_TOKENS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    NO_STEPS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    WRONG_ADDRESS_FOR_WRAPPED_TOKENS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WRONG_CONFIGURATION_OR_UNDERYLING_TOKEN(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WRONG_UNDERYLING_TOKEN_TO_LINEAR_TOKEN(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WRONG_UNDERYLING_TOKEN_TO_POOL_ID(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
