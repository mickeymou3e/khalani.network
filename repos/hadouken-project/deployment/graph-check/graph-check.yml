Transform: AWS::Serverless-2016-10-31
Parameters:
  DiscordWebhook:
    Type: String
  GraphName:
    Type: String
  Graphql:
    Type: String
  GraphqlIndexer:
    Type: String

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: dist/src/entry.handler
      CodeUri: ./entry.zip
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Runtime: nodejs18.x
      Timeout: 60
      Environment:
        Variables:
          "DiscordWebhook": !Ref DiscordWebhook
          "GraphName": !Ref GraphName
          "Graphql": !Ref Graphql
          "GraphqlIndexer": !Ref GraphqlIndexer

  LambdaFunctionSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(15 minutes)
      Targets:
      - Arn:
          Fn::GetAtt:
          - LambdaFunction
          - Arn
        Id: '1'
  
  LambdaFunctionCwPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - LambdaFunction
        - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - LambdaFunctionSchedule
        - Arn
    

