"""oauth2 setup

Revision ID: 0f17917bb183
Revises: 660ff4208025
Create Date: 2023-10-04 06:59:45.503086

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0f17917bb183'
down_revision = '660ff4208025'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('refresh_tokens', 'refresh_token')
    op.rename_table('access_tokens', 'access_token')
    op.rename_table('users', 'user')
    op.rename_table('organizations', 'organization')
    op.rename_table('user_organizations', 'user_organization')
    op.rename_table('roles', 'role')
    op.rename_table('emails', 'email')

    op.create_table('oauth2_authorization_code',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('code', sa.String(length=120), nullable=False),
    sa.Column('client_id', sa.String(length=48), nullable=True),
    sa.Column('redirect_uri', sa.Text(), nullable=True),
    sa.Column('response_type', sa.Text(), nullable=True),
    sa.Column('scope', sa.Text(), nullable=True),
    sa.Column('nonce', sa.Text(), nullable=True),
    sa.Column('auth_time', sa.Integer(), nullable=False),
    sa.Column('code_challenge', sa.Text(), nullable=True),
    sa.Column('code_challenge_method', sa.String(length=48), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('oauth2_client',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('client_id', sa.String(length=48), nullable=True),
    sa.Column('client_secret', sa.String(length=120), nullable=True),
    sa.Column('client_id_issued_at', sa.Integer(), nullable=False),
    sa.Column('client_secret_expires_at', sa.Integer(), nullable=False),
    sa.Column('client_metadata', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('oauth2_client', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth2_client_client_id'), ['client_id'], unique=False)

    op.create_table('oauth2_token',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('client_id', sa.String(length=48), nullable=True),
    sa.Column('token_type', sa.String(length=40), nullable=True),
    sa.Column('access_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('scope', sa.Text(), nullable=True),
    sa.Column('issued_at', sa.Integer(), nullable=False),
    sa.Column('access_token_revoked_at', sa.Integer(), nullable=False),
    sa.Column('refresh_token_revoked_at', sa.Integer(), nullable=False),
    sa.Column('expires_in', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token')
    )
    with op.batch_alter_table('oauth2_token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth2_token_refresh_token'), ['refresh_token'], unique=False)


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('oauth2_token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth2_token_refresh_token'))

    op.drop_table('oauth2_token')
    with op.batch_alter_table('oauth2_client', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth2_client_client_id'))

    op.drop_table('oauth2_client')
    op.drop_table('oauth2_authorization_code')

    op.rename_table('refresh_token', 'refresh_tokens')
    op.rename_table('access_token', 'access_tokens')
    op.rename_table('user', 'users')
    op.rename_table('organization', 'organizations')
    op.rename_table('user_organization', 'user_organizations')
    op.rename_table('role', 'roles')
    op.rename_table('email', 'emails')
    # ### end Alembic commands ###
