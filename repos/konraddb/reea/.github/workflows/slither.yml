name: Slither Analysis

on:
  push:
    branches: [master]
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Slither
        uses: crytic/slither-action@v0.4.0
        id: slither
        with:
          node-version: 16
          fail-on: none
          slither-args: --checklist --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/

      - name: Post Slither report as PR comment
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          REPORT: ${{ steps.slither.outputs.stdout }}
        with:
          script: |
            const header = '# Slither Report';
            const body = process.env.REPORT;
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: context.issue.number,
            });

            // Check if there's already a Slither report comment
            const existingComment = comments.find(comment => comment.body.startsWith(header));

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: existingComment.id,
                body: `${header}\n\n${body}`,
              });
            } else {
              // Create new comment if none exists
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: `${header}\n\n${body}`,
              });
            };
