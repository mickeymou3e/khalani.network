{"version":3,"file":"static/chunks/108.1ed1af1b30ae1e02.js","mappings":"0PAoGA,UAvFoB,Y,IAAGA,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAM,EAANA,OACgBC,GAAAA,EAAAA,EAAAA,WAAkB,GAAjEC,EAA+CD,EAAwB,GAAlDE,EAA0BF,EAAwB,GACpDA,GAAAA,EAAAA,EAAAA,UAAiB,IAApCG,EAAmBH,EAAoB,GAAhCI,EAAYJ,EAAoB,GACJA,GAAAA,EAAAA,EAAAA,WAAkB,GAArDK,EAAmCL,EAAwB,GAA5CM,EAAoBN,EAAwB,GAC5DO,GAAaC,EAAAA,EAAAA,QAAiB,OAEpCC,EAAAA,EAAAA,YAAU,W,IAGNF,EAFGN,IAAuBI,GAAkBF,IAC5CD,GAAuB,GACL,QAAlBK,EAAAA,EAAWG,eAAO,IAAlBH,GAAAA,EAAoBI,qBAErB,CAACN,EAAeJ,EAAqBE,IAqBxC,OACE,UAACS,EAAAA,EAAM,CAACd,QAASA,EAASe,KAAMhB,E,WAC9B,UAACiB,EAAAA,EAAW,C,WACV,SAACC,EAAAA,EAAU,C,SAAC,YACXjB,GACC,SAACkB,EAAAA,EAAU,CACTC,aAAW,QACXC,QAASpB,EACTqB,GAAI,CACFC,SAAU,WACVC,MAAO,EACPC,IAAK,G,UAGP,SAACC,EAAAA,EAAS,MAEV,SAGN,SAACC,EAAAA,EAAO,KAER,UAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,cAAc,SAASC,WAAW,S,UACnDzB,IAAS,SAAC0B,EAAAA,EAAY,C,SAAE1B,KAEzB,SAAC2B,IAAQ,CACPC,WAAY1B,EACZ2B,QA7CmB,SAAC7B,GACP,oBAAfA,EAAM8B,MAA6C,6BAAf9B,EAAM8B,MAC5C3B,GAAiB,GACjBJ,GAAuB,IAEvBE,EAAS,6BAyCLL,OArCqB,SAACmC,GACvBA,GAKL9B,EAAS,IACTL,EAAOmC,IALL9B,EAAS,6BAoCL+B,IAAK5B,EACL6B,MAAO,CAAEC,MAAO,QAASC,OAAQ,eAIrC,SAACd,EAAAA,EAAO,KAER,UAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOE,WAAW,SAASW,eAAe,SAASC,QAAS,EAAGC,IAAK,E,WAC/E,SAACC,EAAAA,EAAM,CAACC,QAAQ,OAAOC,MAAM,UAAU1B,QAASpB,E,SAAS,WAGzD,SAAC4C,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACN1B,QAAS,WACPZ,GAAiB,GACjBF,EAAS,IACTF,GAAuB,I,SAE1B","sources":["webpack://_N_E/./src/components/common/ScanQRModal/index.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react'\nimport { Box, Dialog, DialogTitle, IconButton, Button, Divider } from '@mui/material'\nimport QrReader from 'react-qr-reader'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Typography from '@mui/material/Typography'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nconst ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string>('')\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef = useRef<QrReader>(null)\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      scannerRef.current?.openImageDialog()\n    }\n  }, [cameraBlocked, fileUploadModalOpen, error])\n\n  const onFileScannedError = (error: Error) => {\n    if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n      setCameraBlocked(true)\n      setFileUploadModalOpen(false)\n    } else {\n      setError('The QR could not be read')\n    }\n  }\n\n  const onFileScannedResolve = (successData: string | null) => {\n    if (!successData) {\n      setError('The QR could not be read')\n      return\n    }\n\n    setError('')\n    onScan(successData)\n  }\n\n  return (\n    <Dialog onClose={onClose} open={isOpen}>\n      <DialogTitle>\n        <Typography>Scan QR</Typography>\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n\n      <Divider />\n\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={onFileScannedError}\n          onScan={onFileScannedResolve}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n        />\n      </Box>\n\n      <Divider />\n\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" padding={3} gap={2}>\n        <Button variant=\"text\" color=\"primary\" onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setCameraBlocked(true)\n            setError('')\n            setFileUploadModalOpen(false)\n          }}\n        >\n          Upload an image\n        </Button>\n      </Box>\n    </Dialog>\n  )\n}\n\nexport default ScanQRModal\n"],"names":["isOpen","onClose","onScan","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","useRef","useEffect","current","openImageDialog","Dialog","open","DialogTitle","Typography","IconButton","aria-label","onClick","sx","position","right","top","CloseIcon","Divider","Box","display","flexDirection","alignItems","ErrorMessage","QrReader","legacyMode","onError","name","successData","ref","style","width","height","justifyContent","padding","gap","Button","variant","color"],"sourceRoot":""}