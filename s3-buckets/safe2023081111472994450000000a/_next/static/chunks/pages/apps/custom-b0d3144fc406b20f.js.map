{"version":3,"file":"static/chunks/pages/apps/custom-b0d3144fc406b20f.js","mappings":"uFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,eACA,WACE,OAAO,EAAQ,W,8NCQjBC,EAAuB,Y,IAAGC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAWC,EAAG,EAAHA,I,OACxD,UAACC,EAAAA,EAAW,CAACJ,KAAMA,EAAMC,QAASA,EAASI,YAAY,2B,WACrD,SAACC,EAAAA,EAAa,C,UACZ,UAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,E,UAAG,wCACM,SAACC,IAAC,C,SAAEP,EAAIQ,OAAS,cAGzD,UAACC,EAAAA,EAAa,CAACC,gBAAc,E,WAC3B,SAACC,EAAAA,EAAM,CAACC,QAASd,E,SAAS,YAC1B,SAACa,EAAAA,EAAM,CAACN,QAAQ,SAASO,QAAS,W,OAAMb,EAAUC,EAAIa,K,SAAK,kBCsCjE,EAhDiC,WAE/B,IAA0DC,GAAAA,EAAAA,EAAAA,KAAlDC,EAAkDD,EAAlDC,eAAgBC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,gBAE0BC,GAAAA,EAAAA,EAAAA,WAAkB,GAA3EC,EAAyDD,EAAwB,GAAvDE,EAA+BF,EAAwB,GAC9BA,GAAAA,EAAAA,EAAAA,YAAnDG,EAAmDH,EAAuB,GAAnDI,EAA4BJ,EAAuB,GAYjF,OACE,sB,WACE,SAACK,IAAI,C,UACH,SAACC,QAAK,C,SAAE,wBAGV,SAACC,EAAAA,EAAe,KAEhB,SAACC,EAAAA,EAAc,KAEf,SAACC,OAAI,C,UACH,SAACC,EAAAA,EAAW,CACVC,aAAcd,EACdC,aAAcA,EACdC,gBAxByB,SAACI,GAChCD,GAA4B,GAC5BE,EAAyBD,QA2BtBA,IACC,SAACzB,EAAoB,CACnBC,KAAMsB,EACNnB,IAAKqB,EACLvB,QAAS,W,OAAMsB,GAA4B,IAC3CrB,UA7B8B,SAAC+B,GACrCb,EAAgBa,GAChBV,GAA4B,Y","sources":["webpack://_N_E/?e263","webpack://_N_E/./src/components/safe-apps/RemoveCustomAppModal.tsx","webpack://_N_E/./src/pages/apps/custom.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/apps/custom\",\n      function () {\n        return require(\"private-next-pages/apps/custom.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/apps/custom\"])\n      });\n    }\n  ","import * as React from 'react'\nimport { DialogActions, DialogContent, Typography, Button } from '@mui/material'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport ModalDialog from '@/components/common/ModalDialog'\n\ntype Props = {\n  open: boolean\n  app: SafeAppData\n  onClose: () => void\n  onConfirm: (appId: number) => void\n}\n\nconst RemoveCustomAppModal = ({ open, onClose, onConfirm, app }: Props) => (\n  <ModalDialog open={open} onClose={onClose} dialogTitle=\"Confirm Safe App removal\">\n    <DialogContent>\n      <Typography variant=\"h6\" pt={3}>\n        Are you sure you want to remove the <b>{app.name}</b> app?\n      </Typography>\n    </DialogContent>\n    <DialogActions disableSpacing>\n      <Button onClick={onClose}>Cancel</Button>\n      <Button variant=\"danger\" onClick={() => onConfirm(app.id)}>\n        Remove\n      </Button>\n    </DialogActions>\n  </ModalDialog>\n)\n\nexport { RemoveCustomAppModal }\n","import { useState } from 'react'\nimport type { NextPage } from 'next'\nimport Head from 'next/head'\n\nimport { useSafeApps } from '@/hooks/safe-apps/useSafeApps'\nimport SafeAppsHeader from '@/components/safe-apps/SafeAppsHeader'\nimport SafeAppList from '@/components/safe-apps/SafeAppList'\nimport SafeAppsSDKLink from '@/components/safe-apps/SafeAppsSDKLink'\nimport { RemoveCustomAppModal } from '@/components/safe-apps/RemoveCustomAppModal'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\n\nconst CustomSafeApps: NextPage = () => {\n  // TODO: create a custom hook instead of use useSafeApps\n  const { customSafeApps, addCustomApp, removeCustomApp } = useSafeApps()\n\n  const [isOpenRemoveSafeAppModal, setIsOpenRemoveSafeAppModal] = useState<boolean>(false)\n  const [customSafeAppToRemove, setCustomSafeAppToRemove] = useState<SafeAppData>()\n\n  const openRemoveCustomAppModal = (customSafeAppToRemove: SafeAppData) => {\n    setIsOpenRemoveSafeAppModal(true)\n    setCustomSafeAppToRemove(customSafeAppToRemove)\n  }\n\n  const onConfirmRemoveCustomAppModal = (safeAppId: number) => {\n    removeCustomApp(safeAppId)\n    setIsOpenRemoveSafeAppModal(false)\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{'Custom Safe Apps'}</title>\n      </Head>\n\n      <SafeAppsSDKLink />\n\n      <SafeAppsHeader />\n\n      <main>\n        <SafeAppList\n          safeAppsList={customSafeApps}\n          addCustomApp={addCustomApp}\n          removeCustomApp={openRemoveCustomAppModal}\n        />\n      </main>\n\n      {/* remove custom safe app modal */}\n      {customSafeAppToRemove && (\n        <RemoveCustomAppModal\n          open={isOpenRemoveSafeAppModal}\n          app={customSafeAppToRemove}\n          onClose={() => setIsOpenRemoveSafeAppModal(false)}\n          onConfirm={onConfirmRemoveCustomAppModal}\n        />\n      )}\n    </>\n  )\n}\n\nexport default CustomSafeApps\n"],"names":["window","__NEXT_P","push","RemoveCustomAppModal","open","onClose","onConfirm","app","ModalDialog","dialogTitle","DialogContent","Typography","variant","pt","b","name","DialogActions","disableSpacing","Button","onClick","id","useSafeApps","customSafeApps","addCustomApp","removeCustomApp","useState","isOpenRemoveSafeAppModal","setIsOpenRemoveSafeAppModal","customSafeAppToRemove","setCustomSafeAppToRemove","Head","title","SafeAppsSDKLink","SafeAppsHeader","main","SafeAppList","safeAppsList","safeAppId"],"sourceRoot":""}