{"version":3,"file":"static/chunks/pages/balances/nfts-e68c5732a6966b7e.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/FilterAlt.js","webpack://_N_E/./node_modules/@mui/material/CardHeader/cardHeaderClasses.js","webpack://_N_E/./node_modules/@mui/material/CardHeader/CardHeader.js","webpack://_N_E/?e325","webpack://_N_E/./src/components/balances/AssetsHeader/index.tsx","webpack://_N_E/./src/components/common/InfiniteScroll/index.tsx","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/common/Sticky/index.tsx","webpack://_N_E/./src/hooks/useCollectibles.ts","webpack://_N_E/./public/images/common/nft.svg","webpack://_N_E/./src/components/nfts/config.ts","webpack://_N_E/./public/images/common/arrow-nw.svg","webpack://_N_E/./src/services/analytics/events/nfts.ts","webpack://_N_E/./src/components/nfts/NftGrid/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/NftTransfer/SendNftBatch.tsx","webpack://_N_E/./src/components/nfts/NftSendForm/index.tsx","webpack://_N_E/./src/components/nfts/NftPreviewModal/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/NftTransfer/ReviewNftBatch.tsx","webpack://_N_E/./src/components/tx-flow/flows/NftTransfer/index.tsx","webpack://_N_E/./src/components/nfts/NftCollections/index.tsx","webpack://_N_E/./src/pages/balances/nfts.tsx","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/./src/components/common/PageHeader/styles.module.css","webpack://_N_E/./src/components/nfts/NftPreviewModal/styles.module.css"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/balances/nfts\",\n      function () {\n        return require(\"private-next-pages/balances/nfts.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/balances/nfts\"])\n      });\n    }\n  ","import type { ReactElement, ReactNode } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { balancesNavItems } from '@/components/sidebar/SidebarNavigation/config'\n\nimport css from '@/components/common/PageHeader/styles.module.css'\n\nconst AssetsHeader = ({ children }: { children?: ReactNode }): ReactElement => {\n  return (\n    <PageHeader\n      title=\"Assets\"\n      action={\n        <div className={css.pageHeader}>\n          <div className={css.navWrapper}>\n            <NavTabs tabs={balancesNavItems} />\n          </div>\n          {children && <div className={css.actionsWrapper}>{children}</div>}\n        </div>\n      }\n    />\n  )\n}\n\nexport default AssetsHeader\n","import { useEffect, useRef, type ReactElement } from 'react'\nimport useOnceVisible from '@/hooks/useOnceVisible'\n\nconst InfiniteScroll = ({ onLoadMore }: { onLoadMore: () => void }): ReactElement => {\n  const elementRef = useRef<HTMLDivElement | null>(null)\n  const isVisible = useOnceVisible(elementRef)\n\n  useEffect(() => {\n    if (isVisible) {\n      onLoadMore()\n    }\n  }, [isVisible, onLoadMore])\n\n  return <div ref={elementRef} />\n}\n\nexport default InfiniteScroll\n","import React, { forwardRef } from 'react'\nimport NextLink, { type LinkProps as NextLinkProps } from 'next/link'\nimport { Tab, Tabs, Typography, type TabProps } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\ntype Props = TabProps & NextLinkProps\n\n// This is needed in order for the tabs to work properly with Next Link e.g. tabbing with the keyboard\n// Based on https://github.com/mui/material-ui/blob/master/examples/nextjs-with-typescript/src/Link.tsx\nconst NextLinkComposed = forwardRef<HTMLAnchorElement, Props>(function NextComposedLink(props: Props, ref) {\n  const { href, as, replace, scroll, shallow, prefetch, legacyBehavior = true, locale, ...other } = props\n\n  return (\n    <NextLink\n      href={href}\n      prefetch={prefetch}\n      as={as}\n      replace={replace}\n      scroll={scroll}\n      shallow={shallow}\n      passHref\n      locale={locale}\n      legacyBehavior={legacyBehavior}\n    >\n      {/* @ts-ignore */}\n      <a ref={ref} {...other} />\n    </NextLink>\n  )\n})\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          component={NextLinkComposed}\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import { Box } from '@mui/material'\nimport type { ReactElement } from 'react'\n\nconst stickyTop = { xs: '103px', md: '111px' }\nexport const Sticky = ({ children }: { children: ReactElement }): ReactElement => (\n  <Box position=\"sticky\" zIndex=\"1\" top={stickyTop} py={1} bgcolor=\"background.main\" mt={-1} mb={1}>\n    {children}\n  </Box>\n)\n","import { useEffect } from 'react'\nimport { getCollectiblesPage, type SafeCollectiblesPage } from '@safe-global/safe-gateway-typescript-sdk'\nimport useAsync, { type AsyncResult } from './useAsync'\nimport { Errors, logError } from '@/services/exceptions'\nimport useSafeInfo from './useSafeInfo'\n\nexport const useCollectibles = (pageUrl?: string): AsyncResult<SafeCollectiblesPage> => {\n  const { safe, safeAddress } = useSafeInfo()\n\n  const [data, error, loading] = useAsync<SafeCollectiblesPage>(() => {\n    if (!safeAddress) return\n    return getCollectiblesPage(safe.chainId, safeAddress, undefined, pageUrl)\n  }, [safeAddress, safe.chainId, pageUrl])\n\n  // Log errors\n  useEffect(() => {\n    if (error) {\n      logError(Errors._604, error.message)\n    }\n  }, [error])\n\n  return [data, error, loading || !safeAddress]\n}\n\nexport default useCollectibles\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nvar SvgNft = function SvgNft(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.9688 20.9422H8.87817V25.5644H54.9688V20.9422Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.4301 23.84L55.8541 23.3991C55.2354 22.9262 55.111 22.0444 55.5768 21.4222L56.0141 20.8356C56.7252 19.9004 56.4123 18.752 55.5946 17.7884L49.6355 9.44356C48.7395 8.18844 47.2923 7.44178 45.7492 7.44178H18.2328C16.6897 7.44178 15.2426 8.18844 14.3466 9.44356L8.40167 17.7884C7.58389 18.752 7.27456 19.8969 7.98212 20.8356L8.41945 21.4222C8.88167 22.048 8.76078 22.9262 8.14212 23.3991L7.56612 23.84C6.63101 24.5511 6.44612 25.8844 7.15723 26.8196L28.0994 55.9787C28.4123 56.3876 28.8959 56.6293 29.4115 56.6293H34.5777C35.0932 56.6293 35.5768 56.3876 35.8897 55.9787L56.8426 26.8196C57.5537 25.8844 57.3688 24.5476 56.4337 23.84H56.4301ZM32.4657 52.3982C32.2274 52.7111 31.7581 52.7111 31.5199 52.3982L10.5706 23.6729C10.3323 23.36 10.4106 22.9049 10.6417 22.5956L17.2657 13.312C17.8239 12.5262 18.727 12.064 19.6906 12.064H44.2915C45.255 12.064 46.1581 12.5298 46.7163 13.312L53.351 22.5956C53.5857 22.9049 53.6603 23.3636 53.4221 23.6729L32.4621 52.3982H32.4657Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgNft;","import chains from '@/config/chains'\nimport type { SafeCollectibleResponse } from '@safe-global/safe-gateway-typescript-sdk'\n\ntype NftPlatform = {\n  title: string\n  logo: string\n  getUrl: (nft: SafeCollectibleResponse) => string\n}\n\nexport const nftPlatforms: Record<keyof typeof chains, Array<NftPlatform>> = {\n  [chains.eth]: [\n    {\n      title: 'Etherscan',\n      logo: '/images/common/nft-etherscan.svg',\n      getUrl: (item) => `https://etherscan.io/nft/${item.address}/${item.id}`,\n    },\n    {\n      title: 'OpenSea',\n      logo: '/images/common/nft-opensea.svg',\n      getUrl: (item) => `https://opensea.io/assets/ethereum/${item.address}/${item.id}`,\n    },\n    {\n      title: 'Blur',\n      logo: '/images/common/nft-blur.svg',\n      getUrl: (item) => `https://blur.io/asset/${item.address.toLowerCase()}/${item.id}`,\n    },\n    {\n      title: 'Zerion',\n      logo: '/images/common/nft-zerion.svg',\n      getUrl: (item) => `https://app.zerion.io/nfts/ethereum/${item.address.toLowerCase()}:${item.id}`,\n    },\n  ],\n\n  [chains.matic]: [\n    {\n      title: 'PolygonScan',\n      logo: '/images/common/nft-polygonscan.svg',\n      getUrl: (item) => `https://polygonscan.com/token/${item.address}?a=${item.id}`,\n    },\n    {\n      title: 'OpenSea',\n      logo: '/images/common/nft-opensea.svg',\n      getUrl: (item) => `https://opensea.io/assets/matic/${item.address}/${item.id}`,\n    },\n    {\n      title: 'Zerion',\n      logo: '/images/common/nft-zerion.svg',\n      getUrl: (item) => `https://app.zerion.io/nfts/polygon/${item.address.toLowerCase()}:${item.id}`,\n    },\n  ],\n\n  [chains.gno]: [\n    {\n      title: 'GnosisScan',\n      logo: '/images/common/nft-gnosisscan.svg',\n      getUrl: (item) => `https://gnosisscan.io/nft/${item.address}/${item.id}`,\n    },\n    {\n      title: 'Zerion',\n      logo: '/images/common/nft-zerion.svg',\n      getUrl: (item) => `https://app.zerion.io/nfts/xdai/${item.address.toLowerCase()}:${item.id}`,\n    },\n  ],\n\n  [chains.gor]: [\n    {\n      title: 'OpenSea',\n      logo: '/images/common/nft-opensea.svg',\n      getUrl: (item) => `https://testnets.opensea.io/assets/${item.address}/${item.id}`,\n    },\n  ],\n\n  [chains.oeth]: [\n    {\n      title: 'OpenSea',\n      logo: '/images/common/nft-opensea.svg',\n      getUrl: (item) => `https://opensea.io/assets/optimism/${item.address}/${item.id}`,\n    },\n    {\n      title: 'Zerion',\n      logo: '/images/common/nft-zerion.svg',\n      getUrl: (item) => `https://app.zerion.io/nfts/optimism/${item.address.toLowerCase()}:${item.id}`,\n    },\n  ],\n\n  [chains.arb1]: [\n    {\n      title: 'OpenSea',\n      logo: '/images/common/nft-opensea.svg',\n      getUrl: (item) => `https://opensea.io/assets/arbitrum/${item.address}/${item.id}`,\n    },\n    {\n      title: 'Zerion',\n      logo: '/images/common/nft-zerion.svg',\n      getUrl: (item) => `https://app.zerion.io/nfts/arbitrum/${item.address.toLowerCase()}:${item.id}`,\n    },\n  ],\n\n  [chains.avax]: [\n    {\n      title: 'OpenSea',\n      logo: '/images/common/nft-opensea.svg',\n      getUrl: (item) => `https://opensea.io/assets/avalanche/${item.address}/${item.id}`,\n    },\n  ],\n\n  [chains.bnb]: [\n    {\n      title: 'OpenSea',\n      logo: '/images/common/nft-opensea.svg',\n      getUrl: (item) => `https://opensea.io/assets/bsc/${item.address}/${item.id}`,\n    },\n  ],\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nvar SvgArrowNw = function SvgArrowNw(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7.88225 2.41212L4.76364 2.41212C4.09755 2.41212 3.55757 1.87215 3.55757 1.20606C3.55757 0.539972 4.09755 3.58219e-07 4.76364 4.1645e-07L10.7939 9.43636e-07C11.127 9.72752e-07 11.4285 0.134994 11.6468 0.353248C11.865 0.571502 12 0.873017 12 1.20606L12 7.23637C12 7.90245 11.46 8.44243 10.7939 8.44243C10.1278 8.44243 9.58788 7.90245 9.58788 7.23637L9.58788 4.11775L2.05887 11.6468C1.58788 12.1177 0.824242 12.1177 0.353246 11.6468C-0.11775 11.1758 -0.11775 10.4121 0.353246 9.94113L7.88225 2.41212Z\",\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgArrowNw;","const NFT_CATEGORY = 'nfts'\n\nexport const NFT_EVENTS = {\n  SEND: {\n    action: 'Send NFTs',\n    category: NFT_CATEGORY,\n  },\n\n  PREVIEW: {\n    action: 'Preview NFT',\n    category: NFT_CATEGORY,\n  },\n}\n","import type { Dispatch, ReactNode, SetStateAction, SyntheticEvent } from 'react'\nimport { useMemo, useState } from 'react'\nimport { useCallback } from 'react'\nimport { type ReactElement } from 'react'\nimport {\n  Box,\n  Checkbox,\n  InputAdornment,\n  Paper,\n  Skeleton,\n  SvgIcon,\n  type SvgIconProps,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n  Tooltip,\n} from '@mui/material'\nimport FilterAltIcon from '@mui/icons-material/FilterAlt'\nimport NftIcon from '@/public/images/common/nft.svg'\nimport type { SafeCollectibleResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport useChainId from '@/hooks/useChainId'\nimport { nftPlatforms } from '../config'\nimport EthHashInfo from '@/components/common/EthHashInfo'\n\ninterface NftsTableProps {\n  nfts: SafeCollectibleResponse[]\n  selectedNfts: SafeCollectibleResponse[]\n  setSelectedNfts: Dispatch<SetStateAction<SafeCollectibleResponse[]>>\n  isLoading: boolean\n  children?: ReactNode\n  onPreview: (item: SafeCollectibleResponse) => void\n}\n\nconst PAGE_SIZE = 10\nconst INITIAL_SKELETON_SIZE = 3\n\nconst headCells = [\n  {\n    id: 'collection',\n    label: 'Collection',\n    width: '35%',\n  },\n  {\n    id: 'id',\n    label: 'Token ID',\n    width: '35%',\n  },\n  {\n    id: 'links',\n    label: 'Links',\n    width: '23%',\n    xsHidden: true,\n  },\n  {\n    id: 'checkbox',\n    label: '',\n    width: '7%',\n    textAlign: 'right',\n  },\n]\n\nconst stopPropagation = (e: SyntheticEvent) => e.stopPropagation()\n\nconst NftIndicator = ({ color }: { color: SvgIconProps['color'] }) => (\n  <SvgIcon component={NftIcon} inheritViewBox width={20} height={20} color={color} sx={{ ml: 0.25 }} />\n)\n\nconst activeNftIcon = <NftIndicator color=\"primary\" />\n\nconst inactiveNftIcon = (\n  <Tooltip title=\"There's no preview for this NFT\" placement=\"top\" arrow>\n    <span>\n      <NftIndicator color=\"border\" />\n    </span>\n  </Tooltip>\n)\n\nconst NftGrid = ({\n  nfts,\n  selectedNfts,\n  setSelectedNfts,\n  isLoading,\n  children,\n  onPreview,\n}: NftsTableProps): ReactElement => {\n  const chainId = useChainId()\n  const linkTemplates = nftPlatforms[chainId]\n  // Filter string\n  const [filter, setFilter] = useState<string>('')\n\n  const onFilterChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setFilter(e.target.value.toLowerCase())\n    },\n    [setFilter],\n  )\n\n  const onCheckboxClick = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>, item: SafeCollectibleResponse) => {\n      e.stopPropagation()\n      const { checked } = e.target\n      setSelectedNfts((prev) => (checked ? prev.concat(item) : prev.filter((el) => el !== item)))\n    },\n    [setSelectedNfts],\n  )\n\n  // Filter by collection name or token address\n  const filteredNfts = useMemo(() => {\n    return filter\n      ? nfts.filter((nft) => nft.tokenName.toLowerCase().includes(filter) || nft.address.toLowerCase().includes(filter))\n      : nfts\n  }, [nfts, filter])\n\n  const onSelectAll = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setSelectedNfts(e.target.checked ? filteredNfts : [])\n    },\n    [filteredNfts, setSelectedNfts],\n  )\n\n  const minRows = Math.min(nfts.length, PAGE_SIZE)\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table aria-labelledby=\"tableTitle\">\n          <TableHead>\n            <TableRow>\n              {headCells.map((headCell) => (\n                <TableCell\n                  key={headCell.id}\n                  align=\"left\"\n                  padding=\"normal\"\n                  sx={{\n                    display: headCell.xsHidden ? { xs: 'none', sm: 'table-cell' } : undefined,\n                    width: headCell.width,\n                    'text-align': headCell.textAlign,\n                  }}\n                >\n                  {headCell.id === 'collection' ? (\n                    <Box display=\"flex\" alignItems=\"center\" alignContent=\"center\" gap={1}>\n                      <TextField\n                        placeholder=\"Collection\"\n                        hiddenLabel\n                        variant=\"standard\"\n                        size=\"small\"\n                        margin=\"none\"\n                        onChange={onFilterChange}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <SvgIcon\n                                component={FilterAltIcon}\n                                inheritViewBox\n                                color=\"border\"\n                                sx={{ marginTop: -0.5 }}\n                              />\n                            </InputAdornment>\n                          ),\n                          disableUnderline: true,\n                        }}\n                      />\n                    </Box>\n                  ) : headCell.id === 'links' ? (\n                    linkTemplates ? (\n                      <>Links</>\n                    ) : null\n                  ) : headCell.id === 'checkbox' ? (\n                    <Checkbox\n                      checked={filteredNfts.length > 0 && filteredNfts.length === selectedNfts.length}\n                      onChange={onSelectAll}\n                      title=\"Select all\"\n                    />\n                  ) : (\n                    headCell.label\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {filteredNfts.map((item, index) => {\n              const onClick = () => onPreview(item)\n              const sx = item.imageUri ? { cursor: 'pointer' } : undefined\n\n              return (\n                <TableRow tabIndex={-1} key={`${item.address}-${item.id}`}>\n                  {/* Collection name */}\n                  <TableCell onClick={onClick} sx={sx}>\n                    <Box display=\"flex\" alignItems=\"center\" gap={2}>\n                      {item.imageUri ? activeNftIcon : inactiveNftIcon}\n\n                      <div>\n                        <Typography>{item.tokenName || item.tokenSymbol}</Typography>\n\n                        <Typography fontSize=\"small\" color=\"text.secondary\" component=\"div\">\n                          <EthHashInfo\n                            address={item.address}\n                            showAvatar={false}\n                            showName={false}\n                            showCopyButton\n                            hasExplorer\n                          />\n                        </Typography>\n                      </div>\n                    </Box>\n                  </TableCell>\n\n                  {/* Token ID */}\n                  <TableCell onClick={onClick} sx={sx}>\n                    <Typography sx={item.name ? undefined : { wordBreak: 'break-all' }}>\n                      {item.name || `${item.tokenSymbol} #${item.id.slice(0, 20)}`}\n                    </Typography>\n                  </TableCell>\n\n                  {/* Links */}\n                  <TableCell sx={{ display: { xs: 'none', sm: 'table-cell' } }}>\n                    <Box display=\"flex\" alignItems=\"center\" alignContent=\"center\" gap={2.5}>\n                      {linkTemplates?.map(({ title, logo, getUrl }) => (\n                        <ExternalLink href={getUrl(item)} key={title} onClick={stopPropagation} noIcon>\n                          <img src={logo} width={24} height={24} alt={title} />\n                        </ExternalLink>\n                      ))}\n                    </Box>\n                  </TableCell>\n\n                  {/* Checkbox */}\n                  <TableCell align=\"right\">\n                    <Checkbox checked={selectedNfts.includes(item)} onChange={(e) => onCheckboxClick(e, item)} />\n\n                    {/* Insert the children at the end of the table */}\n                    {index === filteredNfts.length - 1 && children}\n                  </TableCell>\n                </TableRow>\n              )\n            })}\n\n            {/* Fill up the table up to min rows when filtering */}\n            {filter &&\n              Array.from({ length: minRows - filteredNfts.length }).map((_, index) => (\n                <TableRow tabIndex={-1} key={index} sx={{ pointerEvents: 'none' }}>\n                  {headCells.map((headCell) => (\n                    <TableCell\n                      key={headCell.id}\n                      sx={headCell.xsHidden ? { display: { xs: 'none', sm: 'table-cell' } } : undefined}\n                    >\n                      <Box height=\"42px\" width=\"42px\" />\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n\n            {/* Show placeholders when loading */}\n            {isLoading &&\n              Array.from({ length: nfts.length ? PAGE_SIZE : INITIAL_SKELETON_SIZE }).map((_, index) => (\n                <TableRow tabIndex={-1} key={index} sx={{ pointerEvents: 'none' }}>\n                  {headCells.map((headCell) => (\n                    <TableCell\n                      key={headCell.id}\n                      sx={headCell.xsHidden ? { display: { xs: 'none', sm: 'table-cell' } } : undefined}\n                    >\n                      <Skeleton variant=\"rounded\" height=\"30px\" sx={{ my: '6px' }} width=\"100%\" />\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default NftGrid\n","import { useState } from 'react'\nimport { Box, Button, CardActions, Divider, FormControl, Grid, SvgIcon, Typography } from '@mui/material'\nimport { type SafeCollectibleResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport NftIcon from '@/public/images/common/nft.svg'\nimport AddressBookInput from '@/components/common/AddressBookInput'\nimport type { NftTransferParams } from '.'\nimport ImageFallback from '@/components/common/ImageFallback'\nimport useAddressBook from '@/hooks/useAddressBook'\nimport TxCard from '../../common/TxCard'\nimport AddressInputReadOnly from '@/components/common/AddressInputReadOnly'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\n\nenum Field {\n  recipient = 'recipient',\n}\n\ntype FormData = Pick<NftTransferParams, Field.recipient>\n\ntype SendNftBatchProps = {\n  onSubmit: (data: NftTransferParams) => void\n  params: NftTransferParams\n}\n\nconst NftItem = ({ image, name, description }: { image: string; name: string; description?: string }) => (\n  <Grid container gap={2} alignItems=\"center\" wrap=\"nowrap\">\n    <Grid item>\n      <Box width={40} height={40}>\n        <ImageFallback\n          src={image}\n          fallbackSrc=\"\"\n          fallbackComponent={<SvgIcon component={NftIcon} inheritViewBox sx={{ width: 1, height: 1 }} />}\n          alt={name}\n          height={40}\n        />\n      </Box>\n    </Grid>\n\n    <Grid item overflow=\"hidden\">\n      <Typography variant=\"body2\" fontWeight={700} whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\">\n        {name}\n      </Typography>\n\n      {description && (\n        <Typography\n          variant=\"body2\"\n          color=\"text.secondary\"\n          whiteSpace=\"nowrap\"\n          display=\"block\"\n          overflow=\"hidden\"\n          textOverflow=\"ellipsis\"\n        >\n          {description}\n        </Typography>\n      )}\n    </Grid>\n  </Grid>\n)\n\nexport const NftItems = ({ tokens }: { tokens: SafeCollectibleResponse[] }) => {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gap={2} overflow=\"auto\" maxHeight=\"20vh\" minHeight=\"40px\">\n      {tokens.map((token) => (\n        <NftItem\n          key={`${token.address}-${token.id}`}\n          image={token.imageUri || token.logoUri}\n          name={`${token.tokenName || token.tokenSymbol || ''} #${token.id}`}\n          description={`Token ID: ${token.id}${token.name ? ` - ${token.name}` : ''}`}\n        />\n      ))}\n    </Box>\n  )\n}\n\nconst SendNftBatch = ({ params, onSubmit }: SendNftBatchProps) => {\n  const [recipientFocus, setRecipientFocus] = useState(false)\n  const addressBook = useAddressBook()\n  const { tokens } = params\n\n  const formMethods = useForm<FormData>({\n    defaultValues: {\n      [Field.recipient]: params.recipient,\n    },\n  })\n  const {\n    handleSubmit,\n    watch,\n    setValue,\n    formState: { errors },\n  } = formMethods\n\n  const recipient = watch(Field.recipient)\n  const isAddressValid = !!recipient && !errors[Field.recipient]\n\n  const onFormSubmit = (data: FormData) => {\n    onSubmit({\n      recipient: data.recipient,\n      tokens,\n    })\n  }\n\n  return (\n    <TxCard>\n      <FormProvider {...formMethods}>\n        <form onSubmit={handleSubmit(onFormSubmit)}>\n          <FormControl fullWidth sx={{ mb: 3, mt: 1 }}>\n            {/* TODO: Extract this */}\n            {addressBook[recipient] ? (\n              <Box\n                onClick={() => {\n                  setValue(Field.recipient, '')\n                  setRecipientFocus(true)\n                }}\n              >\n                <AddressInputReadOnly label=\"Sending to\" address={recipient} />\n              </Box>\n            ) : (\n              <AddressBookInput\n                name={Field.recipient}\n                label=\"Recipient address or ENS\"\n                canAdd={isAddressValid}\n                focused={recipientFocus}\n              />\n            )}\n          </FormControl>\n\n          <Typography variant=\"body2\" color=\"text.secondary\" mb={2}>\n            Selected NFTs\n          </Typography>\n\n          <NftItems tokens={tokens} />\n\n          <Divider className={commonCss.nestedDivider} sx={{ pt: 3 }} />\n\n          <CardActions>\n            <Button variant=\"contained\" type=\"submit\">\n              Next\n            </Button>\n          </CardActions>\n        </form>\n      </FormProvider>\n    </TxCard>\n  )\n}\n\nexport default SendNftBatch\n","import type { ReactElement } from 'react'\nimport { Box, Button, Grid, SvgIcon, Typography } from '@mui/material'\nimport ArrowIcon from '@/public/images/common/arrow-nw.svg'\nimport type { SafeCollectibleResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport { Sticky } from '@/components/common/Sticky'\nimport CheckWallet from '@/components/common/CheckWallet'\n\ntype NftSendFormProps = {\n  selectedNfts: SafeCollectibleResponse[]\n}\n\nconst NftSendForm = ({ selectedNfts }: NftSendFormProps): ReactElement => {\n  const nftsText = `NFT${selectedNfts.length === 1 ? '' : 's'}`\n  const noSelected = selectedNfts.length === 0\n\n  return (\n    <Sticky>\n      <Grid container spacing={1} justifyContent=\"flex-end\" alignItems=\"center\">\n        <Grid item display={['none', 'block']} flex=\"1\">\n          <Box bgcolor=\"secondary.background\" py={0.75} px={2} flex={1} borderRadius={1} mr={1}>\n            <Box display=\"flex\" alignItems=\"center\" gap={1.5}>\n              <SvgIcon component={ArrowIcon} inheritViewBox color=\"border\" sx={{ width: 12, height: 12 }} />\n\n              <Typography variant=\"body2\" lineHeight=\"inherit\">\n                {`${selectedNfts.length} ${nftsText} selected`}\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item>\n          <CheckWallet>\n            {(isOk) => (\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"small\"\n                disabled={!isOk || noSelected}\n                sx={{\n                  minWidth: '10em',\n                }}\n              >\n                {noSelected ? 'Send' : `Send ${selectedNfts.length} ${nftsText}`}\n              </Button>\n            )}\n          </CheckWallet>\n        </Grid>\n      </Grid>\n    </Sticky>\n  )\n}\n\nexport default NftSendForm\n","import type { SafeCollectibleResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport ModalDialog from '@/components/common/ModalDialog'\nimport css from './styles.module.css'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { nftPlatforms } from '../config'\nimport useChainId from '@/hooks/useChainId'\nimport { CircularProgress } from '@mui/material'\n\nconst NftPreviewModal = ({ nft, onClose }: { nft?: SafeCollectibleResponse; onClose: () => void }) => {\n  const chainId = useChainId()\n  const linkTemplate = nftPlatforms[chainId]?.[0]\n  const title = nft ? nft.name || `${nft.tokenSymbol} #${nft.id.slice(0, 20)}` : ''\n\n  return (\n    <ModalDialog\n      open={!!nft?.imageUri}\n      onClose={onClose}\n      dialogTitle={title}\n      fullScreen\n      sx={{ margin: [0, 2], '.MuiPaper-root': { borderRadius: [0, '6px'] } }}\n    >\n      {nft && (\n        <div className={css.wrapper}>\n          <div className={css.imageWrapper} onClick={onClose}>\n            <img src={nft.imageUri} alt={nft.name} />\n\n            <CircularProgress className={css.loader} />\n          </div>\n\n          {linkTemplate && <ExternalLink href={linkTemplate.getUrl(nft)}>View on {linkTemplate.title}</ExternalLink>}\n        </div>\n      )}\n    </ModalDialog>\n  )\n}\n\nexport default NftPreviewModal\n","import { type ReactElement, useEffect, useContext } from 'react'\nimport { Grid, Typography } from '@mui/material'\nimport SendToBlock from '@/components/tx-flow/flows/TokenTransfer/SendToBlock'\nimport { createNftTransferParams } from '@/services/tx/tokenTransferParams'\nimport type { NftTransferParams } from '.'\nimport useSafeAddress from '@/hooks/useSafeAddress'\nimport { createMultiSendCallOnlyTx, createTx } from '@/services/tx/tx-sender'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport { NftItems } from '@/components/tx-flow/flows/NftTransfer/SendNftBatch'\n\ntype ReviewNftBatchProps = {\n  params: NftTransferParams\n  onSubmit: () => void\n  txNonce?: number\n}\n\nconst ReviewNftBatch = ({ params, onSubmit, txNonce }: ReviewNftBatchProps): ReactElement => {\n  const { setSafeTx, setSafeTxError, setNonce } = useContext(SafeTxContext)\n  const safeAddress = useSafeAddress()\n  const { tokens } = params\n\n  useEffect(() => {\n    if (txNonce !== undefined) {\n      setNonce(txNonce)\n    }\n  }, [txNonce, setNonce])\n\n  useEffect(() => {\n    if (!safeAddress) return\n\n    const calls = params.tokens.map((token) => {\n      return createNftTransferParams(safeAddress, params.recipient, token.id, token.address)\n    })\n\n    const promise = calls.length > 1 ? createMultiSendCallOnlyTx(calls) : createTx(calls[0])\n\n    promise.then(setSafeTx).catch(setSafeTxError)\n  }, [safeAddress, params, setSafeTx, setSafeTxError])\n\n  return (\n    <SignOrExecuteForm onSubmit={onSubmit}>\n      <Grid container gap={1} mb={2}>\n        <Grid item md>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Send\n          </Typography>\n        </Grid>\n\n        <Grid item xs md={10}>\n          <NftItems tokens={tokens} />\n        </Grid>\n      </Grid>\n\n      <SendToBlock address={params.recipient} />\n    </SignOrExecuteForm>\n  )\n}\n\nexport default ReviewNftBatch\n","import type { SafeCollectibleResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport NftIcon from '@/public/images/common/nft.svg'\nimport TxLayout from '@/components/tx-flow/common/TxLayout'\nimport useTxStepper from '../../useTxStepper'\nimport SendNftBatch from './SendNftBatch'\nimport ReviewNftBatch from './ReviewNftBatch'\n\nexport type NftTransferParams = {\n  recipient: string\n  tokens: SafeCollectibleResponse[]\n}\n\ntype NftTransferFlowProps = Partial<NftTransferParams> & {\n  txNonce?: number\n}\n\nconst defaultParams: NftTransferParams = {\n  recipient: '',\n  tokens: [],\n}\n\nconst NftTransferFlow = ({ txNonce, ...params }: NftTransferFlowProps) => {\n  const { data, step, nextStep, prevStep } = useTxStepper<NftTransferParams>({\n    ...defaultParams,\n    ...params,\n  })\n\n  const steps = [\n    <SendNftBatch key={0} params={data} onSubmit={(formData) => nextStep({ ...data, ...formData })} />,\n\n    <ReviewNftBatch key={1} params={data} txNonce={txNonce} onSubmit={() => null} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'New transaction' : 'Confirm transaction'}\n      subtitle=\"Send NFTs\"\n      icon={NftIcon}\n      step={step}\n      onBack={prevStep}\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default NftTransferFlow\n","import { type SyntheticEvent, type ReactElement, useCallback, useEffect, useState, useContext } from 'react'\nimport { type SafeCollectibleResponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport ErrorMessage from '@/components/tx/ErrorMessage'\nimport PagePlaceholder from '@/components/common/PagePlaceholder'\nimport NftIcon from '@/public/images/common/nft.svg'\nimport useCollectibles from '@/hooks/useCollectibles'\nimport InfiniteScroll from '@/components/common/InfiniteScroll'\nimport { NFT_EVENTS } from '@/services/analytics/events/nfts'\nimport { trackEvent } from '@/services/analytics'\nimport NftGrid from '../NftGrid'\nimport NftSendForm from '../NftSendForm'\nimport NftPreviewModal from '../NftPreviewModal'\nimport { TxModalContext } from '@/components/tx-flow'\nimport NftTransferFlow from '@/components/tx-flow/flows/NftTransfer'\n\nconst NftCollections = (): ReactElement => {\n  // Track the current NFT page url\n  const [pageUrl, setPageUrl] = useState<string>()\n  // Load NFTs from the backend\n  const [nftPage, error, loading] = useCollectibles(pageUrl)\n  // Keep all loaded NFTs in one big array\n  const [allNfts, setAllNfts] = useState<SafeCollectibleResponse[]>([])\n  // Selected NFTs\n  const [selectedNfts, setSelectedNfts] = useState<SafeCollectibleResponse[]>([])\n  // Preview\n  const [previewNft, setPreviewNft] = useState<SafeCollectibleResponse>()\n  // Tx modal\n  const { setTxFlow } = useContext(TxModalContext)\n\n  // On NFT preview click\n  const onPreview = useCallback((token: SafeCollectibleResponse) => {\n    setPreviewNft(token)\n    trackEvent(NFT_EVENTS.PREVIEW)\n  }, [])\n\n  const onSendSubmit = useCallback(\n    (e: SyntheticEvent) => {\n      e.preventDefault()\n\n      if (selectedNfts.length) {\n        // Show the NFT transfer modal\n        setTxFlow(<NftTransferFlow tokens={selectedNfts} />)\n\n        // Track how many NFTs are being sent\n        trackEvent({ ...NFT_EVENTS.SEND, label: selectedNfts.length })\n      }\n    },\n    [selectedNfts, setTxFlow],\n  )\n\n  // Add new NFTs to the accumulated list\n  useEffect(() => {\n    if (nftPage) {\n      setAllNfts((prev) => prev.concat(nftPage.results))\n    }\n  }, [nftPage])\n\n  // No NFTs to display\n  if (nftPage && !nftPage.results.length) {\n    return <PagePlaceholder img={<NftIcon />} text=\"No NFTs available or none detected\" />\n  }\n\n  return (\n    <>\n      {error ? (\n        /* Loading error */\n        <ErrorMessage error={error}>Failed to load NFTs</ErrorMessage>\n      ) : (\n        /* NFTs */\n        <form onSubmit={onSendSubmit}>\n          {/* Batch send form */}\n          <NftSendForm selectedNfts={selectedNfts} />\n\n          {/* NFTs table */}\n          <NftGrid\n            nfts={allNfts}\n            selectedNfts={selectedNfts}\n            setSelectedNfts={setSelectedNfts}\n            onPreview={onPreview}\n            isLoading={loading || !nftPage || !!nftPage?.next}\n          >\n            {/* Infinite scroll at the bottom of the table */}\n            {nftPage?.next ? <InfiniteScroll onLoadMore={() => setPageUrl(nftPage.next)} /> : null}\n          </NftGrid>\n        </form>\n      )}\n\n      {/* NFT preview */}\n      {<NftPreviewModal onClose={() => setPreviewNft(undefined)} nft={previewNft} />}\n    </>\n  )\n}\n\nexport default NftCollections\n","import { type ReactElement, memo } from 'react'\nimport type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { Grid, Skeleton, Typography } from '@mui/material'\nimport AssetsHeader from '@/components/balances/AssetsHeader'\nimport NftCollections from '@/components/nfts/NftCollections'\nimport SafeAppCard from '@/components/safe-apps/SafeAppCard'\nimport { SafeAppsTag } from '@/config/constants'\nimport { useRemoteSafeApps } from '@/hooks/safe-apps/useRemoteSafeApps'\n\n// `React.memo` requires a `displayName`\nconst NftApps = memo(function NftApps(): ReactElement | null {\n  const [nftApps] = useRemoteSafeApps(SafeAppsTag.NFT)\n\n  if (nftApps?.length === 0) {\n    return null\n  }\n\n  return (\n    <Grid item sm={12} lg={3} order={{ lg: 1 }}>\n      <Typography component=\"h2\" variant=\"subtitle1\" fontWeight={700} mb={2} mt={0.75}>\n        NFT Safe Apps\n      </Typography>\n\n      <Grid container spacing={3}>\n        {nftApps ? (\n          nftApps.map((nftSafeApp) => (\n            <Grid item lg={12} md={4} xs={6} key={nftSafeApp.id}>\n              <SafeAppCard safeApp={nftSafeApp} />\n            </Grid>\n          ))\n        ) : (\n          <Grid item lg={12} md={4} xs={6}>\n            <Skeleton variant=\"rounded\" height=\"245px\" />\n          </Grid>\n        )}\n      </Grid>\n    </Grid>\n  )\n})\n\nconst NFTs: NextPage = () => {\n  return (\n    <>\n      <Head>\n        <title>{'Safe{Wallet} – NFTs'}</title>\n      </Head>\n\n      <AssetsHeader />\n\n      <main>\n        <Grid container spacing={3}>\n          <NftApps />\n\n          <Grid item xs>\n            <NftCollections />\n          </Grid>\n        </Grid>\n      </main>\n    </>\n  )\n}\n\nexport default NFTs\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__0HwOj\",\"tab\":\"styles_tab__kSwiT\",\"label\":\"styles_label__kLyY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__dwmnI\",\"title\":\"styles_title__sN5vi\",\"border\":\"styles_border__3FL5Q\",\"pageHeader\":\"styles_pageHeader__E3fR_\",\"actionsWrapper\":\"styles_actionsWrapper__KFmOg\",\"navWrapper\":\"styles_navWrapper__3duqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__yRe8t\",\"imageWrapper\":\"styles_imageWrapper__KEkr1\",\"loader\":\"styles_loader__h_rSY\"};"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","ownerState","classes","composeClasses","useUtilityClasses","type","Typography","variant","children","color","clsx","as","window","__NEXT_P","push","PageHeader","div","css","NavTabs","tabs","balancesNavItems","onLoadMore","elementRef","useRef","isVisible","useOnceVisible","useEffect","NextLinkComposed","forwardRef","href","replace","scroll","shallow","prefetch","legacyBehavior","locale","NextLink","passHref","a","router","useRouter","activeTab","Math","max","map","tab","indexOf","pathname","query","safe","undefined","Tabs","value","allowScrollButtonsMobile","idx","Tab","label","fontWeight","noBorder","Box","classNames","stickyTop","xs","md","Sticky","position","zIndex","top","py","bgcolor","mt","mb","pageUrl","useSafeInfo","safeAddress","useAsync","getCollectiblesPage","chainId","data","error","loading","logError","Errors","message","_path","_path2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","titleId","width","height","viewBox","fill","xmlns","id","NFT_CATEGORY","NFT_EVENTS","SEND","category","PREVIEW","nftPlatforms","chains","logo","getUrl","item","address","toLowerCase","headCells","xsHidden","textAlign","stopPropagation","e","NftIndicator","SvgIcon","NftIcon","inheritViewBox","sx","ml","activeNftIcon","inactiveNftIcon","Tooltip","placement","arrow","span","nfts","selectedNfts","setSelectedNfts","isLoading","onPreview","useChainId","linkTemplates","useState","filter","setFilter","onFilterChange","useCallback","onCheckboxClick","checked","prev","concat","el","filteredNfts","useMemo","nft","tokenName","includes","onSelectAll","minRows","min","TableContainer","Paper","Table","aria-labelledby","TableHead","TableRow","headCell","TableCell","align","sm","alignContent","gap","TextField","placeholder","hiddenLabel","size","margin","onChange","InputProps","startAdornment","InputAdornment","FilterAltIcon","disableUnderline","Checkbox","TableBody","index","onClick","imageUri","cursor","tabIndex","tokenSymbol","fontSize","EthHashInfo","showAvatar","showName","showCopyButton","hasExplorer","wordBreak","slice","ExternalLink","noIcon","img","src","alt","Array","from","_","pointerEvents","Skeleton","my","fillRule","clipRule","nftsText","noSelected","Grid","container","spacing","justifyContent","px","borderRadius","mr","ArrowIcon","lineHeight","CheckWallet","isOk","Button","disabled","minWidth","onClose","linkTemplate","ModalDialog","open","dialogTitle","fullScreen","CircularProgress","Field","recipient","NftItem","image","description","wrap","ImageFallback","fallbackSrc","fallbackComponent","overflow","whiteSpace","textOverflow","NftItems","tokens","flexDirection","maxHeight","minHeight","token","logoUri","params","onSubmit","recipientFocus","setRecipientFocus","addressBook","useAddressBook","formMethods","useForm","defaultValues","handleSubmit","watch","setValue","formState","errors","isAddressValid","TxCard","FormProvider","form","FormControl","fullWidth","AddressInputReadOnly","AddressBookInput","canAdd","focused","Divider","commonCss","pt","CardActions","txNonce","useContext","SafeTxContext","setSafeTx","setSafeTxError","setNonce","useSafeAddress","calls","createNftTransferParams","createMultiSendCallOnlyTx","createTx","then","catch","SignOrExecuteForm","SendToBlock","defaultParams","useTxStepper","step","nextStep","prevStep","steps","SendNftBatch","formData","ReviewNftBatch","TxLayout","subtitle","icon","onBack","setPageUrl","useCollectibles","nftPage","allNfts","setAllNfts","previewNft","setPreviewNft","TxModalContext","setTxFlow","trackEvent","onSendSubmit","preventDefault","NftTransferFlow","results","PagePlaceholder","text","ErrorMessage","NftSendForm","NftGrid","next","InfiniteScroll","NftPreviewModal","NftApps","memo","nftApps","useRemoteSafeApps","SafeAppsTag","lg","order","nftSafeApp","SafeAppCard","safeApp","Head","AssetsHeader","main","NftCollections","module"],"sourceRoot":""}