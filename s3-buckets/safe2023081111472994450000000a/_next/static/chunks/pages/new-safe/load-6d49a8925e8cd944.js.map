{"version":3,"file":"static/chunks/pages/new-safe/load-6d49a8925e8cd944.js","mappings":"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","sources":["webpack://_N_E/?fcbe","webpack://_N_E/./src/components/new-safe/load/steps/SetAddressStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SafeOwnerStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/steps/SafeReviewStep/index.tsx","webpack://_N_E/./src/components/new-safe/load/index.tsx","webpack://_N_E/./src/pages/new-safe/load.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/new-safe/load\",\n      function () {\n        return require(\"private-next-pages/new-safe/load.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/new-safe/load\"])\n      });\n    }\n  ","import type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Divider,\n  Grid,\n  InputAdornment,\n  SvgIcon,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport NameInput from '@/components/common/NameInput'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport css from '@/components/new-safe/create/steps/SetNameStep/styles.module.css'\nimport NetworkSelector from '@/components/common/NetworkSelector'\nimport { useMnemonicSafeName } from '@/hooks/useMnemonicName'\nimport { useAddressResolver } from '@/hooks/useAddressResolver'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport AddressInput from '@/components/common/AddressInput'\nimport React from 'react'\nimport { getSafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport useChainId from '@/hooks/useChainId'\nimport { useAppSelector } from '@/store'\nimport { selectAddedSafes } from '@/store/addedSafesSlice'\nimport { LOAD_SAFE_EVENTS, trackEvent } from '@/services/analytics'\nimport { AppRoutes } from '@/config/routes'\nimport MUILink from '@mui/material/Link'\nimport Link from 'next/link'\n\nenum Field {\n  name = 'name',\n  address = 'address',\n}\n\ntype FormData = {\n  [Field.name]: string\n  [Field.address]: string\n}\n\nconst SetAddressStep = ({ data, onSubmit, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const currentChainId = useChainId()\n  const addedSafes = useAppSelector((state) => selectAddedSafes(state, currentChainId))\n  const formMethods = useForm<FormData>({\n    mode: 'all',\n    defaultValues: {\n      [Field.name]: data.name,\n      [Field.address]: data.address,\n    },\n  })\n\n  const {\n    handleSubmit,\n    formState: { errors, isValid },\n    watch,\n    getValues,\n  } = formMethods\n\n  const safeAddress = watch(Field.address)\n\n  const randomName = useMnemonicSafeName()\n  const { ens, name, resolving } = useAddressResolver(safeAddress)\n\n  // Address book, ENS, mnemonic\n  const fallbackName = name || ens || randomName\n\n  const validateSafeAddress = async (address: string) => {\n    if (addedSafes && Object.keys(addedSafes).includes(address)) {\n      return 'Safe Account is already added'\n    }\n\n    try {\n      await getSafeInfo(currentChainId, address)\n    } catch (error) {\n      return 'Address given is not a valid Safe Account address'\n    }\n  }\n\n  const onFormSubmit = handleSubmit((data: FormData) => {\n    onSubmit({\n      ...data,\n      [Field.name]: data[Field.name] || fallbackName,\n    })\n\n    if (data[Field.name]) {\n      trackEvent(LOAD_SAFE_EVENTS.NAME_SAFE)\n    }\n  })\n\n  const handleBack = () => {\n    const formData = getValues()\n    onBack({\n      ...formData,\n      [Field.name]: formData.name || fallbackName,\n    })\n  }\n\n  return (\n    <FormProvider {...formMethods}>\n      <form onSubmit={onFormSubmit}>\n        <Box className={layoutCss.row}>\n          <Grid container spacing={[3, 1]} mb={3} pr=\"40px\">\n            <Grid item xs={12} md>\n              <NameInput\n                name={Field.name}\n                label={errors?.[Field.name]?.message || 'Name'}\n                placeholder={fallbackName}\n                InputLabelProps={{ shrink: true }}\n                InputProps={{\n                  endAdornment: resolving ? (\n                    <InputAdornment position=\"end\">\n                      <CircularProgress size={20} />\n                    </InputAdornment>\n                  ) : (\n                    <Tooltip\n                      title=\"This name is stored locally and will never be shared with us or any third parties.\"\n                      arrow\n                      placement=\"top\"\n                    >\n                      <InputAdornment position=\"end\">\n                        <SvgIcon component={InfoIcon} inheritViewBox />\n                      </InputAdornment>\n                    </Tooltip>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item order={[-1, 1]}>\n              <Box className={css.select}>\n                <NetworkSelector />\n              </Box>\n            </Grid>\n          </Grid>\n\n          <AddressInput label=\"Safe Account\" validate={validateSafeAddress} name={Field.address} />\n\n          <Typography mt={4}>\n            By continuing you consent to the{' '}\n            <Link href={AppRoutes.terms} passHref>\n              <MUILink>terms of use</MUILink>\n            </Link>{' '}\n            and{' '}\n            <Link href={AppRoutes.privacy} passHref>\n              <MUILink>privacy policy</MUILink>\n            </Link>\n            .\n          </Typography>\n        </Box>\n\n        <Divider />\n\n        <Box className={layoutCss.row}>\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={3}>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n              Back\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" size=\"stretched\" disabled={!isValid}>\n              Next\n            </Button>\n          </Box>\n        </Box>\n      </form>\n    </FormProvider>\n  )\n}\n\nexport default SetAddressStep\n","import React, { useEffect } from 'react'\nimport { getSafeInfo, type SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { FormProvider, useFieldArray, useForm } from 'react-hook-form'\nimport { Box, Button, Divider } from '@mui/material'\n\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport useAsync from '@/hooks/useAsync'\nimport useChainId from '@/hooks/useChainId'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport { OwnerRow } from '@/components/new-safe/OwnerRow'\n\nenum Field {\n  owners = 'owners',\n  threshold = 'threshold',\n}\n\ntype FormData = {\n  [Field.owners]: NamedAddress[]\n  [Field.threshold]: number\n}\n\nconst SafeOwnerStep = ({ data, onSubmit, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const chainId = useChainId()\n  const formMethods = useForm<FormData>({\n    defaultValues: data,\n    mode: 'onChange',\n  })\n  const {\n    handleSubmit,\n    setValue,\n    control,\n    formState: { isValid },\n    getValues,\n  } = formMethods\n\n  const { fields } = useFieldArray({\n    control,\n    name: Field.owners,\n  })\n\n  const [safeInfo] = useAsync<SafeInfo>(() => {\n    if (data.address) {\n      return getSafeInfo(chainId, data.address)\n    }\n  }, [chainId, data.address])\n\n  useEffect(() => {\n    if (!safeInfo) return\n\n    setValue(Field.threshold, safeInfo.threshold)\n\n    const owners = safeInfo.owners.map((owner, i) => ({\n      address: owner.value,\n      name: getValues(`owners.${i}.name`) || '',\n    }))\n\n    setValue(Field.owners, owners)\n  }, [getValues, safeInfo, setValue])\n\n  const handleBack = () => {\n    onBack(getValues())\n  }\n\n  return (\n    <FormProvider {...formMethods}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box className={layoutCss.row}>\n          {fields.map((field, index) => (\n            <OwnerRow key={field.id} index={index} groupName=\"owners\" readOnly />\n          ))}\n        </Box>\n        <Divider />\n        <Box className={layoutCss.row}>\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={3}>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n              Back\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" size=\"stretched\" disabled={!isValid}>\n              Next\n            </Button>\n          </Box>\n        </Box>\n      </form>\n    </FormProvider>\n  )\n}\n\nexport default SafeOwnerStep\n","import React from 'react'\nimport { Box, Button, Divider, Grid, Typography } from '@mui/material'\n\nimport type { StepRenderProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { LoadSafeFormData } from '@/components/new-safe/load'\nimport layoutCss from '@/components/new-safe/create/styles.module.css'\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport ChainIndicator from '@/components/common/ChainIndicator'\nimport css from '@/components/new-safe/create/steps/ReviewStep/styles.module.css'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport { useAppDispatch } from '@/store'\nimport { useRouter } from 'next/router'\nimport { addOrUpdateSafe } from '@/store/addedSafesSlice'\nimport { defaultSafeInfo } from '@/store/safeInfoSlice'\nimport { upsertAddressBookEntry } from '@/store/addressBookSlice'\nimport { LOAD_SAFE_EVENTS, trackEvent } from '@/services/analytics'\nimport { AppRoutes } from '@/config/routes'\nimport ReviewRow from '@/components/new-safe/ReviewRow'\n\nconst SafeReviewStep = ({ data, onBack }: StepRenderProps<LoadSafeFormData>) => {\n  const chain = useCurrentChain()\n  const dispatch = useAppDispatch()\n  const router = useRouter()\n  const chainId = chain?.chainId || ''\n\n  const addSafe = () => {\n    const safeName = data.name\n    const safeAddress = data.address\n\n    dispatch(\n      addOrUpdateSafe({\n        safe: {\n          ...defaultSafeInfo,\n          address: { value: safeAddress, name: safeName },\n          threshold: data.threshold,\n          owners: data.owners.map((owner) => ({\n            value: owner.address,\n            name: owner.name || owner.ens,\n          })),\n          chainId,\n        },\n      }),\n    )\n\n    dispatch(\n      upsertAddressBookEntry({\n        chainId,\n        address: safeAddress,\n        name: safeName,\n      }),\n    )\n\n    for (const { address, name, ens } of data.owners) {\n      const entryName = name || ens\n\n      if (!entryName) {\n        continue\n      }\n\n      dispatch(\n        upsertAddressBookEntry({\n          chainId,\n          address,\n          name: entryName,\n        }),\n      )\n    }\n\n    trackEvent({\n      ...LOAD_SAFE_EVENTS.OWNERS,\n      label: data.owners.length,\n    })\n\n    trackEvent({\n      ...LOAD_SAFE_EVENTS.THRESHOLD,\n      label: data.threshold,\n    })\n\n    trackEvent(LOAD_SAFE_EVENTS.GO_TO_SAFE)\n\n    router.push({\n      pathname: AppRoutes.home,\n      query: { safe: `${chain?.shortName}:${safeAddress}` },\n    })\n  }\n\n  const handleBack = () => {\n    onBack(data)\n  }\n\n  return (\n    <>\n      <Box className={layoutCss.row}>\n        <Grid container spacing={3}>\n          <ReviewRow name=\"Network\" value={<ChainIndicator chainId={chain?.chainId} inline />} />\n          <ReviewRow name=\"Name\" value={<Typography>{data.name}</Typography>} />\n          <ReviewRow\n            name=\"Owners\"\n            value={\n              <Box className={css.ownersArray}>\n                {data.owners.map((owner, index) => (\n                  <EthHashInfo\n                    address={owner.address}\n                    name={owner.name || owner.ens}\n                    shortAddress={false}\n                    showPrefix={false}\n                    showName\n                    hasExplorer\n                    showCopyButton\n                    key={index}\n                  />\n                ))}\n              </Box>\n            }\n          />\n          <ReviewRow\n            name=\"Threshold\"\n            value={\n              <Typography>\n                {data.threshold} out of {data.owners.length} owner(s)\n              </Typography>\n            }\n          />\n        </Grid>\n      </Box>\n      <Divider />\n      <Box className={layoutCss.row}>\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={3}>\n          <Button variant=\"outlined\" size=\"small\" onClick={handleBack} startIcon={<ArrowBackIcon fontSize=\"small\" />}>\n            Back\n          </Button>\n          <Button onClick={addSafe} variant=\"contained\" size=\"stretched\">\n            Add\n          </Button>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default SafeReviewStep\n","import React from 'react'\nimport { useRouter } from 'next/router'\n\nimport { LOAD_SAFE_CATEGORY } from '@/services/analytics'\nimport { Container, Grid, Typography } from '@mui/material'\nimport { CardStepper } from '@/components/new-safe/CardStepper'\nimport type { TxStepperProps } from '@/components/new-safe/CardStepper/useCardStepper'\nimport type { NamedAddress } from '@/components/new-safe/create/types'\nimport SetAddressStep from '@/components/new-safe/load/steps/SetAddressStep'\nimport { AppRoutes } from '@/config/routes'\nimport SafeOwnerStep from '@/components/new-safe/load/steps/SafeOwnerStep'\nimport SafeReviewStep from '@/components/new-safe/load/steps/SafeReviewStep'\n\nexport type LoadSafeFormData = NamedAddress & {\n  threshold: number\n  owners: NamedAddress[]\n}\n\nexport const LoadSafeSteps: TxStepperProps<LoadSafeFormData>['steps'] = [\n  {\n    title: 'Connect wallet & select network',\n    subtitle: 'Select network on which the Safe Account was created',\n    render: (_, onSubmit, onBack, setStep) => (\n      <SetAddressStep onSubmit={onSubmit} onBack={onBack} data={_} setStep={setStep} />\n    ),\n  },\n  {\n    title: 'Owners and confirmations',\n    subtitle: 'Optional: Provide a name for each owner.',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SafeOwnerStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n  {\n    title: 'Review',\n    subtitle: 'Confirm loading Safe Account',\n    render: (data, onSubmit, onBack, setStep) => (\n      <SafeReviewStep onSubmit={onSubmit} onBack={onBack} data={data} setStep={setStep} />\n    ),\n  },\n]\n\nexport const loadSafeDefaultData = { threshold: -1, owners: [], address: '', name: '' }\n\nconst LoadSafe = ({ initialData }: { initialData?: TxStepperProps<LoadSafeFormData>['initialData'] }) => {\n  const router = useRouter()\n\n  const onClose = () => {\n    router.push(AppRoutes.welcome)\n  }\n\n  const initialSafe = initialData ?? loadSafeDefaultData\n\n  return (\n    <Container data-testid=\"load-safe-form\">\n      <Grid container columnSpacing={3} mt={[2, null, 7]} justifyContent=\"center\">\n        <Grid item xs={12} md={10} lg={8}>\n          <Typography variant=\"h2\" pb={2}>\n            Load Safe Account\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={10} lg={8} order={[1, null, 0]}>\n          <CardStepper\n            initialData={initialSafe}\n            onClose={onClose}\n            steps={LoadSafeSteps}\n            eventCategory={LOAD_SAFE_CATEGORY}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default LoadSafe\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport LoadSafe, { loadSafeDefaultData } from '@/components/new-safe/load'\n\nconst Load: NextPage = () => {\n  const router = useRouter()\n  const { address = '' } = router.query\n  const safeAddress = Array.isArray(address) ? address[0] : address\n\n  return (\n    <main>\n      <Head>\n        <title>{'Safe{Wallet} – Add Safe Account'}</title>\n      </Head>\n\n      {safeAddress ? (\n        <LoadSafe initialData={{ ...loadSafeDefaultData, address: safeAddress }} />\n      ) : (\n        <LoadSafe initialData={loadSafeDefaultData} />\n      )}\n    </main>\n  )\n}\n\nexport default Load\n"],"names":["window","__NEXT_P","push","Field","name","address","errors","data","onSubmit","onBack","currentChainId","useChainId","addedSafes","useAppSelector","state","selectAddedSafes","formMethods","useForm","mode","defaultValues","handleSubmit","formState","isValid","watch","getValues","safeAddress","randomName","useMnemonicSafeName","useAddressResolver","ens","resolving","fallbackName","validateSafeAddress","Object","keys","includes","getSafeInfo","onFormSubmit","trackEvent","LOAD_SAFE_EVENTS","FormProvider","form","Box","className","layoutCss","Grid","container","spacing","mb","pr","item","xs","md","NameInput","label","message","placeholder","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","position","CircularProgress","size","Tooltip","title","arrow","placement","SvgIcon","component","InfoIcon","inheritViewBox","order","css","NetworkSelector","AddressInput","validate","Typography","mt","Link","href","AppRoutes","passHref","MUILink","Divider","display","flexDirection","justifyContent","gap","Button","variant","onClick","formData","startIcon","ArrowBackIcon","fontSize","type","disabled","owners","threshold","chainId","setValue","control","useFieldArray","fields","safeInfo","useAsync","useEffect","map","owner","i","value","field","index","OwnerRow","groupName","readOnly","id","chain","useCurrentChain","dispatch","useAppDispatch","router","useRouter","ReviewRow","ChainIndicator","inline","EthHashInfo","shortAddress","showPrefix","showName","hasExplorer","showCopyButton","length","safeName","addOrUpdateSafe","safe","defaultSafeInfo","upsertAddressBookEntry","entryName","pathname","query","shortName","LoadSafeSteps","subtitle","render","_","setStep","SetAddressStep","SafeOwnerStep","SafeReviewStep","loadSafeDefaultData","initialData","initialSafe","Container","data-testid","columnSpacing","lg","pb","CardStepper","onClose","steps","eventCategory","LOAD_SAFE_CATEGORY","Array","isArray","main","Head","LoadSafe"],"sourceRoot":""}