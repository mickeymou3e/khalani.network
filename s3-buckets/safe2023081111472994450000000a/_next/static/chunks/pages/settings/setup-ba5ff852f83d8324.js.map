{"version":3,"file":"static/chunks/pages/settings/setup-ba5ff852f83d8324.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/CheckCircle.js","webpack://_N_E/./node_modules/@mui/material/AlertTitle/alertTitleClasses.js","webpack://_N_E/./node_modules/@mui/material/AlertTitle/AlertTitle.js","webpack://_N_E/?2c1f","webpack://_N_E/./src/components/common/EnhancedTable/index.tsx","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/settings/SettingsHeader/index.tsx","webpack://_N_E/./src/hooks/useAddressResolver.ts","webpack://_N_E/./src/hooks/useMasterCopies.ts","webpack://_N_E/./src/components/tx-flow/flows/AddOwner/ChooseOwner.tsx","webpack://_N_E/./src/services/tx/safeUpdateParams.ts","webpack://_N_E/./src/components/tx-flow/flows/UpdateSafe/UpdateSafeReview.tsx","webpack://_N_E/./src/components/tx-flow/flows/UpdateSafe/index.tsx","webpack://_N_E/./src/components/settings/ContractVersion/index.tsx","webpack://_N_E/./src/components/tx-flow/common/constants.ts","webpack://_N_E/./public/images/common/minus.svg","webpack://_N_E/./public/images/settings/setup/replace-owner.svg","webpack://_N_E/./src/components/tx-flow/flows/AddOwner/ReviewOwner.tsx","webpack://_N_E/./src/components/tx-flow/flows/AddOwner/index.tsx","webpack://_N_E/./src/components/settings/owner/EditOwnerDialog/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/ReplaceOwner/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/RemoveOwner/ReviewRemoveOwner.tsx","webpack://_N_E/./src/components/tx-flow/flows/RemoveOwner/SetThreshold.tsx","webpack://_N_E/./src/components/tx-flow/flows/RemoveOwner/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/index.tsx","webpack://_N_E/./src/components/settings/owner/OwnerList/index.tsx","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/ReviewChangeThreshold.tsx","webpack://_N_E/./src/components/tx-flow/flows/ChangeThreshold/ChooseThreshold.tsx","webpack://_N_E/./src/components/settings/RequiredConfirmations/index.tsx","webpack://_N_E/./src/components/settings/DelegatesList/index.tsx","webpack://_N_E/./src/pages/settings/setup.tsx","webpack://_N_E/./src/components/common/EnhancedTable/styles.module.css","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/./src/components/common/PageHeader/styles.module.css"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getAlertTitleUtilityClass } from './alertTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n});\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/setup\",\n      function () {\n        return require(\"private-next-pages/settings/setup.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/setup\"])\n      });\n    }\n  ","import type { ChangeEvent, ReactNode } from 'react'\nimport React, { useState } from 'react'\nimport Box from '@mui/material/Box'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport type { SortDirection } from '@mui/material/TableCell'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TablePagination from '@mui/material/TablePagination'\nimport TableRow from '@mui/material/TableRow'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Paper from '@mui/material/Paper'\nimport { visuallyHidden } from '@mui/utils'\nimport classNames from 'classnames'\n\nimport css from './styles.module.css'\nimport { Collapse } from '@mui/material'\n\ntype EnhancedCell = {\n  content: ReactNode\n  rawValue: string | number\n  sticky?: boolean\n}\n\ntype EnhancedRow = {\n  selected?: boolean\n  collapsed?: boolean\n  key?: string\n  cells: Record<string, EnhancedCell>\n}\n\ntype EnhancedHeadCell = {\n  id: string\n  label: string\n  width?: string\n  sticky?: boolean\n}\n\nfunction descendingComparator(a: EnhancedRow, b: EnhancedRow, orderBy: string) {\n  if (b.cells[orderBy].rawValue < a.cells[orderBy].rawValue) {\n    return -1\n  }\n  if (b.cells[orderBy].rawValue > a.cells[orderBy].rawValue) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order: SortDirection, orderBy: string) {\n  return order === 'desc'\n    ? (a: any, b: any) => descendingComparator(a, b, orderBy)\n    : (a: any, b: any) => -descendingComparator(a, b, orderBy)\n}\n\ntype EnhancedTableHeadProps = {\n  headCells: EnhancedHeadCell[]\n  onRequestSort: (property: string) => void\n  order: 'asc' | 'desc'\n  orderBy: string\n}\n\nfunction EnhancedTableHead(props: EnhancedTableHeadProps) {\n  const { headCells, order, orderBy, onRequestSort } = props\n  const createSortHandler = (property: string) => () => {\n    onRequestSort(property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"left\"\n            padding=\"normal\"\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={headCell.width ? { width: headCell.width } : undefined}\n            className={classNames({ sticky: headCell.sticky })}\n          >\n            {headCell.label && (\n              <>\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={createSortHandler(headCell.id)}\n                >\n                  {headCell.label}\n                  {orderBy === headCell.id ? (\n                    <Box component=\"span\" sx={visuallyHidden}>\n                      {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                    </Box>\n                  ) : null}\n                </TableSortLabel>\n              </>\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport type EnhancedTableProps = {\n  rows: EnhancedRow[]\n  headCells: EnhancedHeadCell[]\n  mobileVariant?: boolean\n}\n\nconst pageSizes = [10, 25, 100]\n\nfunction EnhancedTable({ rows, headCells, mobileVariant }: EnhancedTableProps) {\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc')\n  const [orderBy, setOrderBy] = useState<string>('')\n  const [page, setPage] = useState<number>(0)\n  const [rowsPerPage, setRowsPerPage] = useState<number>(pageSizes[1])\n\n  const handleRequestSort = (property: string) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleChangePage = (_: any, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event: ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const orderedRows = orderBy ? rows.slice().sort(getComparator(order, orderBy)) : rows\n  const pagedRows = orderedRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <TableContainer component={Paper} sx={{ width: '100%', mb: 2 }}>\n        <Table aria-labelledby=\"tableTitle\" className={mobileVariant ? css.mobileColumn : undefined}>\n          <EnhancedTableHead headCells={headCells} order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n          <TableBody>\n            {pagedRows.length > 0 ? (\n              pagedRows.map((row, index) => (\n                <TableRow\n                  tabIndex={-1}\n                  key={row.key ?? index}\n                  selected={row.selected}\n                  className={row.collapsed ? css.collapsedRow : undefined}\n                >\n                  {Object.entries(row.cells).map(([key, cell]) => (\n                    <TableCell\n                      key={key}\n                      className={classNames({\n                        sticky: cell.sticky,\n                        [css.collapsedCell]: row.collapsed,\n                      })}\n                    >\n                      <Collapse key={index} in={!row.collapsed} enter={false}>\n                        {cell.content}\n                      </Collapse>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              // Prevent no `tbody` rows hydration error\n              <TableRow>\n                <TableCell />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {rows.length > pagedRows.length && (\n        <TablePagination\n          rowsPerPageOptions={pageSizes}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default EnhancedTable\n","import React, { forwardRef } from 'react'\nimport NextLink, { type LinkProps as NextLinkProps } from 'next/link'\nimport { Tab, Tabs, Typography, type TabProps } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\ntype Props = TabProps & NextLinkProps\n\n// This is needed in order for the tabs to work properly with Next Link e.g. tabbing with the keyboard\n// Based on https://github.com/mui/material-ui/blob/master/examples/nextjs-with-typescript/src/Link.tsx\nconst NextLinkComposed = forwardRef<HTMLAnchorElement, Props>(function NextComposedLink(props: Props, ref) {\n  const { href, as, replace, scroll, shallow, prefetch, legacyBehavior = true, locale, ...other } = props\n\n  return (\n    <NextLink\n      href={href}\n      prefetch={prefetch}\n      as={as}\n      replace={replace}\n      scroll={scroll}\n      shallow={shallow}\n      passHref\n      locale={locale}\n      legacyBehavior={legacyBehavior}\n    >\n      {/* @ts-ignore */}\n      <a ref={ref} {...other} />\n    </NextLink>\n  )\n})\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          component={NextLinkComposed}\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import type { ReactElement } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { generalSettingsNavItems, settingsNavItems } from '@/components/sidebar/SidebarNavigation/config'\nimport css from '@/components/common/PageHeader/styles.module.css'\nimport useSafeAddress from '@/hooks/useSafeAddress'\n\nconst SettingsHeader = (): ReactElement => {\n  const safeAddress = useSafeAddress()\n\n  return (\n    <PageHeader\n      title={safeAddress ? 'Settings' : 'Preferences'}\n      action={\n        <div className={css.navWrapper}>\n          <NavTabs tabs={safeAddress ? settingsNavItems : generalSettingsNavItems} />\n        </div>\n      }\n    />\n  )\n}\n\nexport default SettingsHeader\n","import useAddressBook from '@/hooks/useAddressBook'\nimport { useWeb3ReadOnly } from '@/hooks/wallets/web3'\nimport { lookupAddress } from '@/services/ens'\nimport { FEATURES } from '@/utils/chains'\nimport { useMemo } from 'react'\nimport useAsync from '@/hooks/useAsync'\nimport useDebounce from './useDebounce'\nimport { useHasFeature } from './useChains'\n\nexport const useAddressResolver = (address: string) => {\n  const addressBook = useAddressBook()\n  const ethersProvider = useWeb3ReadOnly()\n  const debouncedValue = useDebounce(address, 200)\n  const addressBookName = addressBook[address]\n  const isDomainLookupEnabled = useHasFeature(FEATURES.DOMAIN_LOOKUP)\n  const shouldResolve = !addressBookName && isDomainLookupEnabled && !!ethersProvider && !!debouncedValue\n\n  const [ens, _, isResolving] = useAsync<string | undefined>(() => {\n    if (!shouldResolve) return\n    return lookupAddress(ethersProvider, debouncedValue)\n  }, [ethersProvider, debouncedValue, shouldResolve])\n\n  const resolving = shouldResolve && isResolving\n\n  return useMemo(\n    () => ({\n      ens,\n      name: addressBookName,\n      resolving,\n    }),\n    [ens, addressBookName, resolving],\n  )\n}\n","import useAsync from '@/hooks/useAsync'\nimport useChainId from '@/hooks/useChainId'\nimport { Errors, logError } from '@/services/exceptions'\nimport type { MasterCopyReponse } from '@safe-global/safe-gateway-typescript-sdk'\nimport { getMasterCopies } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport enum MasterCopyDeployer {\n  GNOSIS = 'Gnosis',\n  CIRCLES = 'Circles',\n}\n\nexport type MasterCopy = MasterCopyReponse[number] & {\n  deployer: MasterCopyDeployer\n  deployerRepoUrl: string\n}\n\nconst extractMasterCopyInfo = (mc: MasterCopyReponse[number]): MasterCopy => {\n  const isCircles = mc.version.toLowerCase().includes(MasterCopyDeployer.CIRCLES.toLowerCase())\n  const dashIndex = mc.version.indexOf('-')\n\n  const masterCopy = {\n    address: mc.address,\n    version: !isCircles ? mc.version : mc.version.substring(0, dashIndex),\n    deployer: !isCircles ? MasterCopyDeployer.GNOSIS : MasterCopyDeployer.CIRCLES,\n    deployerRepoUrl: !isCircles\n      ? 'https://github.com/gnosis/safe-contracts/releases'\n      : 'https://github.com/CirclesUBI/safe-contracts/releases',\n  }\n  return masterCopy\n}\n\nexport const useMasterCopies = () => {\n  const chainId = useChainId()\n  const fetchMasterCopies = async (): Promise<MasterCopy[] | undefined> => {\n    try {\n      const res = await getMasterCopies(chainId)\n      return res.map(extractMasterCopyInfo)\n    } catch (error) {\n      logError(Errors._619, error)\n    }\n  }\n  return useAsync(fetchMasterCopies, [chainId])\n}\n","import {\n  Box,\n  Typography,\n  FormControl,\n  InputAdornment,\n  CircularProgress,\n  Button,\n  CardActions,\n  Divider,\n  Grid,\n  TextField,\n  MenuItem,\n  SvgIcon,\n  Tooltip,\n} from '@mui/material'\nimport { useForm, FormProvider, Controller } from 'react-hook-form'\n\nimport AddressBookInput from '@/components/common/AddressBookInput'\nimport NameInput from '@/components/common/NameInput'\nimport { useAddressResolver } from '@/hooks/useAddressResolver'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { uniqueAddress, addressIsNotCurrentSafe } from '@/utils/validation'\nimport type { AddOwnerFlowProps } from '.'\nimport type { ReplaceOwnerFlowProps } from '../ReplaceOwner'\nimport TxCard from '../../common/TxCard'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\nimport { TOOLTIP_TITLES } from '@/components/tx-flow/common/constants'\nimport EthHashInfo from '@/components/common/EthHashInfo'\n\ntype FormData = Pick<AddOwnerFlowProps | ReplaceOwnerFlowProps, 'newOwner' | 'threshold'>\n\nexport enum ChooseOwnerMode {\n  REPLACE,\n  ADD,\n}\n\nexport const ChooseOwner = ({\n  params,\n  onSubmit,\n  mode,\n}: {\n  params: AddOwnerFlowProps | ReplaceOwnerFlowProps\n  onSubmit: (data: FormData) => void\n  mode: ChooseOwnerMode\n}) => {\n  const { safe, safeAddress } = useSafeInfo()\n\n  const formMethods = useForm<FormData>({\n    defaultValues: params,\n    mode: 'onChange',\n  })\n  const { handleSubmit, formState, watch, control } = formMethods\n  const isValid = Object.keys(formState.errors).length === 0 // do not use formState.isValid because names can be empty\n\n  const notAlreadyOwner = uniqueAddress(safe.owners.map((owner) => owner.value))\n  const notCurrentSafe = addressIsNotCurrentSafe(safeAddress)\n  const combinedValidate = (address: string) => notAlreadyOwner(address) || notCurrentSafe(address)\n\n  const address = watch('newOwner.address')\n\n  const { name, ens, resolving } = useAddressResolver(address)\n\n  // Address book, ENS\n  const fallbackName = name || ens\n\n  const onFormSubmit = handleSubmit((formData: FormData) => {\n    onSubmit({\n      ...formData,\n      newOwner: {\n        ...formData.newOwner,\n        name: formData.newOwner.name || fallbackName,\n      },\n      threshold: formData.threshold,\n    })\n  })\n\n  const newNumberOfOwners = safe.owners.length + (!params.removedOwner ? 1 : 0)\n\n  return (\n    <TxCard>\n      <FormProvider {...formMethods}>\n        <form onSubmit={onFormSubmit} className={commonCss.form}>\n          {params.removedOwner && (\n            <>\n              <Typography variant=\"body2\" mb={1}>\n                {params.removedOwner &&\n                  'Review the owner you want to replace in the active Safe Account, then specify the new owner you want to replace it with:'}\n              </Typography>\n              <Box my={3}>\n                <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\n                  Current owner\n                </Typography>\n                <EthHashInfo address={params.removedOwner.address} showCopyButton shortAddress={false} hasExplorer />\n              </Box>\n            </>\n          )}\n\n          <FormControl fullWidth>\n            <NameInput\n              label=\"New owner\"\n              name=\"newOwner.name\"\n              placeholder={fallbackName || 'Owner name'}\n              InputLabelProps={{ shrink: true }}\n              InputProps={{\n                endAdornment: resolving && (\n                  <InputAdornment position=\"end\">\n                    <CircularProgress size={20} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </FormControl>\n\n          <FormControl fullWidth>\n            <AddressBookInput\n              name=\"newOwner.address\"\n              label=\"Owner address or ENS\"\n              validate={combinedValidate}\n              required\n            />\n          </FormControl>\n\n          <Divider className={commonCss.nestedDivider} />\n\n          {mode === ChooseOwnerMode.ADD && (\n            <FormControl fullWidth>\n              <Typography variant=\"h6\" fontWeight={700} mt={3}>\n                Threshold\n                <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n                  <span>\n                    <SvgIcon\n                      component={InfoIcon}\n                      inheritViewBox\n                      color=\"border\"\n                      fontSize=\"small\"\n                      sx={{\n                        verticalAlign: 'middle',\n                        ml: 0.5,\n                      }}\n                    />\n                  </span>\n                </Tooltip>\n              </Typography>\n\n              <Typography variant=\"body2\" mb={1}>\n                Any transaction requires the confirmation of:\n              </Typography>\n\n              <Grid container direction=\"row\" alignItems=\"center\" gap={2} pt={1}>\n                <Grid item>\n                  <Controller\n                    control={control}\n                    name=\"threshold\"\n                    render={({ field }) => (\n                      <TextField select {...field}>\n                        {safe.owners.map((_, idx) => (\n                          <MenuItem key={idx + 1} value={idx + 1}>\n                            {idx + 1}\n                          </MenuItem>\n                        ))}\n                        {!params.removedOwner && (\n                          <MenuItem key={newNumberOfOwners} value={newNumberOfOwners}>\n                            {newNumberOfOwners}\n                          </MenuItem>\n                        )}\n                      </TextField>\n                    )}\n                  />\n                </Grid>\n                <Grid item>\n                  <Typography>out of {newNumberOfOwners} owner(s)</Typography>\n                </Grid>\n              </Grid>\n            </FormControl>\n          )}\n\n          <Divider className={commonCss.nestedDivider} />\n\n          <CardActions>\n            <Button variant=\"contained\" type=\"submit\" disabled={!isValid || resolving}>\n              Next\n            </Button>\n          </CardActions>\n        </form>\n      </FormProvider>\n    </TxCard>\n  )\n}\n","import type { MetaTransactionData } from '@safe-global/safe-core-sdk-types'\nimport { OperationType } from '@safe-global/safe-core-sdk-types'\nimport type GnosisSafeContractEthers from '@safe-global/safe-ethers-lib/dist/src/contracts/GnosisSafe/GnosisSafeContractEthers'\nimport type { ChainInfo, SafeInfo } from '@safe-global/safe-gateway-typescript-sdk'\nimport { getReadOnlyFallbackHandlerContract, getReadOnlyGnosisSafeContract } from '@/services/contracts/safeContracts'\nimport { LATEST_SAFE_VERSION } from '@/config/constants'\nimport { assertValidSafeVersion } from '@/hooks/coreSDK/safeCoreSDK'\nimport { SAFE_FEATURES } from '@safe-global/safe-core-sdk-utils'\nimport { hasSafeFeature } from '@/utils/safe-versions'\n\nconst getChangeFallbackHandlerCallData = (\n  safe: SafeInfo,\n  chain: ChainInfo,\n  safeContractInstance: GnosisSafeContractEthers,\n): string => {\n  if (!hasSafeFeature(SAFE_FEATURES.SAFE_FALLBACK_HANDLER, safe.version)) {\n    return '0x'\n  }\n\n  const fallbackHandlerAddress = getReadOnlyFallbackHandlerContract(chain.chainId).getAddress()\n  return safeContractInstance.encode('setFallbackHandler', [fallbackHandlerAddress])\n}\n\n/**\n * Creates two transactions:\n * - change the mastercopy address\n * - set the fallback handler address\n * Only works for safes < 1.3.0 as the changeMasterCopy function was removed\n */\nexport const createUpdateSafeTxs = (safe: SafeInfo, chain: ChainInfo): MetaTransactionData[] => {\n  assertValidSafeVersion(safe.version)\n\n  const latestMasterCopyAddress = getReadOnlyGnosisSafeContract(chain, LATEST_SAFE_VERSION).getAddress()\n  const readOnlySafeContract = getReadOnlyGnosisSafeContract(chain, safe.version)\n\n  // @ts-expect-error this was removed in 1.3.0 but we need to support it for older safe versions\n  const changeMasterCopyCallData = readOnlySafeContract.encode('changeMasterCopy', [latestMasterCopyAddress])\n  const changeFallbackHandlerCallData = getChangeFallbackHandlerCallData(safe, chain, readOnlySafeContract)\n\n  const txs: MetaTransactionData[] = [\n    {\n      to: safe.address.value,\n      value: '0',\n      data: changeMasterCopyCallData,\n      operation: OperationType.Call,\n    },\n    {\n      to: safe.address.value,\n      value: '0',\n      data: changeFallbackHandlerCallData,\n      operation: OperationType.Call,\n    },\n  ]\n\n  return txs\n}\n","import { useContext, useEffect } from 'react'\nimport { Typography } from '@mui/material'\n\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { LATEST_SAFE_VERSION } from '@/config/constants'\nimport { useCurrentChain } from '@/hooks/useChains'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { createUpdateSafeTxs } from '@/services/tx/safeUpdateParams'\nimport { createMultiSendCallOnlyTx } from '@/services/tx/tx-sender'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\n\nexport const UpdateSafeReview = () => {\n  const { safe, safeLoaded } = useSafeInfo()\n  const chain = useCurrentChain()\n  const { setSafeTx, setSafeTxError, setNonce } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    if (!chain || !safeLoaded) {\n      return\n    }\n\n    const txs = createUpdateSafeTxs(safe, chain)\n    createMultiSendCallOnlyTx(txs).then(setSafeTx).catch(setSafeTxError)\n  }, [chain, safe, safeLoaded, setNonce, setSafeTx, setSafeTxError])\n\n  return (\n    <SignOrExecuteForm onSubmit={() => null}>\n      <Typography mb={2}>\n        Update now to take advantage of new features and the highest security standards available.\n      </Typography>\n\n      <Typography mb={2}>\n        To check details about updates added by this smart contract version please visit{' '}\n        <ExternalLink href={`https://github.com/safe-global/safe-contracts/releases/tag/v${LATEST_SAFE_VERSION}`}>\n          latest Safe Account contracts changelog\n        </ExternalLink>\n      </Typography>\n\n      <Typography mb={2}>\n        You will need to confirm this update just like any other transaction. This means other owners will have to\n        confirm the update in case more than one confirmation is required for this Safe Account.\n      </Typography>\n\n      <Typography mb={2}>\n        <b>Warning:</b> this upgrade will invalidate all unexecuted transactions. This means you will be unable to\n        access or execute them after the upgrade. Please make sure to execute any remaining transactions before\n        upgrading.\n      </Typography>\n    </SignOrExecuteForm>\n  )\n}\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport { UpdateSafeReview } from './UpdateSafeReview'\nimport SettingsIcon from '@/public/images/sidebar/settings.svg'\n\nconst UpdateSafeFlow = () => {\n  return (\n    <TxLayout title=\"Confirm transaction\" subtitle=\"Update Safe Account version\" icon={SettingsIcon}>\n      <UpdateSafeReview />\n    </TxLayout>\n  )\n}\n\nexport default UpdateSafeFlow\n","import { useContext, useMemo } from 'react'\nimport { Box, SvgIcon, Typography, Alert, AlertTitle, Skeleton, Button } from '@mui/material'\nimport { ImplementationVersionState } from '@safe-global/safe-gateway-typescript-sdk'\nimport { LATEST_SAFE_VERSION } from '@/config/constants'\nimport { sameAddress } from '@/utils/addresses'\nimport type { MasterCopy } from '@/hooks/useMasterCopies'\nimport { MasterCopyDeployer, useMasterCopies } from '@/hooks/useMasterCopies'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { TxModalContext } from '@/components/tx-flow'\nimport UpdateSafeFlow from '@/components/tx-flow/flows/UpdateSafe'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport CheckWallet from '@/components/common/CheckWallet'\n\nexport const ContractVersion = () => {\n  const { setTxFlow } = useContext(TxModalContext)\n  const [masterCopies] = useMasterCopies()\n  const { safe, safeLoaded } = useSafeInfo()\n  const masterCopyAddress = safe.implementation.value\n\n  const safeMasterCopy: MasterCopy | undefined = useMemo(() => {\n    return masterCopies?.find((mc) => sameAddress(mc.address, masterCopyAddress))\n  }, [masterCopies, masterCopyAddress])\n\n  const needsUpdate = safe.implementationVersionState === ImplementationVersionState.OUTDATED\n  const showUpdateDialog = safeMasterCopy?.deployer === MasterCopyDeployer.GNOSIS && needsUpdate\n\n  return (\n    <>\n      <Typography variant=\"h4\" fontWeight={700} marginBottom={1}>\n        Contract version\n      </Typography>\n\n      <Typography variant=\"body1\" fontWeight={400}>\n        {safeLoaded ? safe.version ? safe.version : 'Unsupported contract' : <Skeleton width=\"60px\" />}\n      </Typography>\n      <Box mt={2}>\n        {safeLoaded ? (\n          showUpdateDialog ? (\n            <Alert\n              sx={{ borderRadius: '2px', borderColor: '#B0FFC9' }}\n              icon={<SvgIcon component={InfoIcon} inheritViewBox color=\"secondary\" />}\n            >\n              <AlertTitle sx={{ fontWeight: 700 }}>New version is available: {LATEST_SAFE_VERSION}</AlertTitle>\n\n              <Typography mb={3}>\n                Update now to take advantage of new features and the highest security standards available. You will need\n                to confirm this update just like any other transaction.{' '}\n                <ExternalLink href={safeMasterCopy?.deployerRepoUrl}>GitHub</ExternalLink>\n              </Typography>\n\n              <CheckWallet>\n                {(isOk) => (\n                  <Button onClick={() => setTxFlow(<UpdateSafeFlow />)} variant=\"contained\" disabled={!isOk}>\n                    Update\n                  </Button>\n                )}\n              </CheckWallet>\n            </Alert>\n          ) : (\n            <Typography display=\"flex\" alignItems=\"center\">\n              <CheckCircleIcon color=\"primary\" sx={{ mr: 0.5 }} /> Latest version\n            </Typography>\n          )\n        ) : null}\n      </Box>\n    </>\n  )\n}\n","export const TOOLTIP_TITLES = {\n  THRESHOLD:\n    'The threshold of a Safe Account specifies how many owners need to confirm a Safe Account transaction before it can be executed.',\n} as const\n","var _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nvar SvgMinus = function SvgMinus(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2.5,\n    y: 7,\n    width: 12,\n    height: 2,\n    rx: 1,\n    fill: \"currentColor\"\n  })));\n};\nexport default SvgMinus;","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nvar SvgReplaceOwner = function SvgReplaceOwner(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16.3615 16.7891L13.0765 15.4921C12.5635 15.2881 11.9805 15.5411 11.7795 16.0551C11.5765 16.5681 11.8285 17.1491 12.3415 17.3511L13.5075 17.8121C12.8325 18.0471 12.1215 18.1821 11.3975 18.1821H11.3825C9.1135 18.1771 6.9925 16.9541 5.8455 14.9911C5.5685 14.5151 4.9555 14.3531 4.4785 14.6321C4.0015 14.9101 3.8405 15.5221 4.1195 15.9991C5.6215 18.5721 8.4025 20.1751 11.3795 20.1821H11.3975C12.3535 20.1821 13.2945 20.0031 14.1875 19.6891L13.8275 20.6501C13.6335 21.1671 13.8955 21.7431 14.4135 21.9371C14.5285 21.9801 14.6465 22.0011 14.7635 22.0011C15.1685 22.0011 15.5495 21.7541 15.7005 21.3511L16.9305 18.0691C17.1225 17.5591 16.8695 16.9891 16.3615 16.7891Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M15.7932 5.6817C16.4722 5.6817 17.0232 6.2337 17.0232 6.9117C17.0232 7.5897 16.4722 8.1417 15.7932 8.1417C15.1152 8.1417 14.5642 7.5897 14.5642 6.9117C14.5642 6.2337 15.1152 5.6817 15.7932 5.6817ZM8.2052 3.9997C8.8832 3.9997 9.4352 4.5517 9.4352 5.2297C9.4352 5.9087 8.8832 6.4597 8.2052 6.4597C7.5262 6.4597 6.9752 5.9087 6.9752 5.2297C6.9752 4.5517 7.5262 3.9997 8.2052 3.9997ZM20.9352 13.0067C20.3092 11.3387 19.1242 10.1007 17.7072 9.4987C18.5012 8.9107 19.0232 7.9737 19.0232 6.9117C19.0232 5.1307 17.5742 3.6817 15.7932 3.6817C14.0132 3.6817 12.5642 5.1307 12.5642 6.9117C12.5642 7.9737 13.0862 8.9107 13.8802 9.4987C13.4832 9.6667 13.1022 9.8727 12.7502 10.1377C12.0892 9.0677 11.1722 8.2637 10.1182 7.8177C10.9122 7.2287 11.4352 6.2917 11.4352 5.2297C11.4352 3.4497 9.9852 1.9997 8.2052 1.9997C6.4242 1.9997 4.9752 3.4497 4.9752 5.2297C4.9752 6.2917 5.4972 7.2287 6.2912 7.8177C4.8742 8.4177 3.6892 9.6577 3.0642 11.3257C2.8702 11.8427 3.1322 12.4187 3.6482 12.6137C4.1652 12.8037 4.7422 12.5457 4.9372 12.0287C5.5332 10.4377 6.8162 9.4097 8.2052 9.4097C9.4932 9.4097 10.6842 10.3007 11.3262 11.6987C11.0642 12.1007 10.8312 12.5327 10.6522 13.0077C10.4592 13.5247 10.7212 14.1007 11.2382 14.2947C11.3542 14.3377 11.4722 14.3587 11.5892 14.3587C11.9932 14.3587 12.3752 14.1117 12.5252 13.7087C13.1222 12.1187 14.4042 11.0907 15.7932 11.0907C17.1822 11.0907 18.4652 12.1187 19.0622 13.7097C19.2562 14.2277 19.8322 14.4867 20.3502 14.2947C20.8662 14.1007 21.1282 13.5247 20.9352 13.0067Z\"\n  })));\n};\nexport default SvgReplaceOwner;","import { useContext, useEffect } from 'react'\nimport { Typography, Divider, Box, SvgIcon, Paper } from '@mui/material'\n\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { createSwapOwnerTx, createAddOwnerTx } from '@/services/tx/tx-sender'\nimport { useAppDispatch } from '@/store'\nimport { upsertAddressBookEntry } from '@/store/addressBookSlice'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport type { AddOwnerFlowProps } from '.'\nimport type { ReplaceOwnerFlowProps } from '../ReplaceOwner'\nimport PlusIcon from '@/public/images/common/plus.svg'\nimport MinusIcon from '@/public/images/common/minus.svg'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\n\nexport const ReviewOwner = ({ params }: { params: AddOwnerFlowProps | ReplaceOwnerFlowProps }) => {\n  const dispatch = useAppDispatch()\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n  const { safe } = useSafeInfo()\n  const { chainId } = safe\n  const { newOwner, removedOwner, threshold } = params\n\n  useEffect(() => {\n    const promise = removedOwner\n      ? createSwapOwnerTx({\n          newOwnerAddress: newOwner.address,\n          oldOwnerAddress: removedOwner.address,\n        })\n      : createAddOwnerTx({\n          ownerAddress: newOwner.address,\n          threshold,\n        })\n\n    promise.then(setSafeTx).catch(setSafeTxError)\n  }, [removedOwner, newOwner, threshold, setSafeTx, setSafeTxError])\n\n  const addAddressBookEntryAndSubmit = () => {\n    if (typeof newOwner.name !== 'undefined') {\n      dispatch(\n        upsertAddressBookEntry({\n          chainId: chainId,\n          address: newOwner.address,\n          name: newOwner.name,\n        }),\n      )\n    }\n\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.THRESHOLD, label: safe.threshold })\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.OWNERS, label: safe.owners.length })\n  }\n\n  return (\n    <SignOrExecuteForm onSubmit={addAddressBookEntryAndSubmit}>\n      {params.removedOwner && (\n        <Paper sx={{ backgroundColor: ({ palette }) => palette.warning.background, p: 2 }}>\n          <Typography color=\"text.secondary\" mb={2} display=\"flex\" alignItems=\"center\">\n            <SvgIcon component={MinusIcon} inheritViewBox fontSize=\"small\" sx={{ mr: 1 }} />\n            Previous owner\n          </Typography>\n          <EthHashInfo\n            name={params.removedOwner.name}\n            address={params.removedOwner.address}\n            shortAddress={false}\n            showCopyButton\n            hasExplorer\n          />\n        </Paper>\n      )}\n      <Paper sx={{ backgroundColor: ({ palette }) => palette.success.background, p: 2 }}>\n        <Typography color=\"text.secondary\" mb={2} display=\"flex\" alignItems=\"center\">\n          <SvgIcon component={PlusIcon} inheritViewBox fontSize=\"small\" sx={{ mr: 1 }} />\n          New owner\n        </Typography>\n        <EthHashInfo name={newOwner.name} address={newOwner.address} shortAddress={false} showCopyButton hasExplorer />\n      </Paper>\n      <Divider className={commonCss.nestedDivider} />\n      <Box>\n        <Typography variant=\"body2\">Any transaction requires the confirmation of:</Typography>\n        <Typography>\n          <b>{threshold}</b> out of <b>{safe.owners.length + (removedOwner ? 0 : 1)} owners</b>\n        </Typography>\n      </Box>\n      <Divider className={commonCss.nestedDivider} />\n    </SignOrExecuteForm>\n  )\n}\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport useTxStepper from '@/components/tx-flow/useTxStepper'\nimport { ChooseOwner, ChooseOwnerMode } from '@/components/tx-flow/flows/AddOwner/ChooseOwner'\nimport { ReviewOwner } from '@/components/tx-flow/flows/AddOwner/ReviewOwner'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport useSafeInfo from '@/hooks/useSafeInfo'\n\ntype Owner = {\n  address: string\n  name?: string\n}\n\nexport type AddOwnerFlowProps = {\n  newOwner: Owner\n  removedOwner?: Owner\n  threshold: number\n}\n\nconst AddOwnerFlow = () => {\n  const { safe } = useSafeInfo()\n\n  const defaultValues: AddOwnerFlowProps = {\n    newOwner: {\n      address: '',\n      name: '',\n    },\n    threshold: safe.threshold,\n  }\n\n  const { data, step, nextStep, prevStep } = useTxStepper<AddOwnerFlowProps>(defaultValues)\n\n  const steps = [\n    <ChooseOwner\n      key={0}\n      params={data}\n      onSubmit={(formData) => nextStep({ ...data, ...formData })}\n      mode={ChooseOwnerMode.ADD}\n    />,\n    <ReviewOwner key={1} params={data} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'New transaction' : 'Confirm transaction'}\n      subtitle=\"Add owner\"\n      icon={SaveAddressIcon}\n      step={step}\n      onBack={prevStep}\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default AddOwnerFlow\n","import EthHashInfo from '@/components/common/EthHashInfo'\nimport ModalDialog from '@/components/common/ModalDialog'\nimport NameInput from '@/components/common/NameInput'\nimport Track from '@/components/common/Track'\nimport { SETTINGS_EVENTS } from '@/services/analytics/events/settings'\nimport { useAppDispatch } from '@/store'\nimport { upsertAddressBookEntry } from '@/store/addressBookSlice'\nimport EditIcon from '@/public/images/common/edit.svg'\nimport { Box, Button, DialogActions, DialogContent, IconButton, Tooltip, SvgIcon } from '@mui/material'\nimport { useState } from 'react'\nimport { FormProvider, useForm } from 'react-hook-form'\n\ntype EditOwnerValues = {\n  name: string\n}\n\nexport const EditOwnerDialog = ({ chainId, address, name }: { chainId: string; address: string; name?: string }) => {\n  const [open, setOpen] = useState(false)\n\n  const dispatch = useAppDispatch()\n\n  const handleClose = () => setOpen(false)\n\n  const onSubmit = (data: EditOwnerValues) => {\n    if (data.name !== name) {\n      dispatch(\n        upsertAddressBookEntry({\n          chainId: chainId,\n          address: address,\n          name: data.name,\n        }),\n      )\n      handleClose()\n    }\n  }\n\n  const formMethods = useForm<EditOwnerValues>({\n    defaultValues: {\n      name: name || '',\n    },\n    mode: 'onChange',\n  })\n\n  const { handleSubmit, formState, watch } = formMethods\n\n  const nameValue = watch('name')\n\n  const buttonDisabled = !formState.isValid || nameValue === name || nameValue === ''\n\n  return (\n    <>\n      <Track {...SETTINGS_EVENTS.SETUP.EDIT_OWNER}>\n        <Tooltip title=\"Edit owner\">\n          <IconButton onClick={() => setOpen(true)} size=\"small\">\n            <SvgIcon component={EditIcon} inheritViewBox color=\"border\" fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </Track>\n\n      <ModalDialog open={open} onClose={handleClose} dialogTitle=\"Edit owner name\">\n        <FormProvider {...formMethods}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogContent>\n              <Box py={2}>\n                <NameInput label=\"Owner name\" name=\"name\" required />\n              </Box>\n\n              <Box py={2}>\n                <EthHashInfo address={address} showCopyButton shortAddress={false} />\n              </Box>\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={handleClose}>Cancel</Button>\n              <Button type=\"submit\" variant=\"contained\" disabled={buttonDisabled}>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </FormProvider>\n      </ModalDialog>\n    </>\n  )\n}\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport useTxStepper from '@/components/tx-flow/useTxStepper'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { ReviewOwner } from '../AddOwner/ReviewOwner'\nimport { ChooseOwner, ChooseOwnerMode } from '../AddOwner/ChooseOwner'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\n\ntype Owner = {\n  address: string\n  name?: string\n}\n\nexport type ReplaceOwnerFlowProps = {\n  newOwner: Owner\n  removedOwner: Owner\n  threshold: number\n}\n\nconst ReplaceOwnerFlow = ({ address }: { address: string }) => {\n  const { safe } = useSafeInfo()\n\n  const defaultValues: ReplaceOwnerFlowProps = {\n    newOwner: { address: '' },\n    removedOwner: { address },\n    threshold: safe.threshold,\n  }\n\n  const { data, step, nextStep, prevStep } = useTxStepper<ReplaceOwnerFlowProps>(defaultValues)\n\n  const steps = [\n    <ChooseOwner\n      key={0}\n      params={data}\n      onSubmit={(formData) => nextStep({ ...data, ...formData })}\n      mode={ChooseOwnerMode.REPLACE}\n    />,\n    <ReviewOwner key={1} params={data} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'New transaction' : 'Confirm transaction'}\n      subtitle=\"Replace owner\"\n      icon={SaveAddressIcon}\n      step={step}\n      onBack={prevStep}\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default ReplaceOwnerFlow\n","import { useContext, useEffect } from 'react'\nimport { Typography, Divider, Box, Paper, SvgIcon } from '@mui/material'\nimport type { ReactElement } from 'react'\n\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport useAddressBook from '@/hooks/useAddressBook'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { createRemoveOwnerTx } from '@/services/tx/tx-sender'\nimport MinusIcon from '@/public/images/common/minus.svg'\nimport { SafeTxContext } from '../../SafeTxProvider'\nimport type { RemoveOwnerFlowProps } from '.'\nimport EthHashInfo from '@/components/common/EthHashInfo'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\n\nexport const ReviewRemoveOwner = ({ params }: { params: RemoveOwnerFlowProps }): ReactElement => {\n  const addressBook = useAddressBook()\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n  const { safe } = useSafeInfo()\n  const { removedOwner, threshold } = params\n\n  useEffect(() => {\n    createRemoveOwnerTx({ ownerAddress: removedOwner.address, threshold }).then(setSafeTx).catch(setSafeTxError)\n  }, [removedOwner.address, setSafeTx, setSafeTxError, threshold])\n\n  const newOwnerLength = safe.owners.length - 1\n\n  const onFormSubmit = () => {\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.THRESHOLD, label: safe.threshold })\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.OWNERS, label: safe.owners.length })\n  }\n\n  return (\n    <SignOrExecuteForm onSubmit={onFormSubmit}>\n      <Paper sx={{ backgroundColor: ({ palette }) => palette.warning.background, p: 2 }}>\n        <Typography color=\"text.secondary\" mb={2} display=\"flex\" alignItems=\"center\">\n          <SvgIcon component={MinusIcon} inheritViewBox fontSize=\"small\" sx={{ mr: 1 }} />\n          Selected owner\n        </Typography>\n        <EthHashInfo\n          address={removedOwner.address}\n          name={addressBook[removedOwner.address]}\n          shortAddress={false}\n          showCopyButton\n          hasExplorer\n        />\n      </Paper>\n      <Divider className={commonCss.nestedDivider} />\n      <Box m={1}>\n        <Typography variant=\"body2\" color=\"text.secondary\" mb={0.5}>\n          Any transaction requires the confirmation of:\n        </Typography>\n        <Typography>\n          <b>{threshold}</b> out of <b>{newOwnerLength}</b> owners\n        </Typography>\n      </Box>\n      <Divider className={commonCss.nestedDivider} />\n    </SignOrExecuteForm>\n  )\n}\n","import { useState } from 'react'\nimport { Button, Box, CardActions, Divider, Grid, MenuItem, Select, Typography, SvgIcon, Tooltip } from '@mui/material'\nimport type { ReactElement, SyntheticEvent } from 'react'\nimport type { SelectChangeEvent } from '@mui/material'\n\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport TxCard from '../../common/TxCard'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { TOOLTIP_TITLES } from '@/components/tx-flow/common/constants'\nimport type { RemoveOwnerFlowProps } from '.'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\n\nexport const SetThreshold = ({\n  params,\n  onSubmit,\n}: {\n  params: RemoveOwnerFlowProps\n  onSubmit: (data: RemoveOwnerFlowProps) => void\n}): ReactElement => {\n  const { safe } = useSafeInfo()\n  const [selectedThreshold, setSelectedThreshold] = useState<number>(params.threshold || 1)\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    setSelectedThreshold(parseInt(event.target.value.toString()))\n  }\n\n  const onSubmitHandler = (e: SyntheticEvent) => {\n    e.preventDefault()\n    onSubmit({ ...params, threshold: selectedThreshold })\n  }\n\n  const newNumberOfOwners = safe ? safe.owners.length - 1 : 1\n\n  return (\n    <TxCard>\n      <form onSubmit={onSubmitHandler}>\n        <Box mb={3}>\n          <Typography mb={2}>Review the owner you want to remove from the active Safe Account:</Typography>\n          {/* TODO: Update the EthHashInfo style from the replace owner PR */}\n          <EthHashInfo address={params.removedOwner.address} shortAddress={false} showCopyButton hasExplorer />\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <Box my={3}>\n          <Typography variant=\"h4\" fontWeight={700}>\n            Threshold\n            <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n              <span>\n                <SvgIcon\n                  component={InfoIcon}\n                  inheritViewBox\n                  color=\"border\"\n                  fontSize=\"small\"\n                  sx={{\n                    verticalAlign: 'middle',\n                    ml: 0.5,\n                  }}\n                />\n              </span>\n            </Tooltip>\n          </Typography>\n          <Typography>Any transaction requires the confirmation of:</Typography>\n          <Grid container direction=\"row\" alignItems=\"center\" gap={1} mt={2}>\n            <Grid item xs={1.5}>\n              <Select value={selectedThreshold} onChange={handleChange} fullWidth>\n                {safe.owners.slice(1).map((_, idx) => (\n                  <MenuItem key={idx + 1} value={idx + 1}>\n                    {idx + 1}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item>\n              <Typography>out of {newNumberOfOwners} owner(s)</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <CardActions>\n          <Button variant=\"contained\" type=\"submit\">\n            Next\n          </Button>\n        </CardActions>\n      </form>\n    </TxCard>\n  )\n}\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport useTxStepper from '../../useTxStepper'\nimport { ReviewRemoveOwner } from './ReviewRemoveOwner'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport { SetThreshold } from './SetThreshold'\n\ntype Owner = {\n  address: string\n  name?: string\n}\n\nexport type RemoveOwnerFlowProps = {\n  removedOwner: Owner\n  threshold: number\n}\n\nconst RemoveOwnerFlow = (props: Owner) => {\n  const { safe } = useSafeInfo()\n\n  const defaultValues: RemoveOwnerFlowProps = {\n    removedOwner: props,\n    threshold: Math.min(safe.threshold, safe.owners.length - 1),\n  }\n\n  const { data, step, nextStep, prevStep } = useTxStepper<RemoveOwnerFlowProps>(defaultValues)\n\n  const steps = [\n    <SetThreshold key={0} params={data} onSubmit={(formData: any) => nextStep({ ...data, ...formData })} />,\n    <ReviewRemoveOwner key={1} params={data} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'New transaction' : 'Confirm transaction'}\n      subtitle=\"Remove owner\"\n      icon={SaveAddressIcon}\n      step={step}\n      onBack={prevStep}\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default RemoveOwnerFlow\n","import TxLayout from '@/components/tx-flow/common/TxLayout'\nimport ReviewChangeThreshold from '@/components/tx-flow/flows/ChangeThreshold/ReviewChangeThreshold'\nimport useTxStepper from '@/components/tx-flow/useTxStepper'\nimport SaveAddressIcon from '@/public/images/common/save-address.svg'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { ChooseThreshold } from '@/components/tx-flow/flows/ChangeThreshold/ChooseThreshold'\n\nexport enum ChangeThresholdFlowFieldNames {\n  threshold = 'threshold',\n}\n\nexport type ChangeThresholdFlowProps = {\n  [ChangeThresholdFlowFieldNames.threshold]: number\n}\n\nconst ChangeThresholdFlow = () => {\n  const { safe } = useSafeInfo()\n\n  const { data, step, nextStep, prevStep } = useTxStepper<ChangeThresholdFlowProps>({\n    [ChangeThresholdFlowFieldNames.threshold]: safe.threshold,\n  })\n\n  const steps = [\n    <ChooseThreshold key={0} params={data} onSubmit={(formData) => nextStep(formData)} />,\n    <ReviewChangeThreshold key={1} params={data} />,\n  ]\n\n  return (\n    <TxLayout\n      title={step === 0 ? 'New transaction' : 'Confirm transaction'}\n      subtitle=\"Change threshold\"\n      icon={SaveAddressIcon}\n      step={step}\n      onBack={prevStep}\n    >\n      {steps}\n    </TxLayout>\n  )\n}\n\nexport default ChangeThresholdFlow\n","import EthHashInfo from '@/components/common/EthHashInfo'\nimport AddOwnerFlow from '@/components/tx-flow/flows/AddOwner'\nimport useAddressBook from '@/hooks/useAddressBook'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { Box, Grid, Typography, Button, SvgIcon, Tooltip, IconButton } from '@mui/material'\nimport { useContext, useMemo } from 'react'\nimport { EditOwnerDialog } from '../EditOwnerDialog'\nimport ReplaceOwnerFlow from '@/components/tx-flow/flows/ReplaceOwner'\nimport RemoveOwnerFlow from '@/components/tx-flow/flows/RemoveOwner'\nimport EnhancedTable from '@/components/common/EnhancedTable'\nimport AddIcon from '@/public/images/common/add.svg'\nimport Track from '@/components/common/Track'\nimport { SETTINGS_EVENTS } from '@/services/analytics/events/settings'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { TxModalContext } from '@/components/tx-flow'\nimport ReplaceOwnerIcon from '@/public/images/settings/setup/replace-owner.svg'\nimport DeleteIcon from '@/public/images/common/delete.svg'\n\nimport tableCss from '@/components/common/EnhancedTable/styles.module.css'\n\nconst headCells = [\n  { id: 'owner', label: 'Name' },\n  { id: 'actions', label: '', sticky: true },\n]\n\nexport const OwnerList = () => {\n  const addressBook = useAddressBook()\n  const { safe } = useSafeInfo()\n  const { setTxFlow } = useContext(TxModalContext)\n\n  const rows = useMemo(() => {\n    const showRemoveOwnerButton = safe.owners.length > 1\n\n    return safe.owners.map((owner) => {\n      const address = owner.value\n      const name = addressBook[address]\n\n      return {\n        cells: {\n          owner: {\n            rawValue: address,\n            content: <EthHashInfo address={address} showCopyButton shortAddress={false} showName={true} hasExplorer />,\n          },\n          actions: {\n            rawValue: '',\n            sticky: true,\n            content: (\n              <div className={tableCss.actions}>\n                <CheckWallet>\n                  {(isOk) => (\n                    <Track {...SETTINGS_EVENTS.SETUP.REPLACE_OWNER}>\n                      <Tooltip title=\"Replace owner\">\n                        <IconButton\n                          onClick={() => setTxFlow(<ReplaceOwnerFlow address={address} />)}\n                          size=\"small\"\n                          disabled={!isOk}\n                        >\n                          <SvgIcon component={ReplaceOwnerIcon} inheritViewBox color=\"border\" fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </Track>\n                  )}\n                </CheckWallet>\n\n                <EditOwnerDialog address={address} name={name} chainId={safe.chainId} />\n\n                {showRemoveOwnerButton && (\n                  <CheckWallet>\n                    {(isOk) => (\n                      <Track {...SETTINGS_EVENTS.SETUP.REMOVE_OWNER}>\n                        <Tooltip title=\"Remove owner\">\n                          <IconButton\n                            onClick={() => setTxFlow(<RemoveOwnerFlow name={name} address={address} />)}\n                            size=\"small\"\n                            disabled={!isOk}\n                          >\n                            <SvgIcon component={DeleteIcon} inheritViewBox color=\"error\" fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      </Track>\n                    )}\n                  </CheckWallet>\n                )}\n              </div>\n            ),\n          },\n        },\n      }\n    })\n  }, [safe.owners, safe.chainId, addressBook, setTxFlow])\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n      <Grid container spacing={3}>\n        <Grid item lg={4} xs={12}>\n          <Typography variant=\"h4\" fontWeight={700}>\n            Manage Safe Account owners\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <Typography mb={2}>\n            Add, remove and replace or rename existing owners. Owner names are only stored locally and will never be\n            shared with us or any third parties.\n          </Typography>\n\n          <EnhancedTable rows={rows} headCells={headCells} />\n\n          <Box pt={2}>\n            <CheckWallet>\n              {(isOk) => (\n                <Track {...SETTINGS_EVENTS.SETUP.ADD_OWNER}>\n                  <Button\n                    onClick={() => setTxFlow(<AddOwnerFlow />)}\n                    variant=\"text\"\n                    startIcon={<SvgIcon component={AddIcon} inheritViewBox fontSize=\"small\" />}\n                    disabled={!isOk}\n                  >\n                    Add new owner\n                  </Button>\n                </Track>\n              )}\n            </CheckWallet>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import useSafeInfo from '@/hooks/useSafeInfo'\nimport { useContext, useEffect } from 'react'\nimport { Box, Divider, Typography } from '@mui/material'\n\nimport { createUpdateThresholdTx } from '@/services/tx/tx-sender'\nimport { SETTINGS_EVENTS, trackEvent } from '@/services/analytics'\nimport SignOrExecuteForm from '@/components/tx/SignOrExecuteForm'\nimport { SafeTxContext } from '@/components/tx-flow/SafeTxProvider'\nimport { ChangeThresholdFlowFieldNames } from '@/components/tx-flow/flows/ChangeThreshold'\nimport type { ChangeThresholdFlowProps } from '@/components/tx-flow/flows/ChangeThreshold'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\n\nconst ReviewChangeThreshold = ({ params }: { params: ChangeThresholdFlowProps }) => {\n  const { safe } = useSafeInfo()\n  const newThreshold = params[ChangeThresholdFlowFieldNames.threshold]\n\n  const { setSafeTx, setSafeTxError } = useContext(SafeTxContext)\n\n  useEffect(() => {\n    createUpdateThresholdTx(newThreshold).then(setSafeTx).catch(setSafeTxError)\n  }, [newThreshold, setSafeTx, setSafeTxError])\n\n  const onChangeThreshold = () => {\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.OWNERS, label: safe.owners.length })\n    trackEvent({ ...SETTINGS_EVENTS.SETUP.THRESHOLD, label: newThreshold })\n  }\n\n  return (\n    <SignOrExecuteForm onSubmit={onChangeThreshold}>\n      <div>\n        <Typography variant=\"body2\" color=\"text.secondary\" mb={0.5}>\n          Any transaction will require the confirmation of:\n        </Typography>\n\n        <Typography>\n          <b>{newThreshold}</b> out of <b>{safe.owners.length} owner(s)</b>\n        </Typography>\n      </div>\n      <Box my={1}>\n        <Divider className={commonCss.nestedDivider} />\n      </Box>\n    </SignOrExecuteForm>\n  )\n}\n\nexport default ReviewChangeThreshold\n","import { Controller, useForm } from 'react-hook-form'\nimport {\n  TextField,\n  MenuItem,\n  Button,\n  CardActions,\n  Divider,\n  Typography,\n  Box,\n  Grid,\n  SvgIcon,\n  Tooltip,\n} from '@mui/material'\nimport type { ReactElement } from 'react'\n\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport TxCard from '@/components/tx-flow/common/TxCard'\nimport { ChangeThresholdFlowFieldNames } from '@/components/tx-flow/flows/ChangeThreshold'\nimport type { ChangeThresholdFlowProps } from '@/components/tx-flow/flows/ChangeThreshold'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { TOOLTIP_TITLES } from '@/components/tx-flow/common/constants'\n\nimport commonCss from '@/components/tx-flow/common/styles.module.css'\n\nexport const ChooseThreshold = ({\n  params,\n  onSubmit,\n}: {\n  params: ChangeThresholdFlowProps\n  onSubmit: (data: ChangeThresholdFlowProps) => void\n}): ReactElement => {\n  const { safe } = useSafeInfo()\n\n  const formMethods = useForm<ChangeThresholdFlowProps>({\n    defaultValues: params,\n    mode: 'onChange',\n  })\n\n  const newThreshold = formMethods.watch(ChangeThresholdFlowFieldNames.threshold)\n\n  return (\n    <TxCard>\n      <div>\n        <Typography variant=\"h3\" fontWeight={700}>\n          Threshold\n          <Tooltip title={TOOLTIP_TITLES.THRESHOLD} arrow placement=\"top\">\n            <span>\n              <SvgIcon\n                component={InfoIcon}\n                inheritViewBox\n                color=\"border\"\n                fontSize=\"small\"\n                sx={{\n                  verticalAlign: 'middle',\n                  ml: 0.5,\n                }}\n              />\n            </span>\n          </Tooltip>\n        </Typography>\n\n        <Typography>Any transaction will require the confirmation of:</Typography>\n      </div>\n\n      <form onSubmit={formMethods.handleSubmit(onSubmit)}>\n        <Box mb={2}>\n          <Controller\n            control={formMethods.control}\n            rules={{\n              validate: (value) => {\n                if (value === safe.threshold) {\n                  return `Current policy is already set to ${safe.threshold}.`\n                }\n              },\n            }}\n            name={ChangeThresholdFlowFieldNames.threshold}\n            render={({ field, fieldState }) => {\n              const isError = !!fieldState.error\n\n              return (\n                <Grid container direction=\"row\" gap={2} alignItems=\"center\">\n                  <Grid item>\n                    <TextField select {...field} error={isError}>\n                      {safe.owners.map((_, idx) => (\n                        <MenuItem key={idx + 1} value={idx + 1}>\n                          {idx + 1}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n\n                  <Grid item>\n                    <Typography>out of {safe.owners.length} owner(s)</Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    {isError ? (\n                      <Typography color=\"error\" mb={2}>\n                        {fieldState.error?.message}\n                      </Typography>\n                    ) : (\n                      <Typography mb={2}>\n                        {fieldState.isDirty ? 'Previous policy was ' : 'Current policy is '}\n                        <b>\n                          {safe.threshold} out of {safe.owners.length}\n                        </b>\n                        .\n                      </Typography>\n                    )}\n                  </Grid>\n                </Grid>\n              )\n            }}\n          />\n        </Box>\n\n        <Divider className={commonCss.nestedDivider} />\n\n        <CardActions>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={\n              !!formMethods.formState.errors[ChangeThresholdFlowFieldNames.threshold] ||\n              // Prevent initial submit before field was interacted with\n              newThreshold === safe.threshold\n            }\n          >\n            Next\n          </Button>\n        </CardActions>\n      </form>\n    </TxCard>\n  )\n}\n","import { Box, Button, Grid, Typography } from '@mui/material'\nimport Track from '@/components/common/Track'\nimport { SETTINGS_EVENTS } from '@/services/analytics'\nimport ChangeThresholdFlow from '@/components/tx-flow/flows/ChangeThreshold'\nimport CheckWallet from '@/components/common/CheckWallet'\nimport { useContext } from 'react'\nimport { TxModalContext } from '@/components/tx-flow'\n\nexport const RequiredConfirmation = ({ threshold, owners }: { threshold: number; owners: number }) => {\n  const { setTxFlow } = useContext(TxModalContext)\n\n  return (\n    <Box marginTop={6}>\n      <Grid container spacing={3}>\n        <Grid item lg={4} xs={12}>\n          <Typography variant=\"h4\" fontWeight={700}>\n            Required confirmations\n          </Typography>\n        </Grid>\n\n        <Grid item xs>\n          <Typography>Any transaction requires the confirmation of:</Typography>\n          <Typography paddingTop={3}>\n            <b>{threshold}</b> out of <b>{owners}</b> owners.\n          </Typography>\n\n          {owners > 1 && (\n            <Box pt={2}>\n              <CheckWallet>\n                {(isOk) => (\n                  <Track {...SETTINGS_EVENTS.SETUP.CHANGE_THRESHOLD}>\n                    <Button onClick={() => setTxFlow(<ChangeThresholdFlow />)} variant=\"contained\" disabled={!isOk}>\n                      Change\n                    </Button>\n                  </Track>\n                )}\n              </CheckWallet>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import { getDelegates } from '@safe-global/safe-gateway-typescript-sdk'\nimport useAsync from '@/hooks/useAsync'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport { Box, Grid, Paper, SvgIcon, Tooltip, Typography } from '@mui/material'\nimport EthHashInfo from '@/components/common/EthHashInfo'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { HelpCenterArticle } from '@/config/constants'\n\nconst useDelegates = () => {\n  const {\n    safe: { chainId },\n    safeAddress,\n  } = useSafeInfo()\n  const [delegates] = useAsync(() => {\n    if (!chainId || !safeAddress) return\n    return getDelegates(chainId, { safe: safeAddress })\n  }, [chainId, safeAddress])\n  return delegates\n}\n\nconst DelegatesList = () => {\n  const delegates = useDelegates()\n\n  if (!delegates?.results.length) return null\n\n  return (\n    <Paper sx={{ p: 4, mt: 2 }}>\n      <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n        <Grid container spacing={3}>\n          <Grid item lg={4} xs={12}>\n            <Typography variant=\"h4\" fontWeight={700}>\n              <Tooltip\n                placement=\"top\"\n                title={\n                  <>\n                    What are delegated accounts?{' '}\n                    <ExternalLink href={HelpCenterArticle.DELEGATES}>Learn more</ExternalLink>\n                  </>\n                }\n              >\n                <span>\n                  Delegated accounts\n                  <SvgIcon\n                    component={InfoIcon}\n                    inheritViewBox\n                    fontSize=\"small\"\n                    color=\"border\"\n                    sx={{ verticalAlign: 'middle', ml: 0.5 }}\n                  />\n                </span>\n              </Tooltip>\n            </Typography>\n          </Grid>\n\n          <Grid item xs>\n            <ul style={{ padding: 0, margin: 0 }}>\n              {delegates.results.map((item) => (\n                <li\n                  key={item.delegate}\n                  style={{ listStyleType: 'none', marginBottom: '1em' }}\n                  title={`Delegated by ${item.delegator}`}\n                >\n                  <EthHashInfo\n                    address={item.delegate}\n                    showCopyButton\n                    hasExplorer\n                    name={item.label || undefined}\n                    shortAddress={false}\n                  />\n                </li>\n              ))}\n            </ul>\n          </Grid>\n        </Grid>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default DelegatesList\n","import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { Grid, Paper, Skeleton, SvgIcon, Tooltip, Typography } from '@mui/material'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport { ContractVersion } from '@/components/settings/ContractVersion'\nimport { OwnerList } from '@/components/settings/owner/OwnerList'\nimport { RequiredConfirmation } from '@/components/settings/RequiredConfirmations'\nimport useSafeInfo from '@/hooks/useSafeInfo'\nimport SettingsHeader from '@/components/settings/SettingsHeader'\nimport DelegatesList from '@/components/settings/DelegatesList'\n\nconst Setup: NextPage = () => {\n  const { safe, safeLoaded } = useSafeInfo()\n  const nonce = safe.nonce\n  const ownerLength = safe.owners.length\n  const threshold = safe.threshold\n\n  return (\n    <>\n      <Head>\n        <title>{'Safe{Wallet} – Settings – Setup'}</title>\n      </Head>\n\n      <SettingsHeader />\n\n      <main>\n        <Paper sx={{ p: 4, mb: 2 }}>\n          <Grid container spacing={3}>\n            <Grid item lg={4} xs={12}>\n              <Typography variant=\"h4\" fontWeight={700}>\n                <Tooltip\n                  placement=\"top\"\n                  title=\"For security reasons, transactions made with a Safe Account need to be executed in order. The nonce shows you which transaction will be executed next. You can find the nonce for a transaction in the transaction details.\"\n                >\n                  <span>\n                    Safe Account nonce\n                    <SvgIcon\n                      component={InfoIcon}\n                      inheritViewBox\n                      fontSize=\"small\"\n                      color=\"border\"\n                      sx={{ verticalAlign: 'middle', ml: 0.5 }}\n                    />\n                  </span>\n                </Tooltip>\n              </Typography>\n\n              <Typography pt={1}>\n                Current nonce:{' '}\n                {safeLoaded ? <b>{nonce}</b> : <Skeleton width=\"30px\" sx={{ display: 'inline-block' }} />}\n              </Typography>\n            </Grid>\n\n            <Grid item xs>\n              <ContractVersion />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Paper sx={{ p: 4 }}>\n          <OwnerList />\n\n          <RequiredConfirmation threshold={threshold} owners={ownerLength} />\n        </Paper>\n\n        <DelegatesList />\n      </main>\n    </>\n  )\n}\n\nexport default Setup\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"styles_tableCell__t4PBD\",\"collapsedCell\":\"styles_collapsedCell__hJpGm\",\"collapsedRow\":\"styles_collapsedRow__h5L8I\",\"actions\":\"styles_actions__Xi7e7\",\"mobileColumn\":\"styles_mobileColumn__x_pTy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__0HwOj\",\"tab\":\"styles_tab__kSwiT\",\"label\":\"styles_label__kLyY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__dwmnI\",\"title\":\"styles_title__sN5vi\",\"border\":\"styles_border__3FL5Q\",\"pageHeader\":\"styles_pageHeader__E3fR_\",\"actionsWrapper\":\"styles_actionsWrapper__KFmOg\",\"navWrapper\":\"styles_navWrapper__3duqy\"};"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getAlertTitleUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertTitleRoot","styled","Typography","name","overridesResolver","props","styles","root","theme","fontWeight","typography","fontWeightMedium","marginTop","inProps","ref","useThemeProps","className","other","ownerState","classes","composeClasses","useUtilityClasses","gutterBottom","component","clsx","window","__NEXT_P","push","descendingComparator","a","b","orderBy","cells","rawValue","EnhancedTableHead","headCells","order","onRequestSort","TableHead","TableRow","map","headCell","TableCell","align","padding","sortDirection","id","sx","width","undefined","classNames","sticky","label","TableSortLabel","active","direction","onClick","property","Box","visuallyHidden","pageSizes","row","rows","mobileVariant","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","orderedRows","slice","sort","getComparator","pagedRows","TableContainer","Paper","mb","Table","aria-labelledby","css","TableBody","length","index","tabIndex","selected","collapsed","Object","entries","key","cell","Collapse","in","enter","content","TablePagination","rowsPerPageOptions","count","onPageChange","_","newPage","onRowsPerPageChange","event","parseInt","target","value","NextLinkComposed","forwardRef","href","as","replace","scroll","shallow","prefetch","legacyBehavior","locale","NextLink","passHref","tabs","router","useRouter","activeTab","Math","max","tab","indexOf","pathname","query","safe","Tabs","variant","allowScrollButtonsMobile","idx","Tab","color","title","action","noBorder","safeAddress","useSafeAddress","PageHeader","div","NavTabs","settingsNavItems","generalSettingsNavItems","useAddressResolver","address","addressBook","useAddressBook","ethersProvider","useWeb3ReadOnly","debouncedValue","useDebounce","addressBookName","isDomainLookupEnabled","useHasFeature","FEATURES","shouldResolve","useAsync","lookupAddress","ens","isResolving","resolving","useMemo","MasterCopyDeployer","extractMasterCopyInfo","mc","isCircles","version","toLowerCase","includes","CIRCLES","dashIndex","substring","deployer","GNOSIS","deployerRepoUrl","createUpdateSafeTxs","chain","assertValidSafeVersion","latestMasterCopyAddress","getReadOnlyGnosisSafeContract","LATEST_SAFE_VERSION","getAddress","readOnlySafeContract","changeMasterCopyCallData","encode","changeFallbackHandlerCallData","safeContractInstance","hasSafeFeature","SAFE_FEATURES","fallbackHandlerAddress","getReadOnlyFallbackHandlerContract","chainId","getChangeFallbackHandlerCallData","to","data","operation","OperationType","UpdateSafeReview","useSafeInfo","safeLoaded","useCurrentChain","useContext","SafeTxContext","setSafeTx","setSafeTxError","setNonce","useEffect","txs","createMultiSendCallOnlyTx","then","catch","SignOrExecuteForm","onSubmit","ExternalLink","TxLayout","subtitle","icon","SettingsIcon","ContractVersion","TxModalContext","setTxFlow","useMasterCopies","useChainId","fetchMasterCopies","res","getMasterCopies","logError","Errors","masterCopies","masterCopyAddress","implementation","safeMasterCopy","find","sameAddress","needsUpdate","implementationVersionState","ImplementationVersionState","showUpdateDialog","marginBottom","Skeleton","mt","Alert","borderRadius","borderColor","SvgIcon","InfoIcon","inheritViewBox","AlertTitle","CheckWallet","isOk","Button","UpdateSafeFlow","disabled","display","alignItems","CheckCircleIcon","mr","TOOLTIP_TITLES","ChooseOwnerMode","REPLACE","ADD","_rect","ChooseOwner","params","mode","formMethods","useForm","defaultValues","handleSubmit","formState","watch","control","isValid","keys","errors","notAlreadyOwner","uniqueAddress","owners","owner","notCurrentSafe","addressIsNotCurrentSafe","fallbackName","onFormSubmit","formData","newOwner","threshold","newNumberOfOwners","removedOwner","TxCard","FormProvider","form","commonCss","my","EthHashInfo","showCopyButton","shortAddress","hasExplorer","FormControl","fullWidth","NameInput","placeholder","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","position","CircularProgress","size","AddressBookInput","validate","required","Divider","Tooltip","arrow","placement","span","fontSize","verticalAlign","ml","Grid","container","gap","pt","item","Controller","render","field","TextField","select","MenuItem","CardActions","type","_extends","assign","bind","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_path","_path2","_ref","titleId","height","viewBox","fill","xmlns","x","y","rx","ReviewOwner","dispatch","useAppDispatch","createSwapOwnerTx","newOwnerAddress","oldOwnerAddress","createAddOwnerTx","ownerAddress","upsertAddressBookEntry","trackEvent","SETTINGS_EVENTS","backgroundColor","palette","warning","background","p","MinusIcon","success","PlusIcon","useTxStepper","step","nextStep","prevStep","steps","SaveAddressIcon","onBack","EditOwnerDialog","open","setOpen","handleClose","nameValue","buttonDisabled","Track","IconButton","EditIcon","ModalDialog","onClose","dialogTitle","DialogContent","py","DialogActions","ReviewRemoveOwner","createRemoveOwnerTx","newOwnerLength","m","SetThreshold","selectedThreshold","setSelectedThreshold","e","preventDefault","xs","Select","onChange","toString","min","fillRule","clipRule","OwnerList","showRemoveOwnerButton","showName","actions","tableCss","ReplaceOwnerFlow","ReplaceOwnerIcon","RemoveOwnerFlow","DeleteIcon","flexDirection","spacing","lg","EnhancedTable","AddOwnerFlow","startIcon","AddIcon","newThreshold","ChangeThresholdFlowFieldNames","createUpdateThresholdTx","ChooseThreshold","rules","fieldState","isError","error","message","isDirty","ReviewChangeThreshold","RequiredConfirmation","paddingTop","ChangeThresholdFlow","delegates","getDelegates","useDelegates","results","HelpCenterArticle","ul","style","margin","li","listStyleType","delegator","delegate","nonce","ownerLength","Head","SettingsHeader","main","DelegatesList","module"],"sourceRoot":""}