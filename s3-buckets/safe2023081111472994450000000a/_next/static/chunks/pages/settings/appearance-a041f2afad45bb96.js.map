{"version":3,"file":"static/chunks/pages/settings/appearance-a041f2afad45bb96.js","mappings":"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","sources":["webpack://_N_E/?43e3","webpack://_N_E/./src/components/common/NavTabs/index.tsx","webpack://_N_E/./src/components/common/PageHeader/index.tsx","webpack://_N_E/./src/components/settings/SettingsHeader/index.tsx","webpack://_N_E/./src/components/settings/EmojiPreview/index.tsx","webpack://_N_E/./src/pages/settings/appearance.tsx","webpack://_N_E/./src/components/common/NavTabs/styles.module.css","webpack://_N_E/./src/components/common/PageHeader/styles.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings/appearance\",\n      function () {\n        return require(\"private-next-pages/settings/appearance.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/settings/appearance\"])\n      });\n    }\n  ","import React, { forwardRef } from 'react'\nimport NextLink, { type LinkProps as NextLinkProps } from 'next/link'\nimport { Tab, Tabs, Typography, type TabProps } from '@mui/material'\nimport { useRouter } from 'next/router'\nimport type { NavItem } from '@/components/sidebar/SidebarNavigation/config'\nimport css from './styles.module.css'\n\ntype Props = TabProps & NextLinkProps\n\n// This is needed in order for the tabs to work properly with Next Link e.g. tabbing with the keyboard\n// Based on https://github.com/mui/material-ui/blob/master/examples/nextjs-with-typescript/src/Link.tsx\nconst NextLinkComposed = forwardRef<HTMLAnchorElement, Props>(function NextComposedLink(props: Props, ref) {\n  const { href, as, replace, scroll, shallow, prefetch, legacyBehavior = true, locale, ...other } = props\n\n  return (\n    <NextLink\n      href={href}\n      prefetch={prefetch}\n      as={as}\n      replace={replace}\n      scroll={scroll}\n      shallow={shallow}\n      passHref\n      locale={locale}\n      legacyBehavior={legacyBehavior}\n    >\n      {/* @ts-ignore */}\n      <a ref={ref} {...other} />\n    </NextLink>\n  )\n})\n\nconst NavTabs = ({ tabs }: { tabs: NavItem[] }) => {\n  const router = useRouter()\n  const activeTab = Math.max(0, tabs.map((tab) => tab.href).indexOf(router.pathname))\n  const query = router.query.safe ? { safe: router.query.safe } : undefined\n\n  return (\n    <Tabs value={activeTab} variant=\"scrollable\" allowScrollButtonsMobile className={css.tabs}>\n      {tabs.map((tab, idx) => (\n        <Tab\n          component={NextLinkComposed}\n          key={tab.href}\n          href={{ pathname: tab.href, query }}\n          className={css.tab}\n          label={\n            <Typography\n              variant=\"body2\"\n              fontWeight={700}\n              color={activeTab === idx ? 'primary' : 'primary.light'}\n              className={css.label}\n            >\n              {tab.label}\n            </Typography>\n          }\n        />\n      ))}\n    </Tabs>\n  )\n}\n\nexport default NavTabs\n","import { Box, Typography } from '@mui/material'\nimport classNames from 'classnames'\n\nimport type { ReactElement } from 'react'\n\nimport css from './styles.module.css'\n\nconst PageHeader = ({\n  title,\n  action,\n  noBorder,\n}: {\n  title: string\n  action?: ReactElement\n  noBorder?: boolean\n}): ReactElement => {\n  return (\n    <Box className={classNames(css.container, { [css.border]: !noBorder })}>\n      <Typography variant=\"h3\" className={css.title}>\n        {title}\n      </Typography>\n      {action}\n    </Box>\n  )\n}\n\nexport default PageHeader\n","import type { ReactElement } from 'react'\n\nimport NavTabs from '@/components/common/NavTabs'\nimport PageHeader from '@/components/common/PageHeader'\nimport { generalSettingsNavItems, settingsNavItems } from '@/components/sidebar/SidebarNavigation/config'\nimport css from '@/components/common/PageHeader/styles.module.css'\nimport useSafeAddress from '@/hooks/useSafeAddress'\n\nconst SettingsHeader = (): ReactElement => {\n  const safeAddress = useSafeAddress()\n\n  return (\n    <PageHeader\n      title={safeAddress ? 'Settings' : 'Preferences'}\n      action={\n        <div className={css.navWrapper}>\n          <NavTabs tabs={safeAddress ? settingsNavItems : generalSettingsNavItems} />\n        </div>\n      }\n    />\n  )\n}\n\nexport default SettingsHeader\n","import { Alert, Box, Chip, SvgIcon, Typography } from '@mui/material'\nimport { ZERO_ADDRESS } from '@safe-global/safe-core-sdk/dist/src/utils/constants'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport SafeIcon from '@/components/common/SafeIcon'\n\nconst EmojiPreview = () => (\n  <>\n    <Chip label=\"New\" color=\"secondary\" sx={{ fontWeight: 'bold', borderRadius: 2 }} />\n\n    <Alert severity=\"success\" sx={{ marginTop: 2, borderColor: 'secondary.main' }} icon={<></>}>\n      <SvgIcon component={InfoIcon} sx={{ marginRight: 1, verticalAlign: 'middle' }} color=\"secondary\" />\n\n      <Typography component=\"span\">Enable emojis for all Ethereum addresses and your Safe Accounts.</Typography>\n\n      <Box mt={1} display=\"flex\" alignItems=\"center\" gap={1}>\n        <SafeIcon address={ZERO_ADDRESS} />\n        <Typography variant=\"body2\">{ZERO_ADDRESS}</Typography>\n      </Box>\n    </Alert>\n  </>\n)\n\nexport default EmojiPreview\n","import { Checkbox, FormControlLabel, FormGroup, Grid, Paper, Typography, Switch } from '@mui/material'\nimport type { ChangeEvent } from 'react'\nimport type { NextPage } from 'next'\nimport Head from 'next/head'\n\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport {\n  selectSettings,\n  setCopyShortName,\n  setDarkMode,\n  setShowShortName,\n  setAddressEmojis,\n} from '@/store/settingsSlice'\nimport SettingsHeader from '@/components/settings/SettingsHeader'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { useDarkMode } from '@/hooks/useDarkMode'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport EmojiPreview from '@/components/settings/EmojiPreview'\n\nconst Appearance: NextPage = () => {\n  const dispatch = useAppDispatch()\n  const settings = useAppSelector(selectSettings)\n  const isDarkMode = useDarkMode()\n\n  const handleToggle = (\n    action: typeof setCopyShortName | typeof setDarkMode | typeof setShowShortName | typeof setAddressEmojis,\n    event:\n      | typeof SETTINGS_EVENTS.APPEARANCE.PREPEND_PREFIXES\n      | typeof SETTINGS_EVENTS.APPEARANCE.COPY_PREFIXES\n      | typeof SETTINGS_EVENTS.APPEARANCE.DARK_MODE\n      | typeof SETTINGS_EVENTS.APPEARANCE.ADDRESS_EMOJIS,\n  ) => {\n    return (_: ChangeEvent<HTMLInputElement>, checked: boolean) => {\n      dispatch(action(checked))\n\n      trackEvent({\n        ...event,\n        label: checked,\n      })\n    }\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{'Safe{Wallet} – Settings – Appearance'}</title>\n      </Head>\n\n      <SettingsHeader />\n\n      <main>\n        <Paper sx={{ p: 4 }}>\n          <Grid container spacing={3}>\n            <Grid item lg={4} xs={12}>\n              <Typography variant=\"h4\" fontWeight=\"bold\" mb={1}>\n                Chain-specific addresses\n              </Typography>\n            </Grid>\n\n            <Grid item xs>\n              <Typography mb={2}>\n                Choose whether to prepend{' '}\n                <ExternalLink href=\"https://eips.ethereum.org/EIPS/eip-3770\">EIP-3770</ExternalLink> address prefixes\n                across all Safe Accounts.\n              </Typography>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={settings.shortName.show}\n                      onChange={handleToggle(setShowShortName, SETTINGS_EVENTS.APPEARANCE.PREPEND_PREFIXES)}\n                    />\n                  }\n                  label=\"Prepend chain prefix to addresses\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={settings.shortName.copy}\n                      onChange={handleToggle(setCopyShortName, SETTINGS_EVENTS.APPEARANCE.COPY_PREFIXES)}\n                    />\n                  }\n                  label=\"Copy addresses with chain prefix\"\n                />\n              </FormGroup>\n            </Grid>\n          </Grid>\n\n          <Grid container alignItems=\"center\" marginTop={2} spacing={3}>\n            <Grid item lg={4} xs={12}>\n              <Typography variant=\"h4\" fontWeight=\"bold\">\n                Theme\n              </Typography>\n            </Grid>\n\n            <Grid item xs>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={isDarkMode}\n                    onChange={handleToggle(setDarkMode, SETTINGS_EVENTS.APPEARANCE.DARK_MODE)}\n                  />\n                }\n                label=\"Dark mode\"\n              />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3} mt={2}>\n            <Grid item lg={4} xs={12}>\n              <Typography variant=\"h4\" fontWeight=\"bold\">\n                Experimental\n              </Typography>\n            </Grid>\n\n            <Grid item xs>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.addressEmojis}\n                    onChange={handleToggle(setAddressEmojis, SETTINGS_EVENTS.APPEARANCE.ADDRESS_EMOJIS)}\n                  />\n                }\n                label=\"Address emoji\"\n              />\n              <EmojiPreview />\n            </Grid>\n          </Grid>\n        </Paper>\n      </main>\n    </>\n  )\n}\n\nexport default Appearance\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"styles_tabs__0HwOj\",\"tab\":\"styles_tab__kSwiT\",\"label\":\"styles_label__kLyY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__dwmnI\",\"title\":\"styles_title__sN5vi\",\"border\":\"styles_border__3FL5Q\",\"pageHeader\":\"styles_pageHeader__E3fR_\",\"actionsWrapper\":\"styles_actionsWrapper__KFmOg\",\"navWrapper\":\"styles_navWrapper__3duqy\"};"],"names":["window","__NEXT_P","push","NextLinkComposed","forwardRef","props","ref","href","as","replace","scroll","shallow","prefetch","legacyBehavior","locale","other","NextLink","passHref","a","tabs","router","useRouter","activeTab","Math","max","map","tab","indexOf","pathname","query","safe","undefined","Tabs","value","variant","allowScrollButtonsMobile","className","css","idx","Tab","component","label","Typography","fontWeight","color","title","action","noBorder","Box","classNames","safeAddress","useSafeAddress","PageHeader","div","NavTabs","settingsNavItems","generalSettingsNavItems","Chip","sx","borderRadius","Alert","severity","marginTop","borderColor","icon","SvgIcon","InfoIcon","marginRight","verticalAlign","mt","display","alignItems","gap","SafeIcon","address","ZERO_ADDRESS","dispatch","useAppDispatch","settings","useAppSelector","selectSettings","isDarkMode","useDarkMode","handleToggle","event","_","checked","trackEvent","Head","SettingsHeader","main","Paper","p","Grid","container","spacing","item","lg","xs","mb","ExternalLink","FormGroup","FormControlLabel","control","Checkbox","shortName","show","onChange","setShowShortName","SETTINGS_EVENTS","copy","setCopyShortName","Switch","setDarkMode","addressEmojis","setAddressEmojis","EmojiPreview","module","exports"],"sourceRoot":""}