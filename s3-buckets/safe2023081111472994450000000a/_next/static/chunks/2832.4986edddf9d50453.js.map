{"version":3,"file":"static/chunks/2832.4986edddf9d50453.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ethereumjs/common/dist.browser/chains/index.js","webpack://_N_E/./node_modules/@ethereumjs/common/dist.browser/eips/index.js","webpack://_N_E/./node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","webpack://_N_E/./node_modules/@ethereumjs/common/dist.browser/index.js","webpack://_N_E/./node_modules/crc-32/crc32.js"],"sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(require(\"./mainnet.json\"));\nvar ropsten_json_1 = __importDefault(require(\"./ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(require(\"./rinkeby.json\"));\nvar kovan_json_1 = __importDefault(require(\"./kovan.json\"));\nvar goerli_json_1 = __importDefault(require(\"./goerli.json\"));\nvar sepolia_json_1 = __importDefault(require(\"./sepolia.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '11155111': 'sepolia',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        sepolia: sepolia_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIPs = void 0;\nexports.EIPs = {\n    1153: require('./1153.json'),\n    1559: require('./1559.json'),\n    2315: require('./2315.json'),\n    2537: require('./2537.json'),\n    2565: require('./2565.json'),\n    2718: require('./2718.json'),\n    2929: require('./2929.json'),\n    2930: require('./2930.json'),\n    3198: require('./3198.json'),\n    3529: require('./3529.json'),\n    3540: require('./3540.json'),\n    3541: require('./3541.json'),\n    3554: require('./3554.json'),\n    3607: require('./3607.json'),\n    3651: require('./3651.json'),\n    3670: require('./3670.json'),\n    3675: require('./3675.json'),\n    3855: require('./3855.json'),\n    3860: require('./3860.json'),\n    4345: require('./4345.json'),\n    4399: require('./4399.json'),\n    5133: require('./5133.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n    ['berlin', require('./berlin.json')],\n    ['london', require('./london.json')],\n    ['shanghai', require('./shanghai.json')],\n    ['arrowGlacier', require('./arrowGlacier.json')],\n    ['grayGlacier', require('./grayGlacier.json')],\n    ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n    ['merge', require('./merge.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _this = this;\n        var _b, _c;\n        _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return require('./genesisStates/mainnet.json');\n            case 'ropsten':\n                return require('./genesisStates/ropsten.json');\n            case 'rinkeby':\n                return require('./genesisStates/rinkeby.json');\n            case 'kovan':\n                return require('./genesisStates/kovan.json');\n            case 'goerli':\n                return require('./genesisStates/goerli.json');\n            case 'sepolia':\n                return require('./genesisStates/sepolia.json');\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.removeAllListeners();\n        return copy;\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports.default = Common;\n//# sourceMappingURL=index.js.map","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n"],"names":["__values","this","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__importDefault","mod","__esModule","Object","defineProperty","exports","chains","_getInitializedChains","mainnet_json_1","ropsten_json_1","rinkeby_json_1","kovan_json_1","goerli_json_1","sepolia_json_1","customChains","e_1","_a","names","mainnet","default","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1","customChains_1_1","chain","name_1","name","chainId","toString","e_1_1","error","return","EIPs","hardforks","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","String","__","constructor","create","__assign","assign","t","n","arguments","apply","ConsensusAlgorithm","ConsensusType","Hardfork","Chain","CustomChain","events_1","crc_32_1","ethereumjs_util_1","chains_1","hardforks_1","eips_1","Common","_super","opts","_b","_c","_this","_supportedHardforks","_eips","_customChains","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","_d","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","concat","forCustomChain","customChainParams","isSupportedChainId","initializedChains","Boolean","BN","isBN","e_2","plainCustomChains","isArray","map","e","required_1","required_1_1","param","undefined","e_2_1","e_3","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","emit","e_3_1","getHardforkByBlockNumber","blockNumber","td","e_4","toType","TypeOutput","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","e_4_1","msgAdd","hardforkGteHardfork","msg","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","e_5","hfs","hfs_1","hfs_1_1","e_5_1","chainName","e_6","e_6_1","e_7","_loop_1","eip","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2","eips_2_1","e_7_1","topic","e_8","paramByEIP","e_8_1","paramByHardfork","e_9","e_10","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_10_1","v","e_9_1","eipParams","paramByBlock","activeHfs","activeHardforks","e_11","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","e_11_1","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","e_12","onlyActive","posHf1","posHf2","index","hardforks_2","hardforks_2_1","e_12_1","hardforkIsActiveOnChain","e_13","e_13_1","e_14","hfs_2","hfs_2_1","push","e_14_1","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","eq","nextHardforkBlock","nextHardforkBlockBN","reduce","acc","gt","isNextHardforkBlock","e_15","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","e_15_1","inputBuffer","forkhash","intToBuffer","buf","data","hardforkForForkHash","resArray","filter","genesisState","e_16","chainArrayWithGenesis","e_16_1","bootstrapNodes","dnsNetworks","chainIdBN","networkIdBN","consensusType","e_17","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","e_17_1","consensusAlgorithm","e_18","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","e_18_1","consensusConfig","e_19","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","e_19_1","copy","getPrototypeOf","removeAllListeners","EventEmitter","factory","CRC32","version","T0","c","table","Int32Array","signed_crc_table","TT","T","out","subarray","slice","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","charCodeAt","B","str","DO_NOT_EXPORT_CRC"],"sourceRoot":""}