{"version":3,"file":"static/chunks/4480.5c16434f94b34a4c.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/utils.js","webpack://_N_E/./node_modules/axios/lib/helpers/bind.js","webpack://_N_E/./node_modules/axios/lib/utils.js","webpack://_N_E/./node_modules/axios/lib/core/AxiosError.js","webpack://_N_E/./node_modules/axios/lib/helpers/toFormData.js","webpack://_N_E/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://_N_E/./node_modules/axios/lib/helpers/buildURL.js","webpack://_N_E/./node_modules/axios/lib/core/InterceptorManager.js","webpack://_N_E/./node_modules/axios/lib/defaults/transitional.js","webpack://_N_E/./node_modules/axios/lib/platform/browser/index.js","webpack://_N_E/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://_N_E/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://_N_E/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://_N_E/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://_N_E/./node_modules/axios/lib/defaults/index.js","webpack://_N_E/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://_N_E/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://_N_E/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://_N_E/./node_modules/axios/lib/core/transformData.js","webpack://_N_E/./node_modules/axios/lib/cancel/isCancel.js","webpack://_N_E/./node_modules/axios/lib/cancel/CanceledError.js","webpack://_N_E/./node_modules/axios/lib/helpers/cookies.js","webpack://_N_E/./node_modules/axios/lib/core/buildFullPath.js","webpack://_N_E/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://_N_E/./node_modules/axios/lib/helpers/combineURLs.js","webpack://_N_E/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://_N_E/./node_modules/axios/lib/helpers/speedometer.js","webpack://_N_E/./node_modules/axios/lib/adapters/xhr.js","webpack://_N_E/./node_modules/axios/lib/adapters/adapters.js","webpack://_N_E/./node_modules/axios/lib/helpers/null.js","webpack://_N_E/./node_modules/axios/lib/core/settle.js","webpack://_N_E/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://_N_E/./node_modules/axios/lib/core/dispatchRequest.js","webpack://_N_E/./node_modules/axios/lib/core/mergeConfig.js","webpack://_N_E/./node_modules/axios/lib/env/data.js","webpack://_N_E/./node_modules/axios/lib/helpers/validator.js","webpack://_N_E/./node_modules/axios/lib/core/Axios.js","webpack://_N_E/./node_modules/axios/lib/cancel/CancelToken.js","webpack://_N_E/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://_N_E/./node_modules/axios/lib/axios.js","webpack://_N_E/./node_modules/axios/lib/helpers/spread.js","webpack://_N_E/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://_N_E/./node_modules/@ledgerhq/domain-service/lib-es/registries/index.js","webpack://_N_E/./node_modules/@ledgerhq/domain-service/lib-es/signers/index.js","webpack://_N_E/./node_modules/@ledgerhq/cryptoassets/lib-es/data/evm/index.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/services/ledger/loadConfig.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/services/ledger/erc20.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/services/ledger/contracts.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/services/ledger/nfts.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/services/ledger/index.js","webpack://_N_E/./node_modules/@ledgerhq/domain-service/lib-es/utils/index.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/modules/Domains/index.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/errors.js","webpack://_N_E/./node_modules/@ledgerhq/cryptoassets/lib-es/data/eip712.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/modules/EIP712/EIP712.utils.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/modules/EIP712/index.js","webpack://_N_E/./node_modules/@ledgerhq/hw-app-eth/lib-es/Eth.js","webpack://_N_E/./node_modules/crypto-js/core.js","webpack://_N_E/./node_modules/crypto-js/sha224.js","webpack://_N_E/./node_modules/crypto-js/sha256.js"],"sourcesContent":["import { encode, decode } from \"@ethersproject/rlp\";\nimport { BigNumber } from \"bignumber.js\";\nexport function splitPath(path) {\n    const result = [];\n    const components = path.split(\"/\");\n    components.forEach((element) => {\n        let number = parseInt(element, 10);\n        if (isNaN(number)) {\n            return; // FIXME shouldn't it throws instead?\n        }\n        if (element.length > 1 && element[element.length - 1] === \"'\") {\n            number += 0x80000000;\n        }\n        result.push(number);\n    });\n    return result;\n}\nexport function hexBuffer(str) {\n    return Buffer.from(str.startsWith(\"0x\") ? str.slice(2) : str, \"hex\");\n}\nexport function maybeHexBuffer(str) {\n    if (!str)\n        return null;\n    return hexBuffer(str);\n}\nexport const decodeTxInfo = (rawTx) => {\n    const VALID_TYPES = [1, 2];\n    const txType = VALID_TYPES.includes(rawTx[0]) ? rawTx[0] : null;\n    const rlpData = txType === null ? rawTx : rawTx.slice(1);\n    const rlpTx = decode(rlpData).map((hex) => Buffer.from(hex.slice(2), \"hex\"));\n    let chainIdTruncated = 0;\n    const rlpDecoded = decode(rlpData);\n    let decodedTx;\n    if (txType === 2) {\n        // EIP1559\n        decodedTx = {\n            data: rlpDecoded[7],\n            to: rlpDecoded[5],\n            chainId: rlpTx[0],\n        };\n    }\n    else if (txType === 1) {\n        // EIP2930\n        decodedTx = {\n            data: rlpDecoded[6],\n            to: rlpDecoded[4],\n            chainId: rlpTx[0],\n        };\n    }\n    else {\n        // Legacy tx\n        decodedTx = {\n            data: rlpDecoded[5],\n            to: rlpDecoded[3],\n            // Default to 1 for non EIP 155 txs\n            chainId: rlpTx.length > 6 ? rlpTx[6] : Buffer.from(\"0x01\", \"hex\"),\n        };\n    }\n    const chainIdSrc = decodedTx.chainId;\n    let chainId = new BigNumber(0);\n    if (chainIdSrc) {\n        // Using BigNumber because chainID could be any uint256.\n        chainId = new BigNumber(chainIdSrc.toString(\"hex\"), 16);\n        const chainIdTruncatedBuf = Buffer.alloc(4);\n        if (chainIdSrc.length > 4) {\n            chainIdSrc.copy(chainIdTruncatedBuf);\n        }\n        else {\n            chainIdSrc.copy(chainIdTruncatedBuf, 4 - chainIdSrc.length);\n        }\n        chainIdTruncated = chainIdTruncatedBuf.readUInt32BE(0);\n    }\n    let vrsOffset = 0;\n    if (txType === null && rlpTx.length > 6) {\n        const rlpVrs = Buffer.from(encode(rlpTx.slice(-3)).slice(2), \"hex\");\n        vrsOffset = rawTx.length - (rlpVrs.length - 1);\n        // First byte > 0xf7 means the length of the list length doesn't fit in a single byte.\n        if (rlpVrs[0] > 0xf7) {\n            // Increment vrsOffset to account for that extra byte.\n            vrsOffset++;\n            // Compute size of the list length.\n            const sizeOfListLen = rlpVrs[0] - 0xf7;\n            // Increase rlpOffset by the size of the list length.\n            vrsOffset += sizeOfListLen - 1;\n        }\n    }\n    return {\n        decodedTx,\n        txType,\n        chainId,\n        chainIdTruncated,\n        vrsOffset,\n    };\n};\n/**\n * @ignore for the README\n *\n * Helper to convert an integer as a hexadecimal string with the right amount of digits\n * to respect the number of bytes given as parameter\n *\n * @param int Integer\n * @param bytes Number of bytes it should be represented as (1 byte = 2 caraters)\n * @returns The given integer as an hexa string padded with the right number of 0\n */\nexport const intAsHexBytes = (int, bytes) => int.toString(16).padStart(2 * bytes, \"0\");\n/**\n * @ignore for the README\n *\n * List of selectors (hexadecimal representation of the used method's signature) related to\n * ERC20 (Tokens), ERC721/ERC1155 (NFT).\n * You can verify and/or get more info about them on http://4byte.directory\n */\nexport var ERC20_CLEAR_SIGNED_SELECTORS;\n(function (ERC20_CLEAR_SIGNED_SELECTORS) {\n    ERC20_CLEAR_SIGNED_SELECTORS[\"APPROVE\"] = \"0x095ea7b3\";\n    ERC20_CLEAR_SIGNED_SELECTORS[\"TRANSFER\"] = \"0xa9059cbb\";\n})(ERC20_CLEAR_SIGNED_SELECTORS || (ERC20_CLEAR_SIGNED_SELECTORS = {}));\nexport var ERC721_CLEAR_SIGNED_SELECTORS;\n(function (ERC721_CLEAR_SIGNED_SELECTORS) {\n    ERC721_CLEAR_SIGNED_SELECTORS[\"APPROVE\"] = \"0x095ea7b3\";\n    ERC721_CLEAR_SIGNED_SELECTORS[\"SET_APPROVAL_FOR_ALL\"] = \"0xa22cb465\";\n    ERC721_CLEAR_SIGNED_SELECTORS[\"TRANSFER_FROM\"] = \"0x23b872dd\";\n    ERC721_CLEAR_SIGNED_SELECTORS[\"SAFE_TRANSFER_FROM\"] = \"0x42842e0e\";\n    ERC721_CLEAR_SIGNED_SELECTORS[\"SAFE_TRANSFER_FROM_WITH_DATA\"] = \"0xb88d4fde\";\n})(ERC721_CLEAR_SIGNED_SELECTORS || (ERC721_CLEAR_SIGNED_SELECTORS = {}));\nexport var ERC1155_CLEAR_SIGNED_SELECTORS;\n(function (ERC1155_CLEAR_SIGNED_SELECTORS) {\n    ERC1155_CLEAR_SIGNED_SELECTORS[\"SET_APPROVAL_FOR_ALL\"] = \"0xa22cb465\";\n    ERC1155_CLEAR_SIGNED_SELECTORS[\"SAFE_TRANSFER_FROM\"] = \"0xf242432a\";\n    ERC1155_CLEAR_SIGNED_SELECTORS[\"SAFE_BATCH_TRANSFER_FROM\"] = \"0x2eb2c2d6\";\n})(ERC1155_CLEAR_SIGNED_SELECTORS || (ERC1155_CLEAR_SIGNED_SELECTORS = {}));\nexport const tokenSelectors = Object.values(ERC20_CLEAR_SIGNED_SELECTORS);\nexport const nftSelectors = [\n    ...Object.values(ERC721_CLEAR_SIGNED_SELECTORS),\n    ...Object.values(ERC1155_CLEAR_SIGNED_SELECTORS),\n];\nexport const mergeResolutions = (resolutionsArray) => {\n    const mergedResolutions = {\n        nfts: [],\n        erc20Tokens: [],\n        externalPlugin: [],\n        plugin: [],\n        domains: [],\n    };\n    for (const resolutions of resolutionsArray) {\n        for (const key in resolutions) {\n            mergedResolutions[key].push(...resolutions[key]);\n        }\n    }\n    return mergedResolutions;\n};\n//# sourceMappingURL=utils.js.map","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.4.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst REGISTRIES = [\n    {\n        name: \"ens\",\n        resolvers: {\n            forward: \"https://explorers.api.live.ledger.com/blockchain/v4/eth/ens/resolve/{name}\",\n            reverse: \"https://explorers.api.live.ledger.com/blockchain/v4/eth/ens/reverse-resolve/{address}\",\n        },\n        signatures: {\n            forward: \"https://nft.api.live.ledger.com/v1/names/ens/forward/{name}?challenge={challenge}\",\n            reverse: \"https://nft.api.live.ledger.com/v1/names/ens/reverse/{address}?challenge={challenge}\",\n        },\n        patterns: {\n            forward: new RegExp(\"\\\\.eth$\"),\n            reverse: new RegExp(\"^0x[0-9a-fA-F]{40}$\"),\n        },\n        coinTypes: [60],\n    },\n];\n/**\n * Method is voluntarly made async so it can be replaced by a backend call once implemented\n */\nexport const getRegistries = () => __awaiter(void 0, void 0, void 0, function* () { return REGISTRIES; });\n/**\n * Get an array of registries compatible with a given domain\n *\n * @param {string} domain\n * @returns {Promise<AddressResolutionResponse[]>}\n */\nexport const getRegistriesForDomain = (domain) => __awaiter(void 0, void 0, void 0, function* () {\n    const registries = yield getRegistries();\n    return registries.filter((registry) => registry.patterns.forward.test(domain));\n});\n/**\n * Get an array of registries compatible with a given address\n *\n * @param {string} address\n * @returns {Promise<AddressResolutionResponse[]>}\n */\nexport const getRegistriesForAddress = (address) => __awaiter(void 0, void 0, void 0, function* () {\n    const registries = yield getRegistries();\n    return registries.filter((registry) => registry.patterns.reverse.test(address));\n});\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { log } from \"@ledgerhq/logs\";\nimport { getRegistries } from \"../registries\";\nimport { validateDomain } from \"../utils\";\n/**\n * Get an APDU to sign a domain resolution on the nano\n *\n * @param {string} domain\n * @param {SupportedRegistries} registryName\n * @param {string} challenge\n * @returns {Promise<AddressResolutionResponse[]>}\n */\nexport const signDomainResolution = (domain, registryName, challenge) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!validateDomain(domain)) {\n        throw new Error(`Domains with more than 255 caracters or with unicode are not supported on the nano. Domain: ${domain}`);\n    }\n    const registries = yield getRegistries();\n    const registry = registries.find((r) => r.name === registryName);\n    if (!registry)\n        return null;\n    const url = registry.signatures.forward\n        .replace(\"{name}\", domain)\n        .replace(\"{challenge}\", challenge);\n    return axios\n        .request({\n        method: \"GET\",\n        url,\n    })\n        .then(({ data }) => data.payload)\n        .catch((error) => {\n        /* istanbul ignore next: don't test logs */\n        if (error.status !== 404) {\n            log(\"domain-service\", \"failed to get APDU for a domain\", {\n                domain,\n                error,\n            });\n        }\n        return null;\n    });\n});\n/**\n * Get an APDU to sign an address resolve resolution on the nano\n *\n * @param {string} address\n * @param {SupportedRegistries} registryName\n * @param {string} challenge\n * @returns {Promise<AddressResolutionResponse[]>}\n */\nexport const signAddressResolution = (address, registryName, challenge) => __awaiter(void 0, void 0, void 0, function* () {\n    const registries = yield getRegistries();\n    const registry = registries.find((r) => r.name === registryName);\n    if (!registry)\n        return null;\n    const url = registry.signatures.reverse\n        .replace(\"{address}\", address)\n        .replace(\"{challenge}\", challenge);\n    return axios\n        .request({\n        method: \"GET\",\n        url,\n    })\n        .then(({ data }) => data.payload)\n        .catch((error) => {\n        /* istanbul ignore next: don't test logs */\n        if (error.status !== 404) {\n            log(\"domain-service\", \"failed to get APDU for an address\", {\n                address,\n                error,\n            });\n        }\n        return null;\n    });\n});\n//# sourceMappingURL=index.js.map","import arbitrum_tokens from \"./42161/erc20.json\";\nimport arbitrum_goerli_tokens from \"./421613/erc20.json\";\nimport astar_tokens from \"./592/erc20.json\";\nimport bittorrent_tokens from \"./199/erc20.json\";\nimport bsc_tokens from \"./56/erc20.json\";\nimport cronos_tokens from \"./25/erc20.json\";\nimport energy_web_tokens from \"./246/erc20.json\";\nimport ethereum_tokens from \"./1/erc20.json\";\nimport ethereum_goerli_tokens from \"./5/erc20.json\";\nimport ethereum_rinkeby_tokens from \"./4/erc20.json\";\nimport ethereum_ropsten_tokens from \"./3/erc20.json\";\nimport ethereum_sepolia_tokens from \"./11155111/erc20.json\";\nimport fantom_tokens from \"./250/erc20.json\";\nimport flare_tokens from \"./14/erc20.json\";\nimport metis_tokens from \"./1088/erc20.json\";\nimport moonbeam_tokens from \"./1284/erc20.json\";\nimport optimism_tokens from \"./10/erc20.json\";\nimport optimism_goerli_tokens from \"./420/erc20.json\";\nimport polygon_tokens from \"./137/erc20.json\";\nimport rsk_tokens from \"./30/erc20.json\";\nimport songbird_tokens from \"./19/erc20.json\";\nimport syscoin_tokens from \"./57/erc20.json\";\nimport velas_evm_tokens from \"./106/erc20.json\";\nimport arbitrum_signatures from \"./42161/erc20-signatures.json\";\nimport arbitrum_goerli_signatures from \"./421613/erc20-signatures.json\";\nimport astar_signatures from \"./592/erc20-signatures.json\";\nimport bittorrent_signatures from \"./199/erc20-signatures.json\";\nimport bsc_signatures from \"./56/erc20-signatures.json\";\nimport cronos_signatures from \"./25/erc20-signatures.json\";\nimport energy_web_signatures from \"./246/erc20-signatures.json\";\nimport ethereum_signatures from \"./1/erc20-signatures.json\";\nimport ethereum_goerli_signatures from \"./5/erc20-signatures.json\";\nimport ethereum_rinkeby_signatures from \"./4/erc20-signatures.json\";\nimport ethereum_ropsten_signatures from \"./3/erc20-signatures.json\";\nimport ethereum_sepolia_signatures from \"./11155111/erc20-signatures.json\";\nimport fantom_signatures from \"./250/erc20-signatures.json\";\nimport flare_signatures from \"./14/erc20-signatures.json\";\nimport metis_signatures from \"./1088/erc20-signatures.json\";\nimport moonbeam_signatures from \"./1284/erc20-signatures.json\";\nimport optimism_signatures from \"./10/erc20-signatures.json\";\nimport optimism_goerli_signatures from \"./420/erc20-signatures.json\";\nimport polygon_signatures from \"./137/erc20-signatures.json\";\nimport rsk_signatures from \"./30/erc20-signatures.json\";\nimport songbird_signatures from \"./19/erc20-signatures.json\";\nimport syscoin_signatures from \"./57/erc20-signatures.json\";\nimport velas_evm_signatures from \"./106/erc20-signatures.json\";\nexport const tokens = {\n    42161: arbitrum_tokens,\n    421613: arbitrum_goerli_tokens,\n    592: astar_tokens,\n    199: bittorrent_tokens,\n    56: bsc_tokens,\n    25: cronos_tokens,\n    246: energy_web_tokens,\n    1: ethereum_tokens,\n    5: ethereum_goerli_tokens,\n    4: ethereum_rinkeby_tokens,\n    3: ethereum_ropsten_tokens,\n    11155111: ethereum_sepolia_tokens,\n    250: fantom_tokens,\n    14: flare_tokens,\n    1088: metis_tokens,\n    1284: moonbeam_tokens,\n    10: optimism_tokens,\n    420: optimism_goerli_tokens,\n    137: polygon_tokens,\n    30: rsk_tokens,\n    19: songbird_tokens,\n    57: syscoin_tokens,\n    106: velas_evm_tokens,\n};\nexport const signatures = {\n    42161: arbitrum_signatures,\n    421613: arbitrum_goerli_signatures,\n    592: astar_signatures,\n    199: bittorrent_signatures,\n    56: bsc_signatures,\n    25: cronos_signatures,\n    246: energy_web_signatures,\n    1: ethereum_signatures,\n    5: ethereum_goerli_signatures,\n    4: ethereum_rinkeby_signatures,\n    3: ethereum_ropsten_signatures,\n    11155111: ethereum_sepolia_signatures,\n    250: fantom_signatures,\n    14: flare_signatures,\n    1088: metis_signatures,\n    1284: moonbeam_signatures,\n    10: optimism_signatures,\n    420: optimism_goerli_signatures,\n    137: polygon_signatures,\n    30: rsk_signatures,\n    19: songbird_signatures,\n    57: syscoin_signatures,\n    106: velas_evm_signatures,\n};\nexport default {\n    tokens,\n    signatures,\n};\n//# sourceMappingURL=index.js.map","const defaultLoadConfig = {\n    nftExplorerBaseURL: \"https://nft.api.live.ledger.com/v1/ethereum\",\n    pluginBaseURL: \"https://cdn.live.ledger.com\",\n    extraPlugins: null,\n    cryptoassetsBaseURL: \"https://cdn.live.ledger.com/cryptoassets\",\n};\nexport function getLoadConfig(userLoadConfig) {\n    return Object.assign(Object.assign({}, defaultLoadConfig), userLoadConfig);\n}\n//# sourceMappingURL=loadConfig.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { log } from \"@ledgerhq/logs\";\nimport { signatures as signaturesByChainId } from \"@ledgerhq/cryptoassets/data/evm/index\";\nimport { getLoadConfig } from \"./loadConfig\";\nconst asContractAddress = (addr) => {\n    const a = addr.toLowerCase();\n    return a.startsWith(\"0x\") ? a : \"0x\" + a;\n};\nexport const findERC20SignaturesInfo = (userLoadConfig, chainId) => __awaiter(void 0, void 0, void 0, function* () {\n    const { cryptoassetsBaseURL } = getLoadConfig(userLoadConfig);\n    if (!cryptoassetsBaseURL)\n        return null;\n    const url = `${cryptoassetsBaseURL}/evm/${chainId}/erc20-signatures.json`;\n    const blob = yield axios\n        .get(url)\n        .then(({ data }) => {\n        if (!data || typeof data !== \"string\") {\n            throw new Error(`ERC20 signatures for chainId ${chainId} file is malformed ${url}`);\n        }\n        return data;\n    })\n        .catch((e) => {\n        log(\"error\", \"could not fetch from \" + url + \": \" + String(e));\n        return null;\n    });\n    return blob;\n});\n/**\n * Retrieve the token information by a given contract address if any\n */\nexport const byContractAddressAndChainId = (contract, chainId, erc20SignaturesBlob) => {\n    var _a, _b;\n    // If we are able to fetch data from s3 bucket that contains dynamic CAL\n    if (erc20SignaturesBlob) {\n        try {\n            return parse(erc20SignaturesBlob).byContractAndChainId(asContractAddress(contract), chainId);\n        }\n        catch (e) {\n            return (_a = get(chainId)) === null || _a === void 0 ? void 0 : _a.byContractAndChainId(asContractAddress(contract), chainId);\n        }\n    }\n    // the static fallback when dynamic cal is not provided\n    return (_b = get(chainId)) === null || _b === void 0 ? void 0 : _b.byContractAndChainId(asContractAddress(contract), chainId);\n};\nconst parse = (erc20SignaturesBlob) => {\n    const buf = Buffer.from(erc20SignaturesBlob, \"base64\");\n    const map = {};\n    const entries = [];\n    let i = 0;\n    while (i < buf.length) {\n        const length = buf.readUInt32BE(i);\n        i += 4;\n        const item = buf.slice(i, i + length);\n        let j = 0;\n        const tickerLength = item.readUInt8(j);\n        j += 1;\n        const ticker = item.slice(j, j + tickerLength).toString(\"ascii\");\n        j += tickerLength;\n        const contractAddress = asContractAddress(item.slice(j, j + 20).toString(\"hex\"));\n        j += 20;\n        const decimals = item.readUInt32BE(j);\n        j += 4;\n        const chainId = item.readUInt32BE(j);\n        j += 4;\n        const signature = item.slice(j);\n        const entry = {\n            ticker,\n            contractAddress,\n            decimals,\n            chainId,\n            signature,\n            data: item,\n        };\n        entries.push(entry);\n        map[String(chainId) + \":\" + contractAddress] = entry;\n        i += length;\n    }\n    return {\n        list: () => entries,\n        byContractAndChainId: (contractAddress, chainId) => map[String(chainId) + \":\" + contractAddress],\n    };\n};\n// this internal get() will lazy load and cache the data from the erc20 data blob\nconst get = (() => {\n    const cache = {};\n    return (chainId) => {\n        if (cache[chainId])\n            return cache[chainId];\n        const signatureBlob = signaturesByChainId[chainId];\n        if (!signatureBlob)\n            return null;\n        const api = parse(signatureBlob);\n        cache[chainId] = api;\n        return api;\n    };\n})();\n//# sourceMappingURL=erc20.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { getLoadConfig } from \"./loadConfig\";\nimport { log } from \"@ledgerhq/logs\";\n/**\n * Retrieve the metadatas a given contract address and a method selector\n */\nexport const loadInfosForContractMethod = (contractAddress, selector, chainId, userLoadConfig) => __awaiter(void 0, void 0, void 0, function* () {\n    const { pluginBaseURL, extraPlugins } = getLoadConfig(userLoadConfig);\n    let data = {};\n    if (pluginBaseURL) {\n        const url = `${pluginBaseURL}/plugins/ethereum.json`;\n        data = yield axios\n            .get(`${pluginBaseURL}/plugins/ethereum.json`)\n            .then((r) => r.data)\n            .catch((e) => {\n            log(\"error\", \"could not fetch from \" + url + \": \" + String(e));\n            return null;\n        });\n    }\n    if (extraPlugins) {\n        data = Object.assign(Object.assign({}, data), extraPlugins);\n    }\n    if (!data)\n        return;\n    const lcSelector = selector.toLowerCase();\n    const lcContractAddress = contractAddress.toLowerCase();\n    if (lcContractAddress in data) {\n        const contractSelectors = data[lcContractAddress];\n        if (lcSelector in contractSelectors) {\n            return {\n                payload: contractSelectors[lcSelector][\"serialized_data\"],\n                signature: contractSelectors[lcSelector][\"signature\"],\n                plugin: contractSelectors[lcSelector][\"plugin\"],\n                erc20OfInterest: contractSelectors[lcSelector][\"erc20OfInterest\"],\n                abi: contractSelectors[\"abi\"],\n            };\n        }\n    }\n});\n//# sourceMappingURL=contracts.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { getLoadConfig } from \"./loadConfig\";\nimport { log } from \"@ledgerhq/logs\";\nexport const getNFTInfo = (contractAddress, chainId, userLoadConfig) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    const { nftExplorerBaseURL } = getLoadConfig(userLoadConfig);\n    if (!nftExplorerBaseURL)\n        return;\n    const url = `${nftExplorerBaseURL}/${chainId}/contracts/${contractAddress}`;\n    const response = yield axios\n        .get(url)\n        .then((r) => r.data)\n        .catch((e) => {\n        log(\"error\", \"could not fetch from \" + url + \": \" + String(e));\n        return null;\n    });\n    if (!response)\n        return;\n    // APDU response specification: https://ledgerhq.atlassian.net/wiki/spaces/WALLETCO/pages/3269984297/NFT-1+NFT+Backend+design#NFT-Metadata-BLOB\n    const payload = response[\"payload\"];\n    // Collection name length position: 3rd byte -> caracter 4 to 6\n    const collectionNameLength = parseInt(payload.slice(4, 6), 16);\n    const collectionNameHex = payload.substr(6, collectionNameLength * 2);\n    const collectionName = (_a = collectionNameHex\n        .match(/.{2}/g) // split every 2 characters\n    ) === null || _a === void 0 ? void 0 : _a.reduce((acc, curr) => (acc += String.fromCharCode(parseInt(curr, 16))), \"\"); // convert hex to string\n    return {\n        contractAddress: contractAddress,\n        collectionName: collectionName || \"\",\n        data: payload,\n    };\n});\nexport const loadNftPlugin = (contractAddress, selector, chainId, userLoadConfig) => __awaiter(void 0, void 0, void 0, function* () {\n    const { nftExplorerBaseURL } = getLoadConfig(userLoadConfig);\n    if (!nftExplorerBaseURL)\n        return;\n    const url = `${nftExplorerBaseURL}/${chainId}/contracts/${contractAddress}/plugin-selector/${selector}`;\n    const response = yield axios\n        .get(url)\n        .then((r) => r.data)\n        .catch((e) => {\n        log(\"error\", \"could not fetch from \" + url + \": \" + String(e));\n        return null;\n    });\n    if (!response)\n        return;\n    const payload = response[\"payload\"];\n    return payload;\n});\n//# sourceMappingURL=nfts.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// This implements the resolution of a Transaction using Ledger's own API\nimport { log } from \"@ledgerhq/logs\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { signDomainResolution, signAddressResolution, } from \"@ledgerhq/domain-service/signers/index\";\nimport { byContractAddressAndChainId, findERC20SignaturesInfo } from \"./erc20\";\nimport { loadInfosForContractMethod } from \"./contracts\";\nimport { getNFTInfo, loadNftPlugin } from \"./nfts\";\nimport { decodeTxInfo, tokenSelectors, nftSelectors, mergeResolutions, } from \"../../utils\";\n/**\n * @ignore for external documentation\n *\n * Providing additionnal data for some transactions (Token or NFT related) can enable clear signing\n * of initially impossible to decode data.\n * This method will add necessary APDUs to the resolution paramter in order to provide this data to the nano app\n */\nconst getAdditionalDataForContract = (contractAddress, chainIdTruncated, loadConfig, shouldResolve) => __awaiter(void 0, void 0, void 0, function* () {\n    const resolution = {\n        nfts: [],\n        erc20Tokens: [],\n    };\n    if (shouldResolve.nft) {\n        const nftInfo = yield getNFTInfo(contractAddress, chainIdTruncated, loadConfig);\n        if (nftInfo) {\n            log(\"ethereum\", \"loaded nft info for \" +\n                nftInfo.contractAddress +\n                \" (\" +\n                nftInfo.collectionName +\n                \")\");\n            resolution.nfts.push(nftInfo.data);\n        }\n        else {\n            log(\"ethereum\", \"couldn't load nft info for \" + contractAddress);\n        }\n    }\n    if (shouldResolve.token) {\n        const erc20SignaturesBlob = yield findERC20SignaturesInfo(loadConfig, chainIdTruncated);\n        const erc20Info = byContractAddressAndChainId(contractAddress, chainIdTruncated, erc20SignaturesBlob);\n        if (erc20Info) {\n            log(\"ethereum\", \"loaded erc20token info for \" +\n                erc20Info.contractAddress +\n                \" (\" +\n                erc20Info.ticker +\n                \")\");\n            resolution.erc20Tokens.push(erc20Info.data.toString(\"hex\"));\n        }\n        else {\n            log(\"ethereum\", \"couldn't load erc20token info for \" + contractAddress);\n        }\n    }\n    return resolution;\n});\n/**\n * @ignore for external documentation\n *\n * Depending on the transaction, it might be necessary to load internal plugins in the nano app\n * in order to clear sign it.\n * This method will add necessary APDUs to the resolution parameter in order to load those internal plugins\n */\nconst loadNanoAppPlugins = (contractAddress, selector, decodedTx, chainIdTruncated, loadConfig, shouldResolve) => __awaiter(void 0, void 0, void 0, function* () {\n    let resolution = {\n        externalPlugin: [],\n        plugin: [],\n        nfts: [],\n        erc20Tokens: [],\n        domains: [],\n    };\n    if (shouldResolve.nft) {\n        const nftPluginPayload = yield loadNftPlugin(contractAddress, selector, chainIdTruncated, loadConfig);\n        if (nftPluginPayload) {\n            resolution.plugin.push(nftPluginPayload);\n        }\n        else {\n            log(\"ethereum\", \"no NFT plugin payload for selector \" +\n                selector +\n                \" and address \" +\n                contractAddress);\n        }\n    }\n    if (shouldResolve.externalPlugins) {\n        const contractMethodInfos = yield loadInfosForContractMethod(contractAddress, selector, chainIdTruncated, loadConfig);\n        if (contractMethodInfos) {\n            const { plugin, payload, signature, erc20OfInterest, abi } = contractMethodInfos;\n            if (plugin) {\n                log(\"ethereum\", \"found plugin for \" + selector);\n                resolution.externalPlugin.push({ payload, signature });\n            }\n            if (erc20OfInterest && erc20OfInterest.length && abi) {\n                const contract = new Interface(abi);\n                const args = contract.parseTransaction(decodedTx).args;\n                for (const path of erc20OfInterest) {\n                    const erc20ContractAddress = path.split(\".\").reduce((value, seg) => {\n                        if (seg === \"-1\" && Array.isArray(value)) {\n                            return value[value.length - 1];\n                        }\n                        return value[seg];\n                    }, args); // impossible(?) to type correctly as the initializer is different from the returned type\n                    const externalPluginResolution = yield getAdditionalDataForContract(erc20ContractAddress, chainIdTruncated, loadConfig, {\n                        nft: false,\n                        externalPlugins: false,\n                        token: true, // enforcing resolution of tokens for external plugins that need info on assets (e.g. for a swap)\n                    });\n                    resolution = mergeResolutions([resolution, externalPluginResolution]);\n                }\n            }\n        }\n        else {\n            log(\"ethereum\", \"no infos for selector \" + selector);\n        }\n    }\n    return resolution;\n});\n/**\n * @ignore for external documentation\n *\n * In charge of collecting the different APDUs necessary for clear signing\n * a transaction based on a specified configuration.\n */\nconst resolveTransaction = (rawTxHex, loadConfig, resolutionConfig) => __awaiter(void 0, void 0, void 0, function* () {\n    const rawTx = Buffer.from(rawTxHex, \"hex\");\n    const { decodedTx, chainIdTruncated } = decodeTxInfo(rawTx);\n    const { domains } = resolutionConfig;\n    const contractAddress = decodedTx.to;\n    const selector = decodedTx.data.length >= 10 && decodedTx.data.substring(0, 10);\n    const resolutions = [];\n    if (selector) {\n        const shouldResolve = {\n            token: resolutionConfig.erc20 && tokenSelectors.includes(selector),\n            nft: resolutionConfig.nft && nftSelectors.includes(selector),\n            externalPlugins: resolutionConfig.externalPlugins,\n        };\n        const pluginsResolution = yield loadNanoAppPlugins(contractAddress, selector, decodedTx, chainIdTruncated, loadConfig, shouldResolve);\n        if (pluginsResolution) {\n            resolutions.push(pluginsResolution);\n        }\n        const contractResolution = yield getAdditionalDataForContract(contractAddress, chainIdTruncated, loadConfig, shouldResolve);\n        if (contractResolution) {\n            resolutions.push(contractResolution);\n        }\n    }\n    // Passthrough to be accessible to the Domains module\n    if (domains) {\n        const domainResolutions = {\n            domains,\n        };\n        resolutions.push(domainResolutions);\n    }\n    return mergeResolutions(resolutions);\n});\nexport default {\n    resolveTransaction,\n    signDomainResolution,\n    signAddressResolution,\n};\n//# sourceMappingURL=index.js.map","/**\n * Needed polyfill for Promise.allSettled as it doesn't exist on RN.\n */\nexport const allSettled = (promises) => {\n    return Promise.all(promises.map((p) => {\n        return p\n            .then((value) => {\n            return {\n                status: \"fulfilled\",\n                value,\n            };\n        })\n            .catch((reason) => {\n            return {\n                status: \"rejected\",\n                reason,\n            };\n        });\n    }));\n};\n/**\n * Helper to know in advance if a domain is compatible with the nano\n *\n * @param domain string representing the domain\n * @returns {Boolean}\n */\nexport const validateDomain = (domain) => {\n    if (typeof domain !== \"string\") {\n        return false;\n    }\n    const lengthIsValid = domain.length > 0 && Number(domain.length) < 30;\n    const containsOnlyValidChars = new RegExp(\"^[a-zA-Z0-9\\\\-\\\\_\\\\.]+$\").test(domain);\n    return lengthIsValid && containsOnlyValidChars;\n};\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport ledgerService from \"../../services/ledger\";\n/**\n * @ignore for the README\n *\n * This method will execute the pipeline of actions necessary for clear signing domains.\n * Signature is provided by the backend used in @ledgerhq/domain-service\n */\nexport const domainResolutionFlow = (appBinding, domainDescriptor) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!domainDescriptor)\n        return;\n    const { domain, address, registry, type } = domainDescriptor;\n    const challenge = yield appBinding.getChallenge();\n    const domainAPDU = type === \"forward\"\n        ? yield ledgerService.signDomainResolution(domain, registry, challenge)\n        : yield ledgerService.signAddressResolution(address, registry, challenge);\n    if (domainAPDU) {\n        yield appBinding.provideDomainName(domainAPDU);\n    }\n});\n//# sourceMappingURL=index.js.map","import { createCustomErrorClass } from \"@ledgerhq/errors\";\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const EthAppNftNotSupported = createCustomErrorClass(\"EthAppNftNotSupported\");\n//# sourceMappingURL=errors.js.map","export default { \"1:0xe63602a9b3dfe983187525ac985fec4f57b24ed5:08c2ba593f6e0e80b8fd2bb1da6923135c173094f9cb6ecdea6ea144\": { \"contractName\": { \"label\": \"DeGate Withdrawal\", \"signature\": \"30440220089127ef62e67a3d075a2c0d645c06ce98e6cd373bca7ac89217b2919d718b9902202b4fc6a5488200db6a51ef2193febf8023770e44d361a5c85907c1f6864e3ae4\" }, \"fields\": [{ \"label\": \"Owner\", \"path\": \"owner\", \"signature\": \"304502210085a5f94d365f90e93bced9bfdea6f3a762abfeec8d77b070905e46368f0db7970220042075c4a50ea30b63308a3d4ef5cd72703c7447d4d296e3fc90e3872aa54259\" }, { \"label\": \"AccountID\", \"path\": \"accountID\", \"signature\": \"30450221008d1561da0d5464ae0173b2a6ab1fb7c9fadec3429b9d068f464062cda6a721840220169a240b04d50866f8250860c82b01e664d4bb1262f7782a454d3341312d7831\" }, { \"label\": \"TokenID\", \"path\": \"tokenID\", \"signature\": \"304402203da24c741ee39f2c353d6e38386af0ad7b38a2568663f562e084247b618410b702205054378fd255b5077310009af3ce2507c29f5c3a8b651b64519982ed502b4090\" }, { \"label\": \"Amount\", \"path\": \"amount\", \"signature\": \"3045022100c2d5d4aeed590ec6bd2116f83eb334023d5bf01374700e49d73af5875059c0c10220286ce6cc46a4d5e9ce71462b9431bb69c55f060a65fbdb2728b526cbecec0046\" }, { \"label\": \"FeeTokenID\", \"path\": \"feeTokenID\", \"signature\": \"3045022100e50a065542008fa67af23b0091e5962e89deca43cc4cfa55fdea4ba86873846d02204d3ef27ca382008596cf584a8169a925a9cc4608ba16fc4673cdc539dd85a29a\" }, { \"label\": \"MaxFee\", \"path\": \"maxFee\", \"signature\": \"3045022100a79503f04eafa7afb97bce7df13dc697d7ad03532be221da27d596ba5c4f9be502205ae99bd27a8f1c92cf78fec9952845342ed93625d07ef878043af48eaaa4b093\" }, { \"label\": \"To\", \"path\": \"to\", \"signature\": \"3045022100c689e1d30113b842b9fc468cc4e26308a6df924818b9fd89431627c8a42c57af02200225d6cef4578c9e4c46c48afe459a7037aedbfda03195ad0252cba5b41b502c\" }, { \"label\": \"MinGas\", \"path\": \"minGas\", \"signature\": \"30440220464c332bf0455c61102f4884218190994094d7c9808411c00fa6fd6ef5763cc002202e3324eaa0bac01d96738a8a9ffcf531ab59aa03911f2031182d8b9de97a4f06\" }, { \"label\": \"ValidUntil\", \"path\": \"validUntil\", \"signature\": \"304402200ec81207eb0079bdd15905bbdd9b98660d705aa08df96e9ef990774d2f1103cf022035926ba6cf460783122664b1a25849638ffe34f42c38177276c3bc7b10ad9cae\" }, { \"label\": \"StorageID\", \"path\": \"storageID\", \"signature\": \"304402206d33f0bdb8b370afb15f212aed98da5ad1d2c41362f9ade1360f86ae9ed15cbb02201204be822aac5c18a09f0baee45c5bc3295c8c085a391355e5ebb8a3242c9cca\" }] }, \"1:0xe63602a9b3dfe983187525ac985fec4f57b24ed5:3ff1c601fe26dd56c4fc5d773d7e24b17caf0754a14f5eb033636388\": { \"contractName\": { \"label\": \"DeGate Transfer\", \"signature\": \"3044022043833156814430e372cc93d7540835c0ba00e298359bd1296425f42b40c477ea02206416e6bc158f72bcb300fa468fedd42394ecdff897494869cf1f9679b6c2769a\" }, \"fields\": [{ \"label\": \"Owner\", \"path\": \"owner\", \"signature\": \"3044022018ba034d2e60f07b388cde680072eca4b0815ee5f479e165626c51b84321c6790220793475c2711d3aeefe5ec4d5ec89be59c840ffb2d51d013c8d86c2b5d7e96a8f\" }, { \"label\": \"AccountID\", \"path\": \"accountID\", \"signature\": \"3045022100aad3a5a7ba18bb2cb73d647bc0a573eadf97b62bc08b7656dbacb982aa341d7002203a4f6e50a3f386b10d0377debe312d5a1462108563e18807fa8d45c4edd7615a\" }, { \"label\": \"TokenID\", \"path\": \"tokenID\", \"signature\": \"3044022002c7d20b128cd4703230f199371f6ccd18f2e3311ff3b431cfdba8ed69b8a9a602203a5be9d165adb244c9c9e0100bfb559fea69b7a91a9c4805d3cab7bbf649e2ba\" }, { \"label\": \"Amount\", \"path\": \"amount\", \"signature\": \"3044022048ed7a7e1860df3c118a9e0bc25ca8085ca4c4981d00d8a4a25bb26ee905d23702206cfe29c63e4da5415b402f1576466f6c629b44c733e3d4a4a46b61cf1f0ecc12\" }, { \"label\": \"FeeTokenID\", \"path\": \"feeTokenID\", \"signature\": \"304502210085ec5b05794e239114ee6dd75453cde566ea74286cfe76122ff69c230f54f3690220668392a6f480c2eff108cdb7cf3aeb287bac88abe59914ccd6932717e14d2758\" }, { \"label\": \"MaxFee\", \"path\": \"maxFee\", \"signature\": \"304502210098019a9ac20d02984196a508ca27d29c2654feb0ad161b1500ec7051c0ccb95c02203920ddf0bf7e17f31dd59994043bb0a21a3f91c9674f164d63df5cbd42e926ce\" }, { \"label\": \"To\", \"path\": \"to\", \"signature\": \"3044022067324800e3b2353a4ccf8faeebc4abfef0cecf550da5afa292dd12820e05602202203fa883cd57d057a3463d149117490ae889173e867b54279c488abba636357029\" }, { \"label\": \"ValidUntil\", \"path\": \"validUntil\", \"signature\": \"3045022100ebd27a8311ce197bf3bbb72856362853081faa55048d186a15017c998b164edb02204bff1cf694d3195d4c82a2c8d6f6b1d4db842e9fc891eeaff2d4ec4d8d64836e\" }, { \"label\": \"StorageID\", \"path\": \"storageID\", \"signature\": \"3044022058b6542b5fd416c8c321eeeca445df10141187fe956363d7053a90debea15abe022039b14b0f608f4b1c8757e5de2bef2f80741df2a85beb559d4ba710af9284e953\" }] }, \"1:0xe63602a9b3dfe983187525ac985fec4f57b24ed5:4decdb2662378b6612b240fda08f6d00412f088ccdf3023095323de2\": { \"contractName\": { \"label\": \"DeGate AccountUpdate\", \"signature\": \"3044022059026d8aa3f81272e4b4b72f0094cd0fd04ac862e3e8ebc3e73ca7b923a45f70022046a1f7323da99a3dac0d4cc603c9db38b64ac3fa7519a1248e111abf926664d1\" }, \"fields\": [{ \"label\": \"Owner\", \"path\": \"owner\", \"signature\": \"304402205f7fae43ba4d7a0e5bed7bd9cecab4f2b55bf6ba6b3e33962ace5fabef269c0b02207bc89e0acf86b7593b18ff9d865820956508bb1dc3d8551dbd9f6745029cfb3e\" }, { \"label\": \"AccountID\", \"path\": \"accountID\", \"signature\": \"3045022100e580811e1e6b2e40fd4cbf4eb1a3f4baa934e6d96e80674431b2a6fe93581dec022010447ecd9023c4a028142d2e34f217b96a65ba030052c20eda6b3f4428ff109d\" }, { \"label\": \"FeeTokenID\", \"path\": \"feeTokenID\", \"signature\": \"30440220387d9f50b9af4dc0c2ff7dc73d513e1d816a55aafe1ffdc88827176907c3a5f0022007d64ad6946f932190bb352b5aa3360b4be0d1b50faee29010f5fbf132cbcc31\" }, { \"label\": \"MaxFee\", \"path\": \"maxFee\", \"signature\": \"30440220395dfa14a44c006079ec38d901b71e839ad10e1f9642b37246e4544302299f1a0220216a9b71a26e1a8ecd87f7f16d7a04aba42a68c18da25e8b608cb4493731ad2a\" }, { \"label\": \"PublicKey\", \"path\": \"publicKey\", \"signature\": \"3045022100db2cd9ef2becd6bd902458e4c3661be2f98db0943ca0b1d074eb249cac7139ee02203d011e51879b69be2ddcbd215242dd9e70f0cfd92c59fbc5089aee56bb51c7dc\" }, { \"label\": \"ValidUntil\", \"path\": \"validUntil\", \"signature\": \"30450221009d4db9f47704967c5fef69f7255e9dfd19abd928adeb7a5a06abe2fb8b3adcde02200ed93b341bc629b132313b1e8c47db096145898b3a741d165b21b653ef14c3b3\" }, { \"label\": \"Nonce\", \"path\": \"nonce\", \"signature\": \"30450221008e187640c09a34fdda18f022ece0f1632315392192876af7df895c6245ee506102205f149a22b0eb3d9bcdc3e65db8a0e1b6494266c721c1bd4248e7de7bb8a4dce6\" }] }, \"1:0x7f268357a8c2552623316e2562d90e642bb538e5:d8e4f2bd77f7562e99ea5df4adb127291a2bfbc225ae55450038f27f\": { \"contractName\": { \"label\": \"OpenSea Listing\", \"signature\": \"304402205f01e62b2331ecb9f1cb3f49a764d66015937cb20cb4c3af625146905ca4832402205076eeb4a74619b4552278836b548c8e525813faa9008399e43bfed7db016408\" }, \"fields\": [{ \"label\": \"Contract address\", \"path\": \"exchange\", \"signature\": \"3044022069df3b1c82dda9849a3df4cd0dd263d2b6c35e4fb8946865a35f5555830971b802201880d72b3d956867b597a2f5097d7f8799bad6e636d3de4030515634bba47155\" }, { \"label\": \"Price\", \"path\": \"basePrice\", \"signature\": \"3045022100db49dbd8426193b6012781f43c3b445d1cf845d99d738091c1f068951728333402204326a2da5203f25deec049deba760bb31a86507c73fe6828c68e0db2eabfc966\" }, { \"label\": \"Offer expiration\", \"path\": \"expirationTime\", \"signature\": \"3045022100e71a4921740fcdf4e489c517fc82f9b7e83cfbd675dff318acb91fbf8eaf175402203fac43650771c6523dad8d995ef414d035a92d262a9cf95885ef2704337a2382\" }] }, \"1:0xe92b586627cca7a83dc919cc7127196d70f55a06:16c6594547c8c6af18ca0d8b500976bfb7f38764060cec3792c2aad3\": { \"contractName\": { \"label\": \"AugustusRFQ ERC20 order\", \"signature\": \"3044022043fb323d3a064faa38bcabad3a3f797dff60f55b49c19e350a9d0b1f980818e202205c3dc14efcc49adf915f195ff29fa02dfd9d08fca532b76086e501f9e0d133ed\" }, \"fields\": [{ \"label\": \"Nonce and metadata\", \"path\": \"nonceAndMeta\", \"signature\": \"304402205b674138eb50ddbfdd05768f2c641109f6c8f341d27e10ea12d59e083746cb330220521d739a49ee57ff9a41cf00adc631d3dd33e9ce2b23ce50759fb33c0ffce0a5\" }, { \"label\": \"Expiration time\", \"path\": \"expiry\", \"signature\": \"304402203ba8d470649ae7cb5d02764fa48899ec0414075ed85cb9fd95e89ac5b3bb073e02200183233f30de996a8b87417a6febcbb56a544c38fd62b6f7702efa7e0d7b2ee3\" }, { \"label\": \"Maker asset address\", \"path\": \"makerAsset\", \"signature\": \"304402206f3c4055bd431c1ceddce5b147c3b5acec950b267205da655fb3d331b9c070830220570c9cfdcc02b10abbf9a335ab6a4067ab7cae2ae8a443f795225a7c3981cc0a\" }, { \"label\": \"Taker asset address\", \"path\": \"takerAsset\", \"signature\": \"3045022100fb93cbca6ee524729b138319a92316a37c56ae5f89b3d652af7f680c3f160df002203d1fc525b11cd30d2907f844d7774f49995b2be7e3ba2896dcd4a6e73c8a59d5\" }, { \"label\": \"Maker address\", \"path\": \"maker\", \"signature\": \"3044022002e75adf4733bf28d532647c54fb0000415737db37b7e5674f9bb20179d01eea02203834ebcfe81d98e745572349bb0da4ffdc8ec846d35e3812119e9a3491462724\" }, { \"label\": \"Taker address\", \"path\": \"taker\", \"signature\": \"3045022100966a77a69a7e0c060f154a8c7ed36087d8ba7da111d9bacc90b873421fe6a75c02207d92956d938a966cb98ddb6e8b3a56e4d8e7725182cf1bb02f03f67512460485\" }, { \"label\": \"Maker amount\", \"path\": \"makerAmount\", \"signature\": \"304402207ece45c0993fa46316022cffbdf64307cef2caede370f27fdfd78471c3550dd002200da74e8b3b5201e654e7e4674f7471a333a104288fdf8cf80fc3122126113d1b\" }, { \"label\": \"Taker amount\", \"path\": \"takerAmount\", \"signature\": \"3044022014183f10973ddc0ccb12472d2437e33f368f627b99022735044e5c4ebb4e345802203a3f5e8aa5c928981d2dabd0442342c605db1626dcd0d3ad5e3afcd98bb8c673\" }] }, \"1:0xe92b586627cca7a83dc919cc7127196d70f55a06:affaa50b47c793acb6b9f912325d898538d409f735b8f312a1914623\": { \"contractName\": { \"label\": \"AugustusRFQ NFT order\", \"signature\": \"304402206dfa1d54ee0a7ab236252618a5fac9c752152304f31838eab4ba4c6d2d3f844b02206658b1e9b2503577619080909be0f4c1d2a899b3d0085ed8c3f2a4309762dd94\" }, \"fields\": [{ \"label\": \"Nonce and metadata\", \"path\": \"nonceAndMeta\", \"signature\": \"3045022100ed9b0b91a8cace4d312f6d1bab076c057e954a9cd33c3dc5c350d030e41edd230220230e3050131157f6fc2fc578df7b1108f69d55d25ab837c661045877b148765b\" }, { \"label\": \"Expiration time\", \"path\": \"expiry\", \"signature\": \"304402205d4913092612fe78d75c181f3ed28ac7808e25ab0131e73bebd91c08aac65e7902203d63f1fd4d5cc11b1f8aa2af0ec6a8440a0ed59d440237bce96ed87874c2a26d\" }, { \"label\": \"Maker asset encoded\", \"path\": \"makerAsset\", \"signature\": \"304402205f9fb08bef206518e5bf48cb7fd968709a0ae317e903d9c87a41c934a0983af3022066264858ae4a1338d4daa1b4f9dc7376335ce9e57d4bed320b0d4c27a0012deb\" }, { \"label\": \"Maker asset NFT ID\", \"path\": \"makerAssetId\", \"signature\": \"3045022100ac653732f2acece7c47588bfff9a1059dc69bd3fa7e387cfef8246eb0ae2a70902204ffd7f89cd7223f8e52b7c44b02ac4fa1d06017015304f1a3a7459b20d54a5e7\" }, { \"label\": \"Taker asset encoded\", \"path\": \"takerAsset\", \"signature\": \"30450221008e59dfbed2dd4d1e2738b829d7a57fa23be737b652c0b01299f3d9482174aea80220138c8e948becda6dc1e7564358e574e7ac8d7016f2a1795059977f401535b27f\" }, { \"label\": \"Taker asset NFT ID\", \"path\": \"takerAssetId\", \"signature\": \"304402203408e2bf0210fa4454baf46374cf876299578df056ddaaf5a907306804ca41cb0220056f910e3c500e4a8f55d5c09dceed9753a2ca7b49a9ade1955a598f4e64d657\" }, { \"label\": \"Maker address\", \"path\": \"maker\", \"signature\": \"3045022100ce5db907819f4f36c77f1e3a849a3a6ac9483970128998d5add5941e1fcf6dc102200e1f26e08a3f48ef6fe1d40a4149cb8603c5e70e076755ddcf76894d31f2adc0\" }, { \"label\": \"Taker address\", \"path\": \"taker\", \"signature\": \"30440220015799beef248e4eb12f95368ef44cfbaf65e43da1a4110623006e46157ab22c022055f962e02e4cbdc05bab79cfbee523da8ff9d16529c4e98755b15d45bb34a16b\" }, { \"label\": \"Maker amount\", \"path\": \"makerAmount\", \"signature\": \"30450221008048cec54417376b3a659e3aeeb349a4352751a099443ea203b59e9d2cd954b702201b32704d89bd028a6794ef315bf2a204b7293f547d14282440f5aea041a27ee1\" }, { \"label\": \"Taker amount\", \"path\": \"takerAmount\", \"signature\": \"3045022100dad584a953b3c56c67913e76f1a6626cb72620e23bd16f41b2817a95ddb0bccb02206189e3b49d9f3475bd52baff2a40c7f026daf1d2dad9cfaa403eb08030836090\" }] }, \"1:0x7f19564c35c681099c0c857a7141836cf7edaa53:139c059f886c2b9b41f05a6c4ec2578a048d18aaadbc095609e5df4b\": { \"contractName\": { \"label\": \"List Order\", \"signature\": \"3045022100cfd82c26631445df34b327b31ad55ad7f26e0480ea7838ae83274ad83b8f9cd1022044b5a3db6b6052a5b818b1bc6cb28d523115033ca7ab3c4a269ec37e3cde890f\" }, \"fields\": [{ \"label\": \"Order maker address\", \"path\": \"maker\", \"signature\": \"30450221008ab1ef7012cf407a80348d6be16a98d375bf959de72f260cb92520dbb30fc2ce02200d9c0e02c8375d94077ebe16c849df5745654a1c499100286201407be47688f9\" }, { \"label\": \"Order make asset value\", \"path\": \"makeAsset.value\", \"signature\": \"3044022018c3ea3b1768f348094f151f8e28171d1325d5cc1621478b23474f4695acf2d3022040ad4bb4c8c138857e426128488ee5a3df8fa0a7cfaf58e9858765a0f72a8a02\" }, { \"label\": \"Order taker address\", \"path\": \"taker\", \"signature\": \"30440220482e1c1439ea879f243fdd47cf043bd271c7fb73ba095463e920ab34c38076c002207c095ec3307fa3a3ebcd125238caf3f7c50d196db444559d31c79916e514f370\" }, { \"label\": \"Order take asset value\", \"path\": \"takeAsset.value\", \"signature\": \"304402205d33c23ab575fa613d37d7fabaa719f5aa4dacf8de0f299e83dd189eeabfc31d0220535f67346b8ed7d175193929aebead42b92921465c1474f482fce88bfd00323a\" }, { \"label\": \"Order start time\", \"path\": \"start\", \"signature\": \"3045022100c178033effb772f141b46a9d5b5bcfc48468c6e5c499d8865043535947b1bb490220687dc9018a38c62e01c91e90fecf9e18febe995267d1bea27d3368f12f04bc9b\" }, { \"label\": \"Order end time\", \"path\": \"end\", \"signature\": \"3044022074ecdea3c58a28565af3336de33390aa7e592e5108f6d9151dd000a90a5eb60a0220163362373d11f177e41b914dc10c93b76adfa4c27f4662179329e66b32f8f139\" }] }, \"1:0x9757f2d2b135150bbeb65308d4a91804107cd8d6:139c059f886c2b9b41f05a6c4ec2578a048d18aaadbc095609e5df4b\": { \"contractName\": { \"label\": \"List Order\", \"signature\": \"3045022100892ab54a425fa1306df530b5ffeab2944133f1fbc68b99b92e61abf5c5051d1002205eff72d6f2c65f7835bcb2c6593b772d0a45e152988b4379cdb52327ce5da382\" }, \"fields\": [{ \"label\": \"Order maker address\", \"path\": \"maker\", \"signature\": \"304402205990b238b291ad1bb3cce7d2acce868761c6a73fa79e87c05530813aac8eba5f02207408c5e30e840195677fa60d411d2c2bc76fbe15a7ad2506a4636f001708bec5\" }, { \"label\": \"Order make asset value\", \"path\": \"makeAsset.value\", \"signature\": \"30440220646b1bd068a229a75f7f0558f03d2fbbe7dd441d318480dc8eb532c3452ed6a00220642fe4f065198bab191c682e55487cd6464a90c9527983dcd672d15a0a083d80\" }, { \"label\": \"Order taker address\", \"path\": \"taker\", \"signature\": \"3044022014dff71fc22c0b53e918ceed99de5aa86cc49fffc22f271a9586a9db1197e413022001125d415ad2eef46353bd8e812248fbf3fc2b60fb5fc7dad3853c9d2c85c6a1\" }, { \"label\": \"Order take asset value\", \"path\": \"takeAsset.value\", \"signature\": \"304402202416cd3b9b1b9b7fc4bd5434f0f8c54638d0f29e87f1f92de7006747f4e856aa02207afb4547d03de6247628f93c5ed49f9122e2780507bc601f5211c89c8905b93e\" }, { \"label\": \"Order start time\", \"path\": \"start\", \"signature\": \"304502210095c5b1927e171ce8f0b74bd311cb0f66bff5e3d23a7eb52e1d6b696378defb2502204114def9ce15f2b698ea00d43bee8e8692568a6394e24c8e0b53c90c29ab7ad0\" }, { \"label\": \"Order end time\", \"path\": \"end\", \"signature\": \"304402203f435338d8130399eaa6939c0cc8f4fc5efc92a34256ac450d6d55b0ac2e816f02204c116eb40b3c07810facd9117572147216fdb175b2ce31c6ef277501dff7f6d1\" }] }, \"1:0xb66a603f4cfe17e3d27b87a8bfcad319856518b8:07bed12ab07fe09633d57ede321ed3dd0940d654b9d34a379c4997b9\": { \"contractName\": { \"label\": \"Lazy Mint ERC-1155\", \"signature\": \"304402206bd24ac8c5cfa2b75e16ea0c315295368a7f780c4ec062555079cfe48d583a8602204300f968037f9ea84919cdc8ad3a22103b04e00b9c4dffe5c34ebf13d1b769cc\" }, \"fields\": [{ \"label\": \"Token ID\", \"path\": \"tokenId\", \"signature\": \"304402206e18eac55b89b17b4706547807a864f6c1b37eee09fff4ccad54e9842eb1abaf02204ef2984f87d6c0ebab26352ce82f8040aae5bd259ae55d9921d609b3936d15dc\" }, { \"label\": \"Token URI\", \"path\": \"tokenURI\", \"signature\": \"3044022067c04bf2be50a7660b11742d10dbcc84655c22a0d359c20b2abb54a4d23f2846022030bded842ae4208854c0d11d655b234465e2c9ee9fe9b1eb5074778ddcfa9426\" }, { \"label\": \"Token Supply\", \"path\": \"supply\", \"signature\": \"3045022100fc4ab75ab184e564ea297da785d4a749b913e58706dff4e6c7ae49f72a7e9701022067bfead2e11a323beca3821a3ba310d705ebb128f45bee1f394dcc7e60af8043\" }, { \"label\": \"Creator account address\", \"path\": \"creators.[].account\", \"signature\": \"304402203e5e5fe4636b283df4e4d027e8ba5e43d912f53125b052e603548fff051b37d702207ceae4257ccc801de3943fb68b1a0e2af546e12d3bc74481b7695a12de7eebd2\" }, { \"label\": \"Creator value (10000 = 100%)\", \"path\": \"creators.[].value\", \"signature\": \"3044022065a51fd2cafd0013215fb703e27052320d35951e5f9d26a3c3d03a050b7088340220193e98ad9282a96e3e7b5e6813bb5989c31cded994fed35d5383e68738905c1e\" }, { \"label\": \"Royalties account address\", \"path\": \"royalties.[].account\", \"signature\": \"304502210092d8aa5743b9fa52cc1d5caf4f83e65cf232b02394dae8e3056d29606377caf902205119918948d39a165950efb998e19aecb3bde611065e92fd5f5c10bafaacda22\" }, { \"label\": \"Royalties value (10000 = 100%)\", \"path\": \"royalties.[].value\", \"signature\": \"3045022100b7cc93e7abfcc00efbfeeb49cef4d2ceb5521e1c97b2bdee882e011292964be902203d7ebd7c328961e1ca66aa16e8c61aeefa3bbbcad419bc65315658cdb425e5b9\" }] }, \"1:0xc9154424b823b10579895ccbe442d41b9abd96ed:4776d13d863bd29241312beab87bd487ba5648c8c71919e9e5025e7b\": { \"contractName\": { \"label\": \"Lazy Mint ERC-721\", \"signature\": \"3044022001ca2f9abb569b76bfb8398ba150999d93fc6a02f5e637f4ac3a125b6c48b528022007ab8f1b776d1b2f5a0b44f90214b02f71c3535e468f03b681f133c3bc217946\" }, \"fields\": [{ \"label\": \"Token ID\", \"path\": \"tokenId\", \"signature\": \"3045022100e762ea781d76c81e5f3b28269e03f1cfe7e33b847dbe20a56289841579b0fb4f022033c6249fc155deb94850e6e30fd7fb854f07c63c2b8ffc8b3c7d412c01b8398d\" }, { \"label\": \"Token URI\", \"path\": \"tokenURI\", \"signature\": \"3045022100dc369275a5b2d6a3c934221e9f7483082cd5c52bb1b41a802d260c54757cf29002206dfcd13e32357144ed68b90c2308208bfa699d95d917a97d8bf438aed08269bc\" }, { \"label\": \"Creator account address\", \"path\": \"creators.[].account\", \"signature\": \"304502210089448beccdb19e680a7f8a6dd4f1e0dc8319b3458f0d5a491518bb97af0e1f5002200dc01550cc4d0d3398049938d2a498c142e2e82eb9086c7d6d6a8f1f90d1d25e\" }, { \"label\": \"Creator value (10000 = 100%)\", \"path\": \"creators.[].value\", \"signature\": \"3044022026ebacc1dce44b2815c6e53d9030836a4768ba0019c4b6f9d8eb83d8699ffac3022076b9bc2f89daa7e5e21b294163e64ed25d2bdfe5f2373f6aefba4f6da1d92d3f\" }, { \"label\": \"Royalties account address\", \"path\": \"royalties.[].account\", \"signature\": \"30440220626fdb56db8c34a282917aab1f7fddd36a060eb35f117ded7b675be946acfac002206770d35391e086e1ab31e9fd9cea07e90b09d38f0b882857e394283ecd6575a9\" }, { \"label\": \"Royalties value (10000 = 100%)\", \"path\": \"royalties.[].value\", \"signature\": \"3045022100e22f440fe2bb06d77a0afc50366689ede59570dc91796305ea62e5ca5da5286c022074bdc3dc840c7314abcf6bbaf35fe5e20318c54a911e7508942fecd38b70db9e\" }] }, \"1:0x72e9d9038ce484ee986fea183f8d8df93f9ada13:65b962ff5c94fe989fdc9169a5dbf3662e79747c3932616d9f0a39cc\": { \"contractName\": { \"label\": \"SmartCredit.io\", \"signature\": \"304402202d7247f61c8a08f5ea99fdbf628e88d487f12a6e4ed330bdc3e8a5886fee6f9202200524d6035cbdcd469b1d1d3fa8dcf83595112daf20f24286e1b0e3c820fa2127\" }, \"fields\": [] }, \"56:0x8dcdfe88ef0351f27437284d0710cd65b20288bb:16c6594547c8c6af18ca0d8b500976bfb7f38764060cec3792c2aad3\": { \"contractName\": { \"label\": \"AugustusRFQ ERC20 order\", \"signature\": \"3045022100cdd6ed9272614ffdedb2b2aa22418386928f1174a6214451d67b82c06b637d4102205ee814ca52cfbdab011e337727cfe91fa272b98246ecbfb1683bfc0de3086efc\" }, \"fields\": [{ \"label\": \"Nonce and metadata\", \"path\": \"nonceAndMeta\", \"signature\": \"3044022056e3fdb59c9ece3d411d03963edfcb9a186ccb753b4e984366e7ca6baa99b38902206a7267e31543659ba3bf8b796edec2d1c6f174a810b89862e43541f94b191eca\" }, { \"label\": \"Expiration time\", \"path\": \"expiry\", \"signature\": \"3045022100a4cc77374944e947748dd36408f48f43a94e67436231fad62191554d1ea5ff0e022001baa4fc0587af310bebe1c0044d7b4280bb5537192736fa3805584c735a6710\" }, { \"label\": \"Maker asset address\", \"path\": \"makerAsset\", \"signature\": \"30440220770b731ffb6091493ce2fcdb4163ad872add409a9c66e88e29b0d7a82b0ee79c02201e0130c1841c484e816b9f9ff3694eea3601e1569c1ddb87319b08d86e9823d5\" }, { \"label\": \"Taker asset address\", \"path\": \"takerAsset\", \"signature\": \"304502210094b700c3383bf0d8740e09d23dac120addc1c21029746f672d8f8c8b3a2a2995022008b5d3af862f7fb0510321cd9ae4f7172ab3b347f6556b3da79e2a95950ff34b\" }, { \"label\": \"Maker address\", \"path\": \"maker\", \"signature\": \"304402202dafdefb2181e5bbdf5816fc710400bae0846bc08dfc389ef8008048228e2fd0022002b89786ea578488cf6c6b751dac0c13dd6c2c57c8d6bb0fcb47a28d2b07b1b6\" }, { \"label\": \"Taker address\", \"path\": \"taker\", \"signature\": \"304402204c27aac1c07e8bde8a998bf06acd5eaf40e874a9b128a4f19ee8c39ce45c9cbe0220380d9438d10ce81f7545f3de8530a19c1eda78e4683fc2145b9715eb260f1d66\" }, { \"label\": \"Maker amount\", \"path\": \"makerAmount\", \"signature\": \"3045022100e7f19c15b49e6f40eddd2c8a24d8c55e9224262aa0b856a413f842fc5c0fc7d00220341e5eaf45d8335bb6143768b1c961b6c7e97897bda5ef485457020661ac3ae3\" }, { \"label\": \"Taker amount\", \"path\": \"takerAmount\", \"signature\": \"3045022100e36cd43f82fc0f99ec2770a26b245f6af13623cee69670d68dd696ff76d4630e02202057a0dd1faee909037429ba7489ccf3891a38d29a4da04648441105c1e89048\" }] }, \"56:0x8dcdfe88ef0351f27437284d0710cd65b20288bb:affaa50b47c793acb6b9f912325d898538d409f735b8f312a1914623\": { \"contractName\": { \"label\": \"AugustusRFQ NFT order\", \"signature\": \"3044022045bb3ce0d61f428537754555a0d69cfc5554de2dd58c1c5cc7ae81abe073b1df022039ba8d7e1230c3851fc08db58cda6222c420dce4b8cf96725891906fc5f7539b\" }, \"fields\": [{ \"label\": \"Nonce and metadata\", \"path\": \"nonceAndMeta\", \"signature\": \"3044022020d30ebe13aa1235ea25dcc247a1c494a6aa2ac4f121aadc3beb874b9de4b75e022078efc82c2343d6165960fc252d10313550b6d9d1faeb6f2ff611c288fb53f364\" }, { \"label\": \"Expiration time\", \"path\": \"expiry\", \"signature\": \"3045022100ee126c98d8ad5b000090d6c16131709618d803878a72ceb1f58f2b11b2e52324022076403ce3d181511afc9b59b3f4a0ce4de9ee76dd60c78eb61660d623294d4070\" }, { \"label\": \"Maker asset encoded\", \"path\": \"makerAsset\", \"signature\": \"3045022100ed1f432fe0c33307e397f846970f7de0fc18098f3d5b4cc1a25844f75dbbfb9902204075ef8e6d6dae438dac2a7e3aace3e27bc7c67fe22728395f92888e68361f20\" }, { \"label\": \"Maker asset NFT ID\", \"path\": \"makerAssetId\", \"signature\": \"3044022022be34e598b158445f7ff6a5565b04627b61789339aa956b03f5c8dcb81e0ca102201b970d57742618204906414d7d23dc42e9e566776e7bda9060bcde335817a8ce\" }, { \"label\": \"Taker asset encoded\", \"path\": \"takerAsset\", \"signature\": \"304402203ec8a77927b84388d5a0ba1bb0bfa38fcb862b8c43d988bbbbccbd547a4ae38e022002f2f736d3cfbf42829b750af704323f29b1eedcbde789c49052521ec47bafee\" }, { \"label\": \"Taker asset NFT ID\", \"path\": \"takerAssetId\", \"signature\": \"304402205defad5bc1514f254cece6e8dfbfe3b68c3818bef6d4268b40c59858a6a2187502206767bb96c040e523dfd88724a0ce4b4f6bde73c02a286772f2a73c973dab0bab\" }, { \"label\": \"Maker address\", \"path\": \"maker\", \"signature\": \"3045022100a273a21625a130728e0448f53a047d50867a9ba5e4a285d7e06d98fb3bd655c2022061e93ce13cedef0ebe9bc9340b988d0fc7353e99e2ec28b77102a14b3a129479\" }, { \"label\": \"Taker address\", \"path\": \"taker\", \"signature\": \"3045022100b74529d5cab0055f80732bcf7864f03db98bb9f779fa56171f3faafdfee2719e0220757505e2ba5df6184002e921f678f9f5bb073197652a45d86c6edf003067ce2c\" }, { \"label\": \"Maker amount\", \"path\": \"makerAmount\", \"signature\": \"3045022100c14e1f90619be9cc92da927b1c908a18133b043e138d908bf81117e1fc73fe000220503047ae5e75ee53c0ed60601644ec09f430c613edc6ec72cdae4021d29438ce\" }, { \"label\": \"Taker amount\", \"path\": \"takerAmount\", \"signature\": \"304402201096ca9ff9b886a77fcbc7fdc8ddfc0f42a9c8e7fccb783581ca3abc75ba61dd0220191d21eed8b4eed56975b580832a8b1891a5b674fe1a0e5d7314b7b6486d7104\" }] }, \"137:0xDb46d1Dc155634FbC732f92E853b10B288AD5a1d:9e97b4d1d211350352bdbb5ef45c4cb52f988d93a2d4a8ec6e675d14\": { \"contractName\": { \"label\": \"Dispatch.xyz Follow Profile\", \"signature\": \"3044022008ad0a8cfe8c2630848f05e54ab93cfd1f5c301eb52cc74537d67a56751932bc02206dd3e78f5055b6c65a73905f840963b2f696afd04d6d472f4185dce9f6262821\" }, \"fields\": [{ \"label\": \"Profile Ids\", \"path\": \"profileIds\", \"signature\": \"3044022079ab31498b3ef74e744d5414f4c51334e00b20a5ad7c0a0ea6f463462d0a3699022079b29776df1f5243794cc128f19478ba586cd3b9378b5809740e9980763f8d8c\" }, { \"label\": \"Data\", \"path\": \"datas\", \"signature\": \"3045022100c04fb22aecc349de63571095782ea34cde05e576095c980d5c86f054c1a248cc02207f5a41199516bed46221aebed4f0f377508d39d661ef7f6ea7b16877709aa4ce\" }, { \"label\": \"Nonce\", \"path\": \"nonce\", \"signature\": \"304502210090109424df964562737fd1b5ce2f06b427856ae933c37f279af199f64fc530760220290cf4491328fc947f4d73f0032e151aa09caf8e085d0f0306fa355c0624dcac\" }, { \"label\": \"Expiration Date\", \"path\": \"deadline\", \"signature\": \"3044022060825e02b00e4487917d073f701639b1ca812f21f1cf588fa8eb545a59b1fec8022073ca7918a322dfeb966dfe5239cc1a213c14e67a32f5f51e14e53c05f4149783\" }] }, \"137:0x33c6eec1723b12c46732f7ab41398de45641fa42:2a4e40fa701836b6f11303b841424a6f3a47a5313c810b6651517fd1\": { \"contractName\": { \"label\": \"Mint\", \"signature\": \"30440220513be6e618840924202f319870537e0c1f1eb2e684c0a2c61152fc4c20b41c550220026e22f2cd2e12a6b48f97bbe362600556ce3fe5e8b292c05c89c591ea446e2b\" }, \"fields\": [{ \"label\": \"Receiver\", \"path\": \"receiver\", \"signature\": \"304502210089eeb41d1ba1235fe8319c6a248e1ac66d2598979d265e2d4cf16abc34ba47f302205a59e802e42b3268441980b4708600ab6e05e4c55de7407610987532cf73462e\" }, { \"label\": \"Quest Type\", \"path\": \"categoryId\", \"signature\": \"3045022100bc6cc7ae4c2b3b4d43acea4c513e09d11736275fade4c0bd834d94f6ebd3893302203045ae14bfbaa4ef3bc0d9cf76f29cd4c90859464290632ee72b20f4b5c37f8b\" }, { \"label\": \"Collection\", \"path\": \"collectionId\", \"signature\": \"304402207537d928b803882aac63dadb7fd512f4b959c0e1a737ce7594c9b9e0a0c661170220587298e0e8e2eae94da28564b1bdd7f62273d7e3707665a7966f1b04a15f061b\" }] }, \"137:0xf3cd476c3c4d3ac5ca2724767f269070ca09a043:16c6594547c8c6af18ca0d8b500976bfb7f38764060cec3792c2aad3\": { \"contractName\": { \"label\": \"AugustusRFQ ERC20 order\", \"signature\": \"3045022100a887a8b2f40695509ac6e040feb1a4a088fee459fd7e76cb137ea7c06b0a0b930220617b514271c05679e7ce04860ffca703ad2a21f4a45cce34b40e38624cf7ec13\" }, \"fields\": [{ \"label\": \"Nonce and metadata\", \"path\": \"nonceAndMeta\", \"signature\": \"30450221009fcaf300fef36d00f64c3d5e92991e67fd93862f8eddba0b8472568b5c66e38d02203a26f3aad1c0cf6638dea961f8f5e4ba5f72272bc7f1e33afac897a3b5b51604\" }, { \"label\": \"Expiration time\", \"path\": \"expiry\", \"signature\": \"3045022100984f166ee1744b4b69e24ed1e49fbaf43a24e82dd5b7d2103cf8ca854ff49e0a0220326ab17879b902521fa032a89c5c984e52bf3e31c8336cd67a1ce198d7c36e2d\" }, { \"label\": \"Maker asset address\", \"path\": \"makerAsset\", \"signature\": \"3045022100f4ec14863e0512804fc69d82fe17bf576340ae8005d0c48520cefb3254b102f702205fea57ba3919071157ff3ee0c93472e936f1dc079bcb0c447bb87ad86e505ea2\" }, { \"label\": \"Taker asset address\", \"path\": \"takerAsset\", \"signature\": \"3045022100957771ad2eced04af9750c1df10cc5b5b913fd3f9fe83408baa766573ed34221022055a1ba30b3a8895a011719ac54adaf7bfd24fe2c5041a90348097f719bed0dc7\" }, { \"label\": \"Maker address\", \"path\": \"maker\", \"signature\": \"3045022100f25edb42b652d5c645de567c201a1e6a64b0d6b23274cde08046d955cd2573860220129bbded4e33150cc38b93033b2d70d5fa141066f1ed7c603b5515ab8cdb2fca\" }, { \"label\": \"Taker address\", \"path\": \"taker\", \"signature\": \"3045022100c8790938f88557986c769102d31603849dc8c560cc03a45db99ddc90d69306690220295950348fffc22fbb898d75e768edb1edcb1c8772cc3518ff9687e957a87e50\" }, { \"label\": \"Maker amount\", \"path\": \"makerAmount\", \"signature\": \"3045022100b5e1dc4e5f69fd80611a4f5c7d306ac6aca4a2a2103515d761557e532884ca8702204b86dd5c323345242f1c1b263ba035932a10a5b0eeaddbc79fa10db27aa9d7d4\" }, { \"label\": \"Taker amount\", \"path\": \"takerAmount\", \"signature\": \"3045022100bd1de29559311612a7d0bca3c61b10d9ddf0753be7c372ebb95e0b69b674c01102207d685aa2b0a2309ad094a5fc8e09210681781f9a4294e4c7973d0ecf1adabcbd\" }] }, \"137:0xf3cd476c3c4d3ac5ca2724767f269070ca09a043:affaa50b47c793acb6b9f912325d898538d409f735b8f312a1914623\": { \"contractName\": { \"label\": \"AugustusRFQ NFT order\", \"signature\": \"3045022100b9798555ab901ed3cefcdec4aabd9418f3561fba299833ceadbf9d3043a996a7022037388e3956ce02764088733d92384fb4e669754b037e8a913995d761ac0d5cdf\" }, \"fields\": [{ \"label\": \"Nonce and metadata\", \"path\": \"nonceAndMeta\", \"signature\": \"3045022100b57c5877ce124196316dde0e2fb0f18258521cc2c7c27405bde78008bca27d8d02202053d4696b28b40fd1a16e7a179020c7d633e4548da0bd92f9442c24da12d510\" }, { \"label\": \"Expiration time\", \"path\": \"expiry\", \"signature\": \"3045022100b35db3057953f7b747d4423f688d8a3fb3101729f37af65c4ac4fc9a7ee8fb8d022033f4d70422b437593f00af75828ff067f914f825bd3075f8462080bf4e0f9ae0\" }, { \"label\": \"Maker asset encoded\", \"path\": \"makerAsset\", \"signature\": \"3045022100e2e0f280d333692a776343669d6f17dac3ded8935d5875964d5ac6b05bb093f80220589afeaf7a7baf3b5964b439111d07deafe25be8a32b43640a2cc073a7257aa6\" }, { \"label\": \"Maker asset NFT ID\", \"path\": \"makerAssetId\", \"signature\": \"304302201e35015cc3bbd6ca28bd57eb970cf1eb05826a4988c1238e951574f8804f28c2021f0cae62ed8199b725a39e714e60c92fe522ac7992c3dc1a27866f749547de89\" }, { \"label\": \"Taker asset encoded\", \"path\": \"takerAsset\", \"signature\": \"304502210094d2c3de8a61bf940dc5c8132070ee0566ab6d0059f1eff5aec3ba1ec04740a202200fb41470f2693427466a9ce580d5c9ff12243f848351c7aa2ac070c1618896e2\" }, { \"label\": \"Taker asset NFT ID\", \"path\": \"takerAssetId\", \"signature\": \"3045022100f9b55eafa8d519298960b040f36a7479ace9d43b677d243d22c3194147dfa033022025f7a2962e342ee1572f814cd8b8cba1382deb20054475ba9df9dd321bc9fcc7\" }, { \"label\": \"Maker address\", \"path\": \"maker\", \"signature\": \"304402201aa4061287e14289ff1c4fdffe8ddd811775aae4bb6577970ebb87735102a5ba02207d9c89254e9698a7aff849a87c2a163ce9793212a5fe3745e446393c6a71ec46\" }, { \"label\": \"Taker address\", \"path\": \"taker\", \"signature\": \"304402207ca92ed4b465b4fe1d4b2dd65561165a70b54c8dd132dcf15031c799c8ab22fe022041d7bd664003c62e949cdb0ed09a744ac6adce7d6e676e4de22437a830edcf74\" }, { \"label\": \"Maker amount\", \"path\": \"makerAmount\", \"signature\": \"3044022038901c22513acf13bac39f553c763d26ee32c3e6e215ca3cb69da0274ca901c702204fce716fc91f3cb7ac7da446bd3432020d002c5a62c48d199d7b4379fe93c9f1\" }, { \"label\": \"Taker amount\", \"path\": \"takerAmount\", \"signature\": \"304402203361ee1439f545c9664035be586925b2fb4878de9dbcdc7a519b5eb95a44ca6e02205f905942febcf5342577b5af149ea4deea5e6d0e1ae17356bb1d0628d8ccf8ff\" }] }, \"137:0x35f8aee672cde8e5fd09c93d2bfe4ff5a9cf0756:4776d13d863bd29241312beab87bd487ba5648c8c71919e9e5025e7b\": { \"contractName\": { \"label\": \"Lazy Mint ERC-721\", \"signature\": \"3045022100977ad189fb3f8c809caef784ca6c66fcda1c98274d92219b07416e43f43187af022051b069af307aef8d7b3b3aaf815eaf0e7e91c55f994616f3ea88293dd69f217c\" }, \"fields\": [{ \"label\": \"Token ID\", \"path\": \"tokenId\", \"signature\": \"30440220403fc14ad30f3f3ea597f75d88371c83ef2e10130a5143faeda87dc507fb9aa2022056202bc01b283e0f625b82c73db84ca3f17eef6d9eea89709aa0a88eae17096c\" }, { \"label\": \"Token URI\", \"path\": \"tokenURI\", \"signature\": \"3045022100ce280997a6b39acd5dc3522401c205eb4719b4b43e7e673958f1c7b7b97a8f59022042eb6a70f1f45c771a697eb85b71ba58acc8074ac436d27840ec1325423d7e0c\" }, { \"label\": \"Creator account address\", \"path\": \"creators.[].account\", \"signature\": \"3045022100f072042cace3b6ce605bbf0db7c3941928cb1ac5b6011bf47e04d76f57bbf392022054eb24e12319d88144a5e4d15a22271f2f1285d51f1b7f48bfc46ff1724c1741\" }, { \"label\": \"Creator value (10000 = 100%)\", \"path\": \"creators.[].value\", \"signature\": \"3045022100b5517383a1f9f7281859e1e3ebcc588770ac08fe7961d83ebff3ff922674fa3302204c490c86d4d987875aa55c089a6c8bab4414a742bc7df19f67261a319d4d8c17\" }, { \"label\": \"Royalties account address\", \"path\": \"royalties.[].account\", \"signature\": \"304402203660c0f0da24c89206e992e46c399d75d4e0981dd86bc145f4ed0d0ef469b47402200948f415f220225eaa67fb03749b2d5ea1ca8dfa76eda34d15c8f95746e30bd4\" }, { \"label\": \"Royalties value (10000 = 100%)\", \"path\": \"royalties.[].value\", \"signature\": \"30440220747d86766a08b5bf78182dadf5ace3813cb8190266e5d1a72f2d94a387fd6ba5022006c69b8171a47fa15ef906fac4546856dd9467a8e1036d89e323614e64d29715\" }] }, \"137:0x35f8aee672cde8e5fd09c93d2bfe4ff5a9cf0756:82dc7c771ad33e33d4e1b89d932d7574d87b8ef5d7d9c0d6f0be97a8\": { \"contractName\": { \"label\": \"Meta Transaction\", \"signature\": \"304402203e256b1407f82dbe395bee10e34bf5b995c3fa91737172b58fb41bcf8e006eea0220046543fdb21b8f65e050b57081915c083fab2abc1cdd663ce53b1c792dbfdfb2\" }, \"fields\": [{ \"label\": \"User Address\", \"path\": \"from\", \"signature\": \"304402204576c4999dd6a70df131dfd032667a42695d333a07b3599ec6d72843c54b48b502202cf424d057bffceadbbcd9023b2241bab6d2faf8b7324fbdf87f5daa9789fe38\" }, { \"label\": \"Meta Transaction Nonce\", \"path\": \"nonce\", \"signature\": \"3045022100e094b23ebe8102c3c1aa5f802c33ed56f48bc94f6446b289ce358ea60ac375c0022013255aba7dc03fcfe30c7eacdf7a14ad0c51f389ddd51f7c4ba6e8d9bbf3dbb7\" }] }, \"137:0x7f19564c35c681099c0c857a7141836cf7edaa53:139c059f886c2b9b41f05a6c4ec2578a048d18aaadbc095609e5df4b\": { \"contractName\": { \"label\": \"List Order\", \"signature\": \"30450221008b4ee6f1b492d19243afc4715d1f0cd9bf79a1aeb61fbf58f0e1323bce9dbc99022001a8a548f081eba23f33f03e20f478c33bd264efb3d8bfa16ce96e0b69ad5428\" }, \"fields\": [{ \"label\": \"Order maker address\", \"path\": \"maker\", \"signature\": \"3045022100f9851e9dfd9706740307e7829705b3e049390755e36b26a059f28d6bb47ac949022029a4efc35a2264fbe8f88eee1f83c430fb5e96bbf55e6deb31a60826cb0203b3\" }, { \"label\": \"Order make asset value\", \"path\": \"makeAsset.value\", \"signature\": \"304402203bf13f37325f60973b02d5433857676ce135f94011047bbfdd2b97c30db1a069022029f409c7689891c222cdec4e63d143938ff73a4f6cffb0c5d56228d572d25fc2\" }, { \"label\": \"Order taker address\", \"path\": \"taker\", \"signature\": \"3045022100bcdc72ba9f16a3ac3b73ad04f445a60958a7ea644511d9b917c5ae52be52c76b02206a68b66cc24c79e45687c07a201f7e910444a66a657c615c5854ac7065b0c6fc\" }, { \"label\": \"Order take asset value\", \"path\": \"takeAsset.value\", \"signature\": \"3045022100c23622dc64172dfedc8fae04d5fa24e25f598bea659e703839dccf19736ba13a02207554a945d0e9c2816860ec7a6c4aab9088fb58f5316c1007d82f0add61693954\" }, { \"label\": \"Order start time\", \"path\": \"start\", \"signature\": \"304402200cfe7613b90190a2c4dafaa661e5778a7756444e593a8e16105da315231df264022025e1daecd1752763decb7c51389a5eb97037536ecea3781e70ab428d75e1278b\" }, { \"label\": \"Order end time\", \"path\": \"end\", \"signature\": \"3045022100d0047bfc769190c5a173c8bdf79a2fdef008f0674ac04f3a7fe100553f41dafc022030e7ef0a1dd8f6f4131da237f6c33a331add85dd747f7f9749806759767d0880\" }] }, \"137:0x7f19564c35c681099c0c857a7141836cf7edaa53:82dc7c771ad33e33d4e1b89d932d7574d87b8ef5d7d9c0d6f0be97a8\": { \"contractName\": { \"label\": \"Meta Transaction\", \"signature\": \"3045022100a2f95042a915f8ae76b54b1f012271a44356484ea6d4963b81e6806ed6fe80500220564155498a275d3fe5eec595fad3858cb2d7fa85178b98208d09a886a1485257\" }, \"fields\": [{ \"label\": \"User Address\", \"path\": \"from\", \"signature\": \"3044022051a39f6c809110faf6aa95fde98315c0c2b2cac34c31d927c058a2c0ebc158cd02206ccfac20b0327ac6e2ca08d5d53aef189b2bbe8bc010ae9002b25edcf43c2f06\" }, { \"label\": \"Meta Transaction Nonce\", \"path\": \"nonce\", \"signature\": \"3045022100c1e15f064b9cf3d8cb2c6b297318c543066a12868419121c7062ccb7fb2f619b02202c3079f47124d6a25178d4b8431acd0bb08f44e9a0ec302e71bb4cc9b49a05a9\" }] }, \"137:0xa2d9ded6115b7b7208459450d676f0127418ae7a:07bed12ab07fe09633d57ede321ed3dd0940d654b9d34a379c4997b9\": { \"contractName\": { \"label\": \"Lazy Mint ERC-1155\", \"signature\": \"3045022100b85f48fd591345542f9e2271b4f33e71287a703eda9f9f7b54458dea60fb59fa0220661f4281eff16352e5e8db92a254b6b74ac0f20e3d41c9042a3c7c9f7397bd08\" }, \"fields\": [{ \"label\": \"Token ID\", \"path\": \"tokenId\", \"signature\": \"304402203dfd604170efb9379c36e17439f15f441b437aecf2d9abd0dc8b0c757c15d1fa022007fde07992c2b3797e7aacb7309cb60d494856d7a9d5866981a8948abf4d6a9c\" }, { \"label\": \"Token URI\", \"path\": \"tokenURI\", \"signature\": \"3045022100a334814c15bfe1474472e56201aa83aa7016648b2a92aa2ae7c4d86b8a412eaf0220416654d59af289a253a96cbe4f5c9b75c2129d603d94cb3c7966cbea682f542a\" }, { \"label\": \"Token Supply\", \"path\": \"supply\", \"signature\": \"3045022100a180585fc34f26b83b50c1d7609a0623b85b76267e393bf2871f41790487bf5902206c296108c56f2a1557a66a04f05bbcd7f0e0e0cd7a7a9764783673c0cda21d1f\" }, { \"label\": \"Creator account address\", \"path\": \"creators.[].account\", \"signature\": \"304402200a32f52a36f61e3b62af734ceea6e02ebf44e9bbafccb92b2570b7ae9666638e02205e8a0ee1634919bab75369b611257e17c12cf379a4b83e3da2089de13863baa0\" }, { \"label\": \"Creator value (10000 = 100%)\", \"path\": \"creators.[].value\", \"signature\": \"304502210092c988b7806250d99ca2760167a0c72f4c7e20f8f9174c519421bba8adc03c0a022032f33a3843e31b8ad17991e8eb3e3b922c5c2b9570d930fa9456b6f59b8974d3\" }, { \"label\": \"Royalties account address\", \"path\": \"royalties.[].account\", \"signature\": \"304502210081e5ed5701d2bb497c4b1cadd0ca61220b1078357f7e3ace908c01fcfcd3abad02203b03cb75eeabcd49777362466e3af9a461ad39059238748ed7d902f988db3318\" }, { \"label\": \"Royalties value (10000 = 100%)\", \"path\": \"royalties.[].value\", \"signature\": \"3045022100cc555652ef532386da9ad2405536aaa7adbe4cdac73ae9b2a8d4b0659eb4013a0220030799c1a813bef66c6395c7305a1f98e3bfc0bd045917d63bf7bd24e09fbebf\" }] }, \"137:0xa2d9ded6115b7b7208459450d676f0127418ae7a:82dc7c771ad33e33d4e1b89d932d7574d87b8ef5d7d9c0d6f0be97a8\": { \"contractName\": { \"label\": \"Meta Transaction\", \"signature\": \"304402202e2b7810798bb8d8094ff46e47ae09c820b374420984f5c9845139f7995b5266022050244aa907e45d7ff4ffc0b383262c4425d32aee4190bfc09fff359163268b73\" }, \"fields\": [{ \"label\": \"User Address\", \"path\": \"from\", \"signature\": \"3045022100da2c6c45ce4014375aec27ce7dfc470a066a53a3ba812da7f4fac641fc48334502202ce049c05a76e19fc4195a323464383f3eca62f33a435ad5807716af1a83af4e\" }, { \"label\": \"Meta Transaction Nonce\", \"path\": \"nonce\", \"signature\": \"304402207b53dc30da4e7360a2deb22ab0ee2ddca9dda1c807095a57751dc395d7d503c602200f464f277a17558cab3b891fe8d4fb232b5783f26f6813da77ceeba527bbe1c5\" }] } };\n//# sourceMappingURL=eip712.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport SHA224 from \"crypto-js/sha224\";\nimport { hexBuffer, intAsHexBytes } from \"../../utils\";\nimport EIP712CAL from \"@ledgerhq/cryptoassets/data/eip712\";\nimport BigNumber from \"bignumber.js\";\nconst NULL_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n/**\n * @ignore for the README\n *\n * A Map of helpers to get the wanted binary value for\n * each type of array possible in a type definition\n */\nvar EIP712_ARRAY_TYPE_VALUE;\n(function (EIP712_ARRAY_TYPE_VALUE) {\n    EIP712_ARRAY_TYPE_VALUE[EIP712_ARRAY_TYPE_VALUE[\"DYNAMIC\"] = 0] = \"DYNAMIC\";\n    EIP712_ARRAY_TYPE_VALUE[EIP712_ARRAY_TYPE_VALUE[\"FIXED\"] = 1] = \"FIXED\";\n})(EIP712_ARRAY_TYPE_VALUE || (EIP712_ARRAY_TYPE_VALUE = {}));\n/**\n * @ignore for the README\n *\n * A Map of helpers to get the id and size to return for each\n * type that can be used in EIP712\n */\nexport const EIP712_TYPE_PROPERTIES = {\n    CUSTOM: {\n        key: () => 0,\n        sizeInBits: () => null,\n    },\n    INT: {\n        key: () => 1,\n        sizeInBits: (size) => Number(size) / 8,\n    },\n    UINT: {\n        key: () => 2,\n        sizeInBits: (size) => Number(size) / 8,\n    },\n    ADDRESS: {\n        key: () => 3,\n        sizeInBits: () => null,\n    },\n    BOOL: {\n        key: () => 4,\n        sizeInBits: () => null,\n    },\n    STRING: {\n        key: () => 5,\n        sizeInBits: () => null,\n    },\n    BYTES: {\n        key: (size) => (typeof size !== \"undefined\" ? 6 : 7),\n        sizeInBits: (size) => (typeof size !== \"undefined\" ? Number(size) : null),\n    },\n};\n/**\n * @ignore for the README\n *\n * A Map of encoders to transform a value to formatted buffer\n */\nexport const EIP712_TYPE_ENCODERS = {\n    INT(value, sizeInBits = 256) {\n        const failSafeValue = value !== null && value !== void 0 ? value : \"0\";\n        if (typeof failSafeValue === \"string\" && (failSafeValue === null || failSafeValue === void 0 ? void 0 : failSafeValue.startsWith(\"0x\"))) {\n            return hexBuffer(failSafeValue);\n        }\n        let valueAsBN = new BigNumber(failSafeValue);\n        // If negative we'll use `two's complement` method to\n        // \"reversibly convert a positive binary number into a negative binary number with equivalent (but negative) value\".\n        // thx wikipedia\n        if (valueAsBN.lt(0)) {\n            const sizeInBytes = sizeInBits / 8;\n            // Creates BN from a buffer serving as a mask filled by maximum value 0xff\n            const maskAsBN = new BigNumber(`0x${Buffer.alloc(sizeInBytes, 0xff).toString(\"hex\")}`);\n            // two's complement version of value\n            valueAsBN = maskAsBN.plus(valueAsBN).plus(1);\n        }\n        const paddedHexString = valueAsBN.toString(16).length % 2\n            ? \"0\" + valueAsBN.toString(16)\n            : valueAsBN.toString(16);\n        return Buffer.from(paddedHexString, \"hex\");\n    },\n    UINT(value) {\n        return this.INT(value);\n    },\n    BOOL(value) {\n        return this.INT(typeof value === \"boolean\" ? Number(value).toString() : value);\n    },\n    ADDRESS(value) {\n        // Only sending the first 10 bytes (why ?)\n        return hexBuffer(value !== null && value !== void 0 ? value : \"\").slice(0, 20);\n    },\n    STRING(value) {\n        return Buffer.from(value !== null && value !== void 0 ? value : \"\", \"utf-8\");\n    },\n    BYTES(value, sizeInBits) {\n        const failSafeValue = value !== null && value !== void 0 ? value : \"\";\n        // Why slice again ?\n        return hexBuffer(failSafeValue).slice(0, sizeInBits !== null && sizeInBits !== void 0 ? sizeInBits : ((failSafeValue === null || failSafeValue === void 0 ? void 0 : failSafeValue.length) - 2) / 2);\n    },\n};\n/**\n * @ignore for the README\n *\n * Helper parsing an EIP712 Type name to return its type and size(s)\n * if it's an array or nested arrays\n *\n * @see EIP712MessageTypes\n *\n * @example \"uint8[2][][4]\" => [{name: \"uint\", bits: 8}, [2, null, 4]]\n * @example \"bool\" => [{name: \"bool\", bits: null}, []]\n *\n * @param {String} typeName\n * @returns {[{ name: string; bits: Number | null }, Array<Number | null | undefined>]}\n */\nexport const destructTypeFromString = (typeName) => {\n    // Will split \"any[][1][10]\" in \"any\", \"[][1][10]\"\n    const splitNameAndArraysRegex = new RegExp(/^([^[\\]]*)(\\[.*\\])*/g);\n    // Will match all numbers (or null) inside each array. [0][10][] => [0,10,null]\n    const splitArraysRegex = new RegExp(/\\[(\\d*)\\]/g);\n    // Will separate the the name from the potential bits allocation. uint8 => [uint,8]\n    const splitNameAndNumberRegex = new RegExp(/(\\D*)(\\d*)/);\n    const [, type, maybeArrays] = splitNameAndArraysRegex.exec(typeName || \"\") || [];\n    const [, name, bits] = splitNameAndNumberRegex.exec(type || \"\") || [];\n    const typeDescription = name\n        ? { name, bits: bits ? Number(bits) : undefined }\n        : null;\n    const arrays = maybeArrays ? [...maybeArrays.matchAll(splitArraysRegex)] : [];\n    // Parse each size to either a Number or null\n    const arraySizes = arrays.map(([, size]) => (size ? Number(size) : null));\n    return [typeDescription, arraySizes];\n};\n/**\n * @ignore for the README\n *\n * Helper to construct the hexadecimal ByteString for the description\n * of a field in an EIP712 Message\n *\n * @param isArray\n * @param typeSize\n * @param typeValue\n * @returns {String} HexByteString\n */\nexport const constructTypeDescByteString = (isArray, typeSize, typeValue) => {\n    if (typeValue >= 16) {\n        throw new Error(\"Eth utils - constructTypeDescByteString - Cannot accept a typeValue >= 16 because the typeValue can only be 4 bits in binary\" +\n            { isArray, typeSize, typeValue });\n    }\n    // 1 is array, 0 is not array\n    const isArrayBit = isArray ? \"1\" : \"0\";\n    // 1 has type size, 0 has no type size\n    const hasTypeSize = typeof typeSize === \"number\" ? \"1\" : \"0\";\n    // 2 unused bits\n    const unusedBits = \"00\";\n    // type key as 4 bits\n    const typeValueBits = typeValue.toString(2).padStart(4, \"0\");\n    return intAsHexBytes(parseInt(isArrayBit + hasTypeSize + unusedBits + typeValueBits, 2), 1);\n};\n/**\n * @ignore for the README\n *\n * Helper to create the buffer to describe an EIP712 types' entry structure\n *\n * @param {EIP712MessageTypesEntry} entry\n * @returns {Buffer}\n */\nexport const makeTypeEntryStructBuffer = ({ name, type, }) => {\n    var _a, _b, _c, _d;\n    const [typeDescription, arrSizes] = destructTypeFromString(type);\n    const isTypeAnArray = Boolean(arrSizes.length);\n    const typeProperties = EIP712_TYPE_PROPERTIES[((_a = typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.name) === null || _a === void 0 ? void 0 : _a.toUpperCase()) || \"\"] ||\n        EIP712_TYPE_PROPERTIES.CUSTOM;\n    const typeKey = typeProperties.key(typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.bits);\n    const typeSizeInBits = typeProperties.sizeInBits(typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.bits);\n    const typeDescData = constructTypeDescByteString(isTypeAnArray, typeSizeInBits, typeKey);\n    const bufferArray = [Buffer.from(typeDescData, \"hex\")];\n    if (typeProperties === EIP712_TYPE_PROPERTIES.CUSTOM) {\n        bufferArray.push(Buffer.from(intAsHexBytes((_c = (_b = typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.name) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0, 1), \"hex\"));\n        bufferArray.push(Buffer.from((_d = typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.name) !== null && _d !== void 0 ? _d : \"\", \"utf-8\"));\n    }\n    if (typeof typeSizeInBits === \"number\") {\n        bufferArray.push(Buffer.from(intAsHexBytes(typeSizeInBits, 1), \"hex\"));\n    }\n    if (isTypeAnArray) {\n        bufferArray.push(Buffer.from(intAsHexBytes(arrSizes.length, 1), \"hex\"));\n        arrSizes.forEach((size) => {\n            if (typeof size === \"number\") {\n                bufferArray.push(Buffer.from(intAsHexBytes(EIP712_ARRAY_TYPE_VALUE.FIXED, 1), \"hex\"), Buffer.from(intAsHexBytes(size, 1), \"hex\"));\n            }\n            else {\n                bufferArray.push(Buffer.from(intAsHexBytes(EIP712_ARRAY_TYPE_VALUE.DYNAMIC, 1), \"hex\"));\n            }\n        });\n    }\n    bufferArray.push(Buffer.from(intAsHexBytes(name.length, 1), \"hex\"), Buffer.from(name, \"utf-8\"));\n    return Buffer.concat(bufferArray);\n};\n// As defined in [spec](https://eips.ethereum.org/EIPS/eip-712), the properties below are all required.\nexport function isEIP712Message(message) {\n    return (typeof message === \"object\" &&\n        \"types\" in message &&\n        \"primaryType\" in message &&\n        \"domain\" in message &&\n        \"message\" in message);\n}\nexport const sortObjectAlphabetically = (obj) => {\n    const keys = Object.keys(obj).sort();\n    return keys.reduce((acc, curr) => {\n        const value = (() => {\n            if (Array.isArray(obj[curr])) {\n                return obj[curr].map((field) => sortObjectAlphabetically(field));\n            }\n            return obj[curr];\n        })();\n        acc[curr] = value;\n        return acc;\n    }, {});\n};\nexport const getSchemaHashForMessage = (message) => {\n    const { types } = message;\n    const sortedTypes = sortObjectAlphabetically(types);\n    return SHA224(JSON.stringify(sortedTypes).replace(\" \", \"\")).toString();\n};\n/**\n * @ignore for the README\n *\n * Tries to find the proper filters for a given EIP712 message\n * in the CAL\n *\n * @param {EIP712Message} message\n * @returns {MessageFilters | undefined}\n */\nexport const getFiltersForMessage = (message, remoteCryptoAssetsListURI) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b, _c, _d;\n    const schemaHash = getSchemaHashForMessage(message);\n    const messageId = `${(_b = (_a = message.domain) === null || _a === void 0 ? void 0 : _a.chainId) !== null && _b !== void 0 ? _b : 0}:${(_d = (_c = message.domain) === null || _c === void 0 ? void 0 : _c.verifyingContract) !== null && _d !== void 0 ? _d : NULL_ADDRESS}:${schemaHash}`;\n    try {\n        if (remoteCryptoAssetsListURI) {\n            const { data: dynamicCAL } = yield axios.get(`${remoteCryptoAssetsListURI}/eip712.json`);\n            return dynamicCAL[messageId] || EIP712CAL[messageId];\n        }\n        throw new Error();\n    }\n    catch (e) {\n        return EIP712CAL[messageId];\n    }\n});\n//# sourceMappingURL=EIP712.utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexBuffer, intAsHexBytes, splitPath } from \"../../utils\";\nimport { getLoadConfig } from \"../../services/ledger/loadConfig\";\nimport { destructTypeFromString, EIP712_TYPE_ENCODERS, EIP712_TYPE_PROPERTIES, getFiltersForMessage, makeTypeEntryStructBuffer, sortObjectAlphabetically, } from \"./EIP712.utils\";\n/**\n * @ignore for the README\n *\n * Factory to create the recursive function that will pass on each\n * field level and APDUs to describe its structure implementation\n *\n * @param {Eth[\"sendStructImplem\"]} sendStructImplem\n * @param {EIP712MessageTypes} types\n * @returns {void}\n */\nconst makeRecursiveFieldStructImplem = (transport, types, filters) => {\n    var _a;\n    const typesMap = {};\n    for (const type in types) {\n        typesMap[type] = (_a = types[type]) === null || _a === void 0 ? void 0 : _a.reduce((acc, curr) => (Object.assign(Object.assign({}, acc), { [curr.name]: curr.type })), {});\n    }\n    // This recursion will call itself to handle each level of each field\n    // in order to send APDUs for each of them\n    const recursiveFieldStructImplem = (destructedType, data, path = \"\") => __awaiter(void 0, void 0, void 0, function* () {\n        var _b, _c;\n        const [typeDescription, arrSizes] = destructedType;\n        const [currSize, ...restSizes] = arrSizes;\n        const isCustomType = !EIP712_TYPE_PROPERTIES[((_b = typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.name) === null || _b === void 0 ? void 0 : _b.toUpperCase()) || \"\"];\n        if (Array.isArray(data) && typeof currSize !== \"undefined\") {\n            yield sendStructImplem(transport, {\n                structType: \"array\",\n                value: data.length,\n            });\n            for (const entry of data) {\n                yield recursiveFieldStructImplem([typeDescription, restSizes], entry, `${path}.[]`);\n            }\n        }\n        else if (isCustomType) {\n            for (const [fieldName, fieldValue] of Object.entries(data)) {\n                const fieldType = (_c = typesMap[(typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.name) || \"\"]) === null || _c === void 0 ? void 0 : _c[fieldName];\n                if (fieldType) {\n                    yield recursiveFieldStructImplem(destructTypeFromString(fieldType), fieldValue, `${path}.${fieldName}`);\n                }\n            }\n        }\n        else {\n            const filter = filters === null || filters === void 0 ? void 0 : filters.fields.find((f) => path === f.path);\n            if (filter) {\n                yield sendFilteringInfo(transport, \"showField\", {\n                    displayName: filter.label,\n                    sig: filter.signature,\n                });\n            }\n            yield sendStructImplem(transport, {\n                structType: \"field\",\n                value: {\n                    data,\n                    type: (typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.name) || \"\",\n                    sizeInBits: typeDescription === null || typeDescription === void 0 ? void 0 : typeDescription.bits,\n                },\n            });\n        }\n    });\n    return recursiveFieldStructImplem;\n};\n/**\n * @ignore for the README\n *\n * This method is used to send the message definition with all its types.\n * This method should be used before the sendStructImplem one\n *\n * @param {String} structType\n * @param {String|Buffer} value\n * @returns {Promise<void>}\n */\nconst sendStructDef = (transport, structDef) => {\n    let APDU_FIELDS;\n    (function (APDU_FIELDS) {\n        APDU_FIELDS[APDU_FIELDS[\"CLA\"] = 224] = \"CLA\";\n        APDU_FIELDS[APDU_FIELDS[\"INS\"] = 26] = \"INS\";\n        APDU_FIELDS[APDU_FIELDS[\"P1_complete\"] = 0] = \"P1_complete\";\n        APDU_FIELDS[APDU_FIELDS[\"P1_partial\"] = 1] = \"P1_partial\";\n        APDU_FIELDS[APDU_FIELDS[\"P2_name\"] = 0] = \"P2_name\";\n        APDU_FIELDS[APDU_FIELDS[\"P2_field\"] = 255] = \"P2_field\";\n    })(APDU_FIELDS || (APDU_FIELDS = {}));\n    const { structType, value } = structDef;\n    const data = structType === \"name\" && typeof value === \"string\"\n        ? Buffer.from(value, \"utf-8\")\n        : value;\n    return transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1_complete, structType === \"name\" ? APDU_FIELDS.P2_name : APDU_FIELDS.P2_field, data);\n};\n/**\n * @ignore for the README\n *\n * This method provides a trusted new display name to use for the upcoming field.\n * This method should be used after the sendStructDef one.\n *\n * If the method describes an empty name (length of 0), the upcoming field will be taken\n * into account but won’t be shown on the device.\n *\n * The signature is computed on :\n * json key length || json key || display name length || display name\n *\n * signed by the following secp256k1 public key:\n * 0482bbf2f34f367b2e5bc21847b6566f21f0976b22d3388a9a5e446ac62d25cf725b62a2555b2dd464a4da0ab2f4d506820543af1d242470b1b1a969a27578f353\n *\n * @param {String} structType \"root\" | \"array\" | \"field\"\n * @param {string | number | StructFieldData} value\n * @returns {Promise<Buffer | void>}\n */\nconst sendStructImplem = (transport, structImplem) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    let APDU_FIELDS;\n    (function (APDU_FIELDS) {\n        APDU_FIELDS[APDU_FIELDS[\"CLA\"] = 224] = \"CLA\";\n        APDU_FIELDS[APDU_FIELDS[\"INS\"] = 28] = \"INS\";\n        APDU_FIELDS[APDU_FIELDS[\"P1_complete\"] = 0] = \"P1_complete\";\n        APDU_FIELDS[APDU_FIELDS[\"P1_partial\"] = 1] = \"P1_partial\";\n        APDU_FIELDS[APDU_FIELDS[\"P2_root\"] = 0] = \"P2_root\";\n        APDU_FIELDS[APDU_FIELDS[\"P2_array\"] = 15] = \"P2_array\";\n        APDU_FIELDS[APDU_FIELDS[\"P2_field\"] = 255] = \"P2_field\";\n    })(APDU_FIELDS || (APDU_FIELDS = {}));\n    const { structType, value } = structImplem;\n    if (structType === \"root\") {\n        return transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1_complete, APDU_FIELDS.P2_root, Buffer.from(value, \"utf-8\"));\n    }\n    if (structType === \"array\") {\n        return transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1_complete, APDU_FIELDS.P2_array, Buffer.from(intAsHexBytes(value, 1), \"hex\"));\n    }\n    if (structType === \"field\") {\n        const { data: rawData, type, sizeInBits } = value;\n        const encodedData = (_a = EIP712_TYPE_ENCODERS[type.toUpperCase()]) === null || _a === void 0 ? void 0 : _a.call(EIP712_TYPE_ENCODERS, rawData, sizeInBits);\n        if (encodedData) {\n            // const dataLengthPer16Bits = (encodedData.length & 0xff00) >> 8;\n            const dataLengthPer16Bits = Math.floor(encodedData.length / 256);\n            // const dataLengthModulo16Bits = encodedData.length & 0xff;\n            const dataLengthModulo16Bits = encodedData.length % 256;\n            const data = Buffer.concat([\n                Buffer.from(intAsHexBytes(dataLengthPer16Bits, 1), \"hex\"),\n                Buffer.from(intAsHexBytes(dataLengthModulo16Bits, 1), \"hex\"),\n                encodedData,\n            ]);\n            const bufferSlices = new Array(Math.ceil(data.length / 256))\n                .fill(null)\n                .map((_, i) => data.slice(i * 255, (i + 1) * 255));\n            for (const bufferSlice of bufferSlices) {\n                yield transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, bufferSlice !== bufferSlices[bufferSlices.length - 1]\n                    ? APDU_FIELDS.P1_partial\n                    : APDU_FIELDS.P1_complete, APDU_FIELDS.P2_field, bufferSlice);\n            }\n        }\n    }\n    return Promise.resolve();\n});\nfunction sendFilteringInfo(transport, type, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let APDU_FIELDS;\n        (function (APDU_FIELDS) {\n            APDU_FIELDS[APDU_FIELDS[\"CLA\"] = 224] = \"CLA\";\n            APDU_FIELDS[APDU_FIELDS[\"INS\"] = 30] = \"INS\";\n            APDU_FIELDS[APDU_FIELDS[\"P1\"] = 0] = \"P1\";\n            APDU_FIELDS[APDU_FIELDS[\"P2_activate\"] = 0] = \"P2_activate\";\n            APDU_FIELDS[APDU_FIELDS[\"P2_contract_name\"] = 15] = \"P2_contract_name\";\n            APDU_FIELDS[APDU_FIELDS[\"P2_show_field\"] = 255] = \"P2_show_field\";\n        })(APDU_FIELDS || (APDU_FIELDS = {}));\n        switch (type) {\n            case \"activate\":\n                return transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1, APDU_FIELDS.P2_activate);\n            case \"contractName\": {\n                const { displayName, filtersCount, sig } = data;\n                const displayNameLengthBuffer = Buffer.from(intAsHexBytes(displayName.length, 1), \"hex\");\n                const displayNameBuffer = Buffer.from(displayName);\n                const filtersCountBuffer = Buffer.from(intAsHexBytes(filtersCount, 1), \"hex\");\n                const sigLengthBuffer = Buffer.from(intAsHexBytes(sig.length / 2, 1), \"hex\");\n                const sigBuffer = Buffer.from(sig, \"hex\");\n                const callData = Buffer.concat([\n                    displayNameLengthBuffer,\n                    displayNameBuffer,\n                    filtersCountBuffer,\n                    sigLengthBuffer,\n                    sigBuffer,\n                ]);\n                return transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1, APDU_FIELDS.P2_contract_name, callData);\n            }\n            case \"showField\": {\n                const { displayName, sig } = data;\n                const displayNameLengthBuffer = Buffer.from(intAsHexBytes(displayName.length, 1), \"hex\");\n                const displayNameBuffer = Buffer.from(displayName);\n                const sigLengthBuffer = Buffer.from(intAsHexBytes(sig.length / 2, 1), \"hex\");\n                const sigBuffer = Buffer.from(sig, \"hex\");\n                const callData = Buffer.concat([\n                    displayNameLengthBuffer,\n                    displayNameBuffer,\n                    sigLengthBuffer,\n                    sigBuffer,\n                ]);\n                return transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1, APDU_FIELDS.P2_show_field, callData);\n            }\n        }\n    });\n}\n/**\n * @ignore for the README\n *\n * Sign an EIP-721 formatted message following the specification here:\n * https://github.com/LedgerHQ/app-ethereum/blob/develop/doc/ethapp.asc#sign-eth-eip-712\n * @example\n  eth.signEIP721Message(\"44'/60'/0'/0/0\", {\n    domain: {\n      chainId: 69,\n      name: \"Da Domain\",\n      verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n      version: \"1\"\n    },\n    types: {\n      \"EIP712Domain\": [\n            { name: \"name\", type: \"string\" },\n            { name: \"version\", type: \"string\" },\n            { name: \"chainId\", type: \"uint256\" },\n            { name: \"verifyingContract\", type: \"address\" }\n        ],\n      \"Test\": [\n        { name: \"contents\", type: \"string\" }\n      ]\n    },\n    primaryType: \"Test\",\n    message: {contents: \"Hello, Bob!\"},\n  })\n *\n * @param {String} path derivationPath\n * @param {Object} jsonMessage message to sign\n * @param {Boolean} fullImplem use the legacy implementation\n * @returns {Promise}\n */\nexport const signEIP712Message = (transport, path, jsonMessage, fullImplem = false, loadConfig) => __awaiter(void 0, void 0, void 0, function* () {\n    let APDU_FIELDS;\n    (function (APDU_FIELDS) {\n        APDU_FIELDS[APDU_FIELDS[\"CLA\"] = 224] = \"CLA\";\n        APDU_FIELDS[APDU_FIELDS[\"INS\"] = 12] = \"INS\";\n        APDU_FIELDS[APDU_FIELDS[\"P1\"] = 0] = \"P1\";\n        APDU_FIELDS[APDU_FIELDS[\"P2_v0\"] = 0] = \"P2_v0\";\n        APDU_FIELDS[APDU_FIELDS[\"P2_full\"] = 1] = \"P2_full\";\n    })(APDU_FIELDS || (APDU_FIELDS = {}));\n    const { primaryType, types: unsortedTypes, domain, message } = jsonMessage;\n    const { cryptoassetsBaseURL } = getLoadConfig(loadConfig);\n    // Types are sorted by alphabetical order in order to get the same schema hash no matter the JSON format\n    const types = sortObjectAlphabetically(unsortedTypes);\n    const filters = yield getFiltersForMessage(jsonMessage, cryptoassetsBaseURL);\n    const typeEntries = Object.entries(types);\n    // Looping on all types entries and fields to send structures' definitions\n    for (const [typeName, entries] of typeEntries) {\n        yield sendStructDef(transport, {\n            structType: \"name\",\n            value: typeName,\n        });\n        for (const { name, type } of entries) {\n            const typeEntryBuffer = makeTypeEntryStructBuffer({ name, type });\n            yield sendStructDef(transport, {\n                structType: \"field\",\n                value: typeEntryBuffer,\n            });\n        }\n    }\n    if (filters) {\n        yield sendFilteringInfo(transport, \"activate\");\n    }\n    // Create the recursion that should pass on each entry\n    // of the domain fields and primaryType fields\n    const recursiveFieldStructImplem = makeRecursiveFieldStructImplem(transport, types, filters);\n    // Looping on all domain type's entries and fields to send\n    // structures' implementations\n    const domainName = \"EIP712Domain\";\n    yield sendStructImplem(transport, {\n        structType: \"root\",\n        value: domainName,\n    });\n    const domainTypeFields = types[domainName];\n    for (const { name, type } of domainTypeFields) {\n        const domainFieldValue = domain[name];\n        yield recursiveFieldStructImplem(destructTypeFromString(type), domainFieldValue);\n    }\n    if (filters) {\n        const { contractName, fields } = filters;\n        const contractNameInfos = {\n            displayName: contractName.label,\n            filtersCount: fields.length,\n            sig: contractName.signature,\n        };\n        yield sendFilteringInfo(transport, \"contractName\", contractNameInfos);\n    }\n    // Looping on all primaryType type's entries and fields to send\n    // structures' implementations\n    yield sendStructImplem(transport, {\n        structType: \"root\",\n        value: primaryType,\n    });\n    const primaryTypeFields = types[primaryType];\n    for (const { name, type } of primaryTypeFields) {\n        const primaryTypeValue = message[name];\n        yield recursiveFieldStructImplem(destructTypeFromString(type), primaryTypeValue, name);\n    }\n    // Sending the final signature.\n    const paths = splitPath(path);\n    const signatureBuffer = Buffer.alloc(1 + paths.length * 4);\n    signatureBuffer[0] = paths.length;\n    paths.forEach((element, index) => {\n        signatureBuffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return transport\n        .send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1, fullImplem ? APDU_FIELDS.P2_v0 : APDU_FIELDS.P2_full, signatureBuffer)\n        .then((response) => {\n        const v = response[0];\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return {\n            v,\n            r,\n            s,\n        };\n    });\n});\n/**\n * @ignore for the README\n * Sign a prepared message following web3.eth.signTypedData specification. The host computes the domain separator and hashStruct(message)\n * @example\n eth.signEIP712HashedMessage(\"44'/60'/0'/0/0\", Buffer.from(\"0101010101010101010101010101010101010101010101010101010101010101\").toString(\"hex\"), Buffer.from(\"0202020202020202020202020202020202020202020202020202020202020202\").toString(\"hex\")).then(result => {\n var v = result['v'] - 27;\n v = v.toString(16);\n if (v.length < 2) {\n   v = \"0\" + v;\n }\n console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n })\n */\nexport const signEIP712HashedMessage = (transport, path, domainSeparatorHex, hashStructMessageHex) => {\n    const domainSeparator = hexBuffer(domainSeparatorHex);\n    const hashStruct = hexBuffer(hashStructMessageHex);\n    const paths = splitPath(path);\n    const buffer = Buffer.alloc(1 + paths.length * 4 + 32 + 32, 0);\n    let offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n        buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    domainSeparator.copy(buffer, offset);\n    offset += 32;\n    hashStruct.copy(buffer, offset);\n    return transport.send(0xe0, 0x0c, 0x00, 0x00, buffer).then((response) => {\n        const v = response[0];\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return {\n            v,\n            r,\n            s,\n        };\n    });\n};\nexport { isEIP712Message, getFiltersForMessage } from \"./EIP712.utils\";\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { log } from \"@ledgerhq/logs\";\nimport { decodeTxInfo, hexBuffer, intAsHexBytes, maybeHexBuffer, splitPath, } from \"./utils\";\nimport { domainResolutionFlow } from \"./modules/Domains\";\nimport ledgerService from \"./services/ledger\";\nimport { EthAppNftNotSupported, EthAppPleaseEnableContractData, } from \"./errors\";\nimport { signEIP712HashedMessage, signEIP712Message, isEIP712Message, getFiltersForMessage, } from \"./modules/EIP712\";\nexport { ledgerService, isEIP712Message, getFiltersForMessage };\nexport * from \"./utils\";\nconst starkQuantizationTypeMap = {\n    eth: 1,\n    erc20: 2,\n    erc721: 3,\n    erc20mintable: 4,\n    erc721mintable: 5,\n};\nconst remapTransactionRelatedErrors = (e) => {\n    if (e && e.statusCode === 0x6a80) {\n        return new EthAppPleaseEnableContractData(\"Please enable Blind signing or Contract data in the Ethereum app Settings\");\n    }\n    return e;\n};\n/**\n * Ethereum API\n *\n * @example\n * import Eth from \"@ledgerhq/hw-app-eth\";\n * const eth = new Eth(transport)\n */\nexport default class Eth {\n    setLoadConfig(loadConfig) {\n        this.loadConfig = loadConfig;\n    }\n    constructor(transport, scrambleKey = \"w0w\", loadConfig = {}) {\n        this.transport = transport;\n        this.loadConfig = loadConfig;\n        transport.decorateAppAPIMethods(this, [\n            // \"getChallange\",                  | ⚠️\n            // \"provideERC20TokenInformation\",  | Those methods are not decorated as they're\n            // \"setExternalPlugin\",             | being used inside of the `signTransaction` flow\n            // \"setPlugin\",                     | and shouldn't be locking the transport\n            // \"provideDomainName\",             | ⚠️\n            // \"provideNFTInformation\",         |\n            \"getAddress\",\n            \"signTransaction\",\n            \"signPersonalMessage\",\n            \"getAppConfiguration\",\n            \"signEIP712Message\",\n            \"signEIP712HashedMessage\",\n            \"starkGetPublicKey\",\n            \"starkSignOrder\",\n            \"starkSignOrder_v2\",\n            \"starkSignTransfer\",\n            \"starkSignTransfer_v2\",\n            \"starkProvideQuantum\",\n            \"starkProvideQuantum_v2\",\n            \"starkUnsafeSign\",\n            \"eth2GetPublicKey\",\n            \"eth2SetWithdrawalIndex\",\n            \"getEIP1024PublicEncryptionKey\",\n            \"getEIP1024SharedSecret\",\n        ], scrambleKey);\n    }\n    /**\n     * get Ethereum address for a given BIP 32 path.\n     * @param path a path in BIP 32 format\n     * @option boolDisplay optionally enable or not the display\n     * @option boolChaincode optionally enable or not the chaincode request\n     * @return an object with a publicKey, address and (optionally) chainCode\n     * @example\n     * eth.getAddress(\"44'/60'/0'/0/0\").then(o => o.address)\n     */\n    getAddress(path, boolDisplay, boolChaincode) {\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 + paths.length * 4);\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        return this.transport\n            .send(0xe0, 0x02, boolDisplay ? 0x01 : 0x00, boolChaincode ? 0x01 : 0x00, buffer)\n            .then((response) => {\n            const publicKeyLength = response[0];\n            const addressLength = response[1 + publicKeyLength];\n            return {\n                publicKey: response.slice(1, 1 + publicKeyLength).toString(\"hex\"),\n                address: \"0x\" +\n                    response\n                        .slice(1 + publicKeyLength + 1, 1 + publicKeyLength + 1 + addressLength)\n                        .toString(\"ascii\"),\n                chainCode: boolChaincode\n                    ? response\n                        .slice(1 + publicKeyLength + 1 + addressLength, 1 + publicKeyLength + 1 + addressLength + 32)\n                        .toString(\"hex\")\n                    : undefined,\n            };\n        });\n    }\n    /**\n     * You can sign a transaction and retrieve v, r, s given the raw transaction and the BIP 32 path of the account to sign.\n     *\n     * @param path: the BIP32 path to sign the transaction on\n     * @param rawTxHex: the raw ethereum transaction in hexadecimal to sign\n     * @param resolution: resolution is an object with all \"resolved\" metadata necessary to allow the device to clear sign information. This includes: ERC20 token information, plugins, contracts, NFT signatures,... You must explicitly provide something to avoid having a warning. By default, you can use Ledger's service or your own resolution service. See services/types.js for the contract. Setting the value to \"null\" will fallback everything to blind signing but will still allow the device to sign the transaction.\n     * @example\n     import { ledgerService } from \"@ledgerhq/hw-app-eth\"\n     const tx = \"e8018504e3b292008252089428ee52a8f3d6e5d15f8b131996950d7f296c7952872bd72a2487400080\"; // raw tx to sign\n     const resolution = await ledgerService.resolveTransaction(tx);\n     const result = eth.signTransaction(\"44'/60'/0'/0/0\", tx, resolution);\n     console.log(result);\n     */\n    signTransaction(path, rawTxHex, resolution) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (resolution === undefined) {\n                console.warn(\"hw-app-eth: signTransaction(path, rawTxHex, resolution): \" +\n                    \"please provide the 'resolution' parameter. \" +\n                    \"See https://github.com/LedgerHQ/ledgerjs/blob/master/packages/hw-app-eth/README.md \" +\n                    \"– the previous signature is deprecated and providing the 3rd 'resolution' parameter explicitly will become mandatory so you have the control on the resolution and the fallback mecanism (e.g. fallback to blind signing or not).\" +\n                    \"// Possible solution:\\n\" +\n                    \" + import { ledgerService } from '@ledgerhq/hw-app-eth';\\n\" +\n                    \" + const resolution = await ledgerService.resolveTransaction(rawTxHex);\");\n                resolution = yield ledgerService\n                    .resolveTransaction(rawTxHex, this.loadConfig, {\n                    externalPlugins: true,\n                    erc20: true,\n                })\n                    .catch((e) => {\n                    console.warn(\"an error occurred in resolveTransaction => fallback to blind signing: \" +\n                        String(e));\n                    return null;\n                });\n            }\n            // provide to the device resolved information to make it clear sign the signature\n            if (resolution) {\n                for (const domainDescriptor of resolution.domains) {\n                    yield domainResolutionFlow(this, domainDescriptor).catch((e) => {\n                        // error during the domain flow shouldn't be blocking the signature in case of failure\n                        log(\"error\", \"domainResolutionFlow failed\", {\n                            domainDescriptor,\n                            error: e,\n                        });\n                    });\n                }\n                for (const plugin of resolution.plugin) {\n                    yield this.setPlugin(plugin);\n                }\n                for (const { payload, signature } of resolution.externalPlugin) {\n                    yield this.setExternalPlugin(payload, signature);\n                }\n                for (const nft of resolution.nfts) {\n                    yield this.provideNFTInformation(nft);\n                }\n                for (const data of resolution.erc20Tokens) {\n                    yield this.provideERC20TokenInformation(data);\n                }\n            }\n            const rawTx = Buffer.from(rawTxHex, \"hex\");\n            const { vrsOffset, txType, chainId, chainIdTruncated } = decodeTxInfo(rawTx);\n            const paths = splitPath(path);\n            let response;\n            let offset = 0;\n            while (offset !== rawTx.length) {\n                const first = offset === 0;\n                const maxChunkSize = first ? 150 - 1 - paths.length * 4 : 150;\n                let chunkSize = offset + maxChunkSize > rawTx.length\n                    ? rawTx.length - offset\n                    : maxChunkSize;\n                if (vrsOffset != 0 && offset + chunkSize >= vrsOffset) {\n                    // Make sure that the chunk doesn't end right on the EIP 155 marker if set\n                    chunkSize = rawTx.length - offset;\n                }\n                const buffer = Buffer.alloc(first ? 1 + paths.length * 4 + chunkSize : chunkSize);\n                if (first) {\n                    buffer[0] = paths.length;\n                    paths.forEach((element, index) => {\n                        buffer.writeUInt32BE(element, 1 + 4 * index);\n                    });\n                    rawTx.copy(buffer, 1 + 4 * paths.length, offset, offset + chunkSize);\n                }\n                else {\n                    rawTx.copy(buffer, 0, offset, offset + chunkSize);\n                }\n                response = yield this.transport\n                    .send(0xe0, 0x04, first ? 0x00 : 0x80, 0x00, buffer)\n                    .catch((e) => {\n                    throw remapTransactionRelatedErrors(e);\n                });\n                offset += chunkSize;\n            }\n            const response_byte = response[0];\n            let v = \"\";\n            if (chainId.times(2).plus(35).plus(1).isGreaterThan(255)) {\n                const oneByteChainId = (chainIdTruncated * 2 + 35) % 256;\n                const ecc_parity = Math.abs(response_byte - oneByteChainId);\n                if (txType != null) {\n                    // For EIP2930 and EIP1559 tx, v is simply the parity.\n                    v = ecc_parity % 2 == 1 ? \"00\" : \"01\";\n                }\n                else {\n                    // Legacy type transaction with a big chain ID\n                    v = chainId.times(2).plus(35).plus(ecc_parity).toString(16);\n                }\n            }\n            else {\n                v = response_byte.toString(16);\n            }\n            // Make sure v has is prefixed with a 0 if its length is odd (\"1\" -> \"01\").\n            if (v.length % 2 == 1) {\n                v = \"0\" + v;\n            }\n            const r = response.slice(1, 1 + 32).toString(\"hex\");\n            const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n            return { v, r, s };\n        });\n    }\n    /**\n     * Helper to get resolution and signature of a transaction in a single method\n     *\n     * @param path: the BIP32 path to sign the transaction on\n     * @param rawTxHex: the raw ethereum transaction in hexadecimal to sign\n     * @param resolutionConfig: configuration about what should be clear signed in the transaction\n     * @param throwOnError: optional parameter to determine if a failing resolution of the transaction should throw an error or not\n     * @example\n     const tx = \"e8018504e3b292008252089428ee52a8f3d6e5d15f8b131996950d7f296c7952872bd72a2487400080\"; // raw tx to sign\n     const result = eth.clearSignTransaction(\"44'/60'/0'/0/0\", tx, { erc20: true, externalPlugins: true, nft: true});\n     console.log(result);\n     */\n    clearSignTransaction(path, rawTxHex, resolutionConfig, throwOnError = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const resolution = yield ledgerService\n                .resolveTransaction(rawTxHex, this.loadConfig, resolutionConfig)\n                .catch((e) => {\n                console.warn(\"an error occurred in resolveTransaction => fallback to blind signing: \" +\n                    String(e));\n                if (throwOnError) {\n                    throw e;\n                }\n                return null;\n            });\n            return this.signTransaction(path, rawTxHex, resolution);\n        });\n    }\n    /**\n     */\n    getAppConfiguration() {\n        return this.transport.send(0xe0, 0x06, 0x00, 0x00).then((response) => {\n            return {\n                arbitraryDataEnabled: response[0] & 0x01,\n                erc20ProvisioningNecessary: response[0] & 0x02,\n                starkEnabled: response[0] & 0x04,\n                starkv2Supported: response[0] & 0x08,\n                version: \"\" + response[1] + \".\" + response[2] + \".\" + response[3],\n            };\n        });\n    }\n    /**\n    * You can sign a message according to eth_sign RPC call and retrieve v, r, s given the message and the BIP 32 path of the account to sign.\n    * @example\n    eth.signPersonalMessage(\"44'/60'/0'/0/0\", Buffer.from(\"test\").toString(\"hex\")).then(result => {\n    var v = result['v'] - 27;\n    v = v.toString(16);\n    if (v.length < 2) {\n      v = \"0\" + v;\n    }\n    console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n    })\n     */\n    signPersonalMessage(path, messageHex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const paths = splitPath(path);\n            let offset = 0;\n            const message = Buffer.from(messageHex, \"hex\");\n            let response;\n            while (offset !== message.length) {\n                const maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 - 4 : 150;\n                const chunkSize = offset + maxChunkSize > message.length\n                    ? message.length - offset\n                    : maxChunkSize;\n                const buffer = Buffer.alloc(offset === 0 ? 1 + paths.length * 4 + 4 + chunkSize : chunkSize);\n                if (offset === 0) {\n                    buffer[0] = paths.length;\n                    paths.forEach((element, index) => {\n                        buffer.writeUInt32BE(element, 1 + 4 * index);\n                    });\n                    buffer.writeUInt32BE(message.length, 1 + 4 * paths.length);\n                    message.copy(buffer, 1 + 4 * paths.length + 4, offset, offset + chunkSize);\n                }\n                else {\n                    message.copy(buffer, 0, offset, offset + chunkSize);\n                }\n                response = yield this.transport.send(0xe0, 0x08, offset === 0 ? 0x00 : 0x80, 0x00, buffer);\n                offset += chunkSize;\n            }\n            const v = response[0];\n            const r = response.slice(1, 1 + 32).toString(\"hex\");\n            const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n            return { v, r, s };\n        });\n    }\n    /**\n    * Sign a prepared message following web3.eth.signTypedData specification. The host computes the domain separator and hashStruct(message)\n    * @example\n    eth.signEIP712HashedMessage(\"44'/60'/0'/0/0\", Buffer.from(\"0101010101010101010101010101010101010101010101010101010101010101\").toString(\"hex\"), Buffer.from(\"0202020202020202020202020202020202020202020202020202020202020202\").toString(\"hex\")).then(result => {\n    var v = result['v'] - 27;\n    v = v.toString(16);\n    if (v.length < 2) {\n      v = \"0\" + v;\n    }\n    console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n    })\n     */\n    signEIP712HashedMessage(path, domainSeparatorHex, hashStructMessageHex) {\n        return signEIP712HashedMessage(this.transport, path, domainSeparatorHex, hashStructMessageHex);\n    }\n    /**\n     * Sign an EIP-721 formatted message following the specification here:\n     * https://github.com/LedgerHQ/app-ethereum/blob/develop/doc/ethapp.asc#sign-eth-eip-712\n     * ⚠️ This method is not compatible with nano S (LNS). Make sure to use a try/catch to fallback on the signEIP712HashedMessage method ⚠️\n     @example\n     eth.signEIP721Message(\"44'/60'/0'/0/0\", {\n        domain: {\n          chainId: 69,\n          name: \"Da Domain\",\n          verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n          version: \"1\"\n        },\n        types: {\n          \"EIP712Domain\": [\n                { name: \"name\", type: \"string\" },\n                { name: \"version\", type: \"string\" },\n                { name: \"chainId\", type: \"uint256\" },\n                { name: \"verifyingContract\", type: \"address\" }\n            ],\n          \"Test\": [\n            { name: \"contents\", type: \"string\" }\n          ]\n        },\n        primaryType: \"Test\",\n        message: {contents: \"Hello, Bob!\"},\n      })\n     *\n     * @param {String} path derivationPath\n     * @param {Object} jsonMessage message to sign\n     * @param {Boolean} fullImplem use the legacy implementation\n     * @returns {Promise}\n     */\n    signEIP712Message(path, jsonMessage, fullImplem = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return signEIP712Message(this.transport, path, jsonMessage, fullImplem, this.loadConfig);\n        });\n    }\n    /**\n     * Method returning a 4 bytes TLV challenge as an hexa string\n     *\n     * @returns {Promise<string>}\n     */\n    getChallenge() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let APDU_FIELDS;\n            (function (APDU_FIELDS) {\n                APDU_FIELDS[APDU_FIELDS[\"CLA\"] = 224] = \"CLA\";\n                APDU_FIELDS[APDU_FIELDS[\"INS\"] = 32] = \"INS\";\n                APDU_FIELDS[APDU_FIELDS[\"P1\"] = 0] = \"P1\";\n                APDU_FIELDS[APDU_FIELDS[\"P2\"] = 0] = \"P2\";\n                APDU_FIELDS[APDU_FIELDS[\"LC\"] = 0] = \"LC\";\n            })(APDU_FIELDS || (APDU_FIELDS = {}));\n            return this.transport\n                .send(APDU_FIELDS.CLA, APDU_FIELDS.INS, APDU_FIELDS.P1, APDU_FIELDS.P2)\n                .then((res) => {\n                const [, fourBytesChallenge, statusCode] = new RegExp(\"(.*)(.{4}$)\").exec(res.toString(\"hex\")) || [];\n                if (statusCode !== \"9000\") {\n                    throw new Error(`An error happened while generating the challenge. Status code: ${statusCode}`);\n                }\n                return `0x${fourBytesChallenge}`;\n            })\n                .catch((e) => {\n                log(\"error\", \"couldn't request a challenge\", e);\n                throw e;\n            });\n        });\n    }\n    /**\n     * get Stark public key for a given BIP 32 path.\n     * @param path a path in BIP 32 format\n     * @option boolDisplay optionally enable or not the display\n     * @return the Stark public key\n     */\n    starkGetPublicKey(path, boolDisplay) {\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 + paths.length * 4);\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        return this.transport\n            .send(0xf0, 0x02, boolDisplay ? 0x01 : 0x00, 0x00, buffer)\n            .then((response) => {\n            return response.slice(0, response.length - 2);\n        });\n    }\n    /**\n     * sign a Stark order\n     * @param path a path in BIP 32 format\n     * @option sourceTokenAddress contract address of the source token (not present for ETH)\n     * @param sourceQuantization quantization used for the source token\n     * @option destinationTokenAddress contract address of the destination token (not present for ETH)\n     * @param destinationQuantization quantization used for the destination token\n     * @param sourceVault ID of the source vault\n     * @param destinationVault ID of the destination vault\n     * @param amountSell amount to sell\n     * @param amountBuy amount to buy\n     * @param nonce transaction nonce\n     * @param timestamp transaction validity timestamp\n     * @return the signature\n     */\n    starkSignOrder(path, sourceTokenAddress, sourceQuantization, destinationTokenAddress, destinationQuantization, sourceVault, destinationVault, amountSell, amountBuy, nonce, timestamp) {\n        const sourceTokenAddressHex = maybeHexBuffer(sourceTokenAddress);\n        const destinationTokenAddressHex = maybeHexBuffer(destinationTokenAddress);\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 + paths.length * 4 + 20 + 32 + 20 + 32 + 4 + 4 + 8 + 8 + 4 + 4, 0);\n        let offset = 0;\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        offset = 1 + 4 * paths.length;\n        if (sourceTokenAddressHex) {\n            sourceTokenAddressHex.copy(buffer, offset);\n        }\n        offset += 20;\n        Buffer.from(sourceQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 32;\n        if (destinationTokenAddressHex) {\n            destinationTokenAddressHex.copy(buffer, offset);\n        }\n        offset += 20;\n        Buffer.from(destinationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 32;\n        buffer.writeUInt32BE(sourceVault, offset);\n        offset += 4;\n        buffer.writeUInt32BE(destinationVault, offset);\n        offset += 4;\n        Buffer.from(amountSell.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 8;\n        Buffer.from(amountBuy.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 8;\n        buffer.writeUInt32BE(nonce, offset);\n        offset += 4;\n        buffer.writeUInt32BE(timestamp, offset);\n        return this.transport\n            .send(0xf0, 0x04, 0x01, 0x00, buffer)\n            .then((response) => {\n            const r = response.slice(1, 1 + 32).toString(\"hex\");\n            const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n            return {\n                r,\n                s,\n            };\n        });\n    }\n    /**\n     * sign a Stark order using the Starkex V2 protocol\n     * @param path a path in BIP 32 format\n     * @option sourceTokenAddress contract address of the source token (not present for ETH)\n     * @param sourceQuantizationType quantization type used for the source token\n     * @option sourceQuantization quantization used for the source token (not present for erc 721 or mintable erc 721)\n     * @option sourceMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) associated to the source token\n     * @option destinationTokenAddress contract address of the destination token (not present for ETH)\n     * @param destinationQuantizationType quantization type used for the destination token\n     * @option destinationQuantization quantization used for the destination token (not present for erc 721 or mintable erc 721)\n     * @option destinationMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) associated to the destination token\n     * @param sourceVault ID of the source vault\n     * @param destinationVault ID of the destination vault\n     * @param amountSell amount to sell\n     * @param amountBuy amount to buy\n     * @param nonce transaction nonce\n     * @param timestamp transaction validity timestamp\n     * @return the signature\n     */\n    starkSignOrder_v2(path, sourceTokenAddress, sourceQuantizationType, sourceQuantization, sourceMintableBlobOrTokenId, destinationTokenAddress, destinationQuantizationType, destinationQuantization, destinationMintableBlobOrTokenId, sourceVault, destinationVault, amountSell, amountBuy, nonce, timestamp) {\n        const sourceTokenAddressHex = maybeHexBuffer(sourceTokenAddress);\n        const destinationTokenAddressHex = maybeHexBuffer(destinationTokenAddress);\n        if (!(sourceQuantizationType in starkQuantizationTypeMap)) {\n            throw new Error(\"eth.starkSignOrderv2 invalid source quantization type=\" +\n                sourceQuantizationType);\n        }\n        if (!(destinationQuantizationType in starkQuantizationTypeMap)) {\n            throw new Error(\"eth.starkSignOrderv2 invalid destination quantization type=\" +\n                destinationQuantizationType);\n        }\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 +\n            paths.length * 4 +\n            1 +\n            20 +\n            32 +\n            32 +\n            1 +\n            20 +\n            32 +\n            32 +\n            4 +\n            4 +\n            8 +\n            8 +\n            4 +\n            4, 0);\n        let offset = 0;\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        offset = 1 + 4 * paths.length;\n        buffer[offset] = starkQuantizationTypeMap[sourceQuantizationType];\n        offset++;\n        if (sourceTokenAddressHex) {\n            sourceTokenAddressHex.copy(buffer, offset);\n        }\n        offset += 20;\n        if (sourceQuantization) {\n            Buffer.from(sourceQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        offset += 32;\n        if (sourceMintableBlobOrTokenId) {\n            Buffer.from(sourceMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        offset += 32;\n        buffer[offset] = starkQuantizationTypeMap[destinationQuantizationType];\n        offset++;\n        if (destinationTokenAddressHex) {\n            destinationTokenAddressHex.copy(buffer, offset);\n        }\n        offset += 20;\n        if (destinationQuantization) {\n            Buffer.from(destinationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        offset += 32;\n        if (destinationMintableBlobOrTokenId) {\n            Buffer.from(destinationMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        offset += 32;\n        buffer.writeUInt32BE(sourceVault, offset);\n        offset += 4;\n        buffer.writeUInt32BE(destinationVault, offset);\n        offset += 4;\n        Buffer.from(amountSell.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 8;\n        Buffer.from(amountBuy.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 8;\n        buffer.writeUInt32BE(nonce, offset);\n        offset += 4;\n        buffer.writeUInt32BE(timestamp, offset);\n        return this.transport\n            .send(0xf0, 0x04, 0x03, 0x00, buffer)\n            .then((response) => {\n            const r = response.slice(1, 1 + 32).toString(\"hex\");\n            const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n            return {\n                r,\n                s,\n            };\n        });\n    }\n    /**\n     * sign a Stark transfer\n     * @param path a path in BIP 32 format\n     * @option transferTokenAddress contract address of the token to be transferred (not present for ETH)\n     * @param transferQuantization quantization used for the token to be transferred\n     * @param targetPublicKey target Stark public key\n     * @param sourceVault ID of the source vault\n     * @param destinationVault ID of the destination vault\n     * @param amountTransfer amount to transfer\n     * @param nonce transaction nonce\n     * @param timestamp transaction validity timestamp\n     * @return the signature\n     */\n    starkSignTransfer(path, transferTokenAddress, transferQuantization, targetPublicKey, sourceVault, destinationVault, amountTransfer, nonce, timestamp) {\n        const transferTokenAddressHex = maybeHexBuffer(transferTokenAddress);\n        const targetPublicKeyHex = hexBuffer(targetPublicKey);\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 + paths.length * 4 + 20 + 32 + 32 + 4 + 4 + 8 + 4 + 4, 0);\n        let offset = 0;\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        offset = 1 + 4 * paths.length;\n        if (transferTokenAddressHex) {\n            transferTokenAddressHex.copy(buffer, offset);\n        }\n        offset += 20;\n        Buffer.from(transferQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 32;\n        targetPublicKeyHex.copy(buffer, offset);\n        offset += 32;\n        buffer.writeUInt32BE(sourceVault, offset);\n        offset += 4;\n        buffer.writeUInt32BE(destinationVault, offset);\n        offset += 4;\n        Buffer.from(amountTransfer.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 8;\n        buffer.writeUInt32BE(nonce, offset);\n        offset += 4;\n        buffer.writeUInt32BE(timestamp, offset);\n        return this.transport\n            .send(0xf0, 0x04, 0x02, 0x00, buffer)\n            .then((response) => {\n            const r = response.slice(1, 1 + 32).toString(\"hex\");\n            const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n            return {\n                r,\n                s,\n            };\n        });\n    }\n    /**\n     * sign a Stark transfer or conditional transfer using the Starkex V2 protocol\n     * @param path a path in BIP 32 format\n     * @option transferTokenAddress contract address of the token to be transferred (not present for ETH)\n     * @param transferQuantizationType quantization type used for the token to be transferred\n     * @option transferQuantization quantization used for the token to be transferred (not present for erc 721 or mintable erc 721)\n     * @option transferMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) associated to the token to be transferred\n     * @param targetPublicKey target Stark public key\n     * @param sourceVault ID of the source vault\n     * @param destinationVault ID of the destination vault\n     * @param amountTransfer amount to transfer\n     * @param nonce transaction nonce\n     * @param timestamp transaction validity timestamp\n     * @option conditionalTransferAddress onchain address of the condition for a conditional transfer\n     * @option conditionalTransferFact fact associated to the condition for a conditional transfer\n     * @return the signature\n     */\n    starkSignTransfer_v2(path, transferTokenAddress, transferQuantizationType, transferQuantization, transferMintableBlobOrTokenId, targetPublicKey, sourceVault, destinationVault, amountTransfer, nonce, timestamp, conditionalTransferAddress, conditionalTransferFact) {\n        const transferTokenAddressHex = maybeHexBuffer(transferTokenAddress);\n        const targetPublicKeyHex = hexBuffer(targetPublicKey);\n        const conditionalTransferAddressHex = maybeHexBuffer(conditionalTransferAddress);\n        if (!(transferQuantizationType in starkQuantizationTypeMap)) {\n            throw new Error(\"eth.starkSignTransferv2 invalid quantization type=\" +\n                transferQuantizationType);\n        }\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 +\n            paths.length * 4 +\n            1 +\n            20 +\n            32 +\n            32 +\n            32 +\n            4 +\n            4 +\n            8 +\n            4 +\n            4 +\n            (conditionalTransferAddressHex ? 32 + 20 : 0), 0);\n        let offset = 0;\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        offset = 1 + 4 * paths.length;\n        buffer[offset] = starkQuantizationTypeMap[transferQuantizationType];\n        offset++;\n        if (transferTokenAddressHex) {\n            transferTokenAddressHex.copy(buffer, offset);\n        }\n        offset += 20;\n        if (transferQuantization) {\n            Buffer.from(transferQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        offset += 32;\n        if (transferMintableBlobOrTokenId) {\n            Buffer.from(transferMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        offset += 32;\n        targetPublicKeyHex.copy(buffer, offset);\n        offset += 32;\n        buffer.writeUInt32BE(sourceVault, offset);\n        offset += 4;\n        buffer.writeUInt32BE(destinationVault, offset);\n        offset += 4;\n        Buffer.from(amountTransfer.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n        offset += 8;\n        buffer.writeUInt32BE(nonce, offset);\n        offset += 4;\n        buffer.writeUInt32BE(timestamp, offset);\n        if (conditionalTransferAddressHex && conditionalTransferFact) {\n            offset += 4;\n            Buffer.from(conditionalTransferFact.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n            offset += 32;\n            conditionalTransferAddressHex.copy(buffer, offset);\n        }\n        return this.transport\n            .send(0xf0, 0x04, conditionalTransferAddressHex ? 0x05 : 0x04, 0x00, buffer)\n            .then((response) => {\n            const r = response.slice(1, 1 + 32).toString(\"hex\");\n            const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n            return {\n                r,\n                s,\n            };\n        });\n    }\n    /**\n     * provide quantization information before singing a deposit or withdrawal Stark powered contract call\n     *\n     * It shall be run following a provideERC20TokenInformation call for the given contract\n     *\n     * @param operationContract contract address of the token to be transferred (not present for ETH)\n     * @param operationQuantization quantization used for the token to be transferred\n     */\n    starkProvideQuantum(operationContract, operationQuantization) {\n        const operationContractHex = maybeHexBuffer(operationContract);\n        const buffer = Buffer.alloc(20 + 32, 0);\n        if (operationContractHex) {\n            operationContractHex.copy(buffer, 0);\n        }\n        Buffer.from(operationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, 20);\n        return this.transport.send(0xf0, 0x08, 0x00, 0x00, buffer).then(() => true, (e) => {\n            if (e && e.statusCode === 0x6d00) {\n                // this case happen for ETH application versions not supporting Stark extensions\n                return false;\n            }\n            throw e;\n        });\n    }\n    /**\n     * provide quantization information before singing a deposit or withdrawal Stark powered contract call using the Starkex V2 protocol\n     *\n     * It shall be run following a provideERC20TokenInformation call for the given contract\n     *\n     * @param operationContract contract address of the token to be transferred (not present for ETH)\n     * @param operationQuantizationType quantization type of the token to be transferred\n     * @option operationQuantization quantization used for the token to be transferred (not present for erc 721 or mintable erc 721)\n     * @option operationMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) of the token to be transferred\n     */\n    starkProvideQuantum_v2(operationContract, operationQuantizationType, operationQuantization, operationMintableBlobOrTokenId) {\n        const operationContractHex = maybeHexBuffer(operationContract);\n        if (!(operationQuantizationType in starkQuantizationTypeMap)) {\n            throw new Error(\"eth.starkProvideQuantumV2 invalid quantization type=\" +\n                operationQuantizationType);\n        }\n        const buffer = Buffer.alloc(20 + 32 + 32, 0);\n        let offset = 0;\n        if (operationContractHex) {\n            operationContractHex.copy(buffer, offset);\n        }\n        offset += 20;\n        if (operationQuantization) {\n            Buffer.from(operationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        offset += 32;\n        if (operationMintableBlobOrTokenId) {\n            Buffer.from(operationMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n        }\n        return this.transport\n            .send(0xf0, 0x08, starkQuantizationTypeMap[operationQuantizationType], 0x00, buffer)\n            .then(() => true, (e) => {\n            if (e && e.statusCode === 0x6d00) {\n                // this case happen for ETH application versions not supporting Stark extensions\n                return false;\n            }\n            throw e;\n        });\n    }\n    /**\n     * sign the given hash over the Stark curve\n     * It is intended for speed of execution in case an unknown Stark model is pushed and should be avoided as much as possible.\n     * @param path a path in BIP 32 format\n     * @param hash hexadecimal hash to sign\n     * @return the signature\n     */\n    starkUnsafeSign(path, hash) {\n        const hashHex = hexBuffer(hash);\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 + paths.length * 4 + 32);\n        let offset = 0;\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        offset = 1 + 4 * paths.length;\n        hashHex.copy(buffer, offset);\n        return this.transport\n            .send(0xf0, 0x0a, 0x00, 0x00, buffer)\n            .then((response) => {\n            const r = response.slice(1, 1 + 32).toString(\"hex\");\n            const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n            return {\n                r,\n                s,\n            };\n        });\n    }\n    /**\n     * get an Ethereum 2 BLS-12 381 public key for a given BIP 32 path.\n     * @param path a path in BIP 32 format\n     * @option boolDisplay optionally enable or not the display\n     * @return an object with a publicKey\n     * @example\n     * eth.eth2GetPublicKey(\"12381/3600/0/0\").then(o => o.publicKey)\n     */\n    eth2GetPublicKey(path, boolDisplay) {\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 + paths.length * 4);\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        return this.transport\n            .send(0xe0, 0x0e, boolDisplay ? 0x01 : 0x00, 0x00, buffer)\n            .then((response) => {\n            return {\n                publicKey: response.slice(0, -2).toString(\"hex\"),\n            };\n        });\n    }\n    /**\n     * Set the index of a Withdrawal key used as withdrawal credentials in an ETH 2 deposit contract call signature\n     *\n     * It shall be run before the ETH 2 deposit transaction is signed. If not called, the index is set to 0\n     *\n     * @param withdrawalIndex index path in the EIP 2334 path m/12381/3600/withdrawalIndex/0\n     * @return True if the method was executed successfully\n     */\n    eth2SetWithdrawalIndex(withdrawalIndex) {\n        const buffer = Buffer.alloc(4, 0);\n        buffer.writeUInt32BE(withdrawalIndex, 0);\n        return this.transport.send(0xe0, 0x10, 0x00, 0x00, buffer).then(() => true, (e) => {\n            if (e && e.statusCode === 0x6d00) {\n                // this case happen for ETH application versions not supporting ETH 2\n                return false;\n            }\n            throw e;\n        });\n    }\n    /**\n     * get a public encryption key on Curve25519 according to EIP 1024\n     * @param path a path in BIP 32 format\n     * @option boolDisplay optionally enable or not the display\n     * @return an object with a publicKey\n     * @example\n     * eth.getEIP1024PublicEncryptionKey(\"44'/60'/0'/0/0\").then(o => o.publicKey)\n     */\n    getEIP1024PublicEncryptionKey(path, boolDisplay) {\n        const paths = splitPath(path);\n        const buffer = Buffer.alloc(1 + paths.length * 4);\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        return this.transport\n            .send(0xe0, 0x18, boolDisplay ? 0x01 : 0x00, 0x00, buffer)\n            .then((response) => {\n            return {\n                publicKey: response.slice(0, -2).toString(\"hex\"),\n            };\n        });\n    }\n    /**\n     * get a shared secret on Curve25519 according to EIP 1024\n     * @param path a path in BIP 32 format\n     * @param remotePublicKeyHex remote Curve25519 public key\n     * @option boolDisplay optionally enable or not the display\n     * @return an object with a shared secret\n     * @example\n     * eth.getEIP1024SharedSecret(\"44'/60'/0'/0/0\", \"87020e80af6e07a6e4697f091eacadb9e7e6629cb7e5a8a371689a3ed53b3d64\").then(o => o.sharedSecret)\n     */\n    getEIP1024SharedSecret(path, remotePublicKeyHex, boolDisplay) {\n        const paths = splitPath(path);\n        const remotePublicKey = hexBuffer(remotePublicKeyHex);\n        const buffer = Buffer.alloc(1 + paths.length * 4 + 32);\n        let offset = 0;\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n            buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        offset = 1 + 4 * paths.length;\n        remotePublicKey.copy(buffer, offset);\n        return this.transport\n            .send(0xe0, 0x18, boolDisplay ? 0x01 : 0x00, 0x01, buffer)\n            .then((response) => {\n            return {\n                sharedSecret: response.slice(0, -2).toString(\"hex\"),\n            };\n        });\n    }\n    /**\n     * provides a trusted description of an ERC 20 token to associate a contract address with a ticker and number of decimals.\n     *\n     * @param data stringified buffer of ERC20 signature\n     * @returns a boolean\n     */\n    provideERC20TokenInformation(data) {\n        const buffer = Buffer.from(data, \"hex\");\n        return this.transport.send(0xe0, 0x0a, 0x00, 0x00, buffer).then(() => true, (e) => {\n            if (e && e.statusCode === 0x6d00) {\n                // this case happen for older version of ETH app, since older app version had the ERC20 data hardcoded, it's fine to assume it worked.\n                // we return a flag to know if the call was effective or not\n                return false;\n            }\n            throw e;\n        });\n    }\n    /**\n     * provides the name of a trusted binding of a plugin with a contract address and a supported method selector. This plugin will be called to interpret contract data in the following transaction signing command.\n     *\n     * @param payload external plugin data\n     * @param signature signature for the plugin\n     * @returns a boolean\n     */\n    setExternalPlugin(payload, signature) {\n        const payloadBuffer = Buffer.from(payload, \"hex\");\n        const signatureBuffer = Buffer.from(signature, \"hex\");\n        const buffer = Buffer.concat([payloadBuffer, signatureBuffer]);\n        return this.transport.send(0xe0, 0x12, 0x00, 0x00, buffer).then(() => true, (e) => {\n            if (e && e.statusCode === 0x6a80) {\n                // this case happen when the plugin name is too short or too long\n                return false;\n            }\n            else if (e && e.statusCode === 0x6984) {\n                // this case happen when the plugin requested is not installed on the device\n                return false;\n            }\n            else if (e && e.statusCode === 0x6d00) {\n                // this case happen for older version of ETH app\n                return false;\n            }\n            throw e;\n        });\n    }\n    /**\n     * provides the name of a trusted binding of a plugin with a contract address and a supported method selector. This plugin will be called to interpret contract data in the following transaction signing command.\n     *\n     * @param data stringified buffer of plugin signature\n     * @returns a boolean\n     */\n    setPlugin(data) {\n        const buffer = Buffer.from(data, \"hex\");\n        return this.transport.send(0xe0, 0x16, 0x00, 0x00, buffer).then(() => true, (e) => {\n            if (e && e.statusCode === 0x6a80) {\n                // this case happen when the plugin name is too short or too long\n                return false;\n            }\n            else if (e && e.statusCode === 0x6984) {\n                // this case happen when the plugin requested is not installed on the device\n                return false;\n            }\n            else if (e && e.statusCode === 0x6d00) {\n                // this case happen for older version of ETH app\n                return false;\n            }\n            throw e;\n        });\n    }\n    /**\n     *  provides a trusted description of an NFT to associate a contract address with a collectionName.\n     *\n     * @param data stringified buffer of the NFT description\n     * @returns a boolean\n     */\n    provideNFTInformation(data) {\n        const buffer = Buffer.from(data, \"hex\");\n        return this.transport.send(0xe0, 0x14, 0x00, 0x00, buffer).then(() => true, (e) => {\n            if (e && e.statusCode === 0x6d00) {\n                // older version of ETH app => error because we don't allow blind sign when NFT is explicitly requested to be resolved.\n                throw new EthAppNftNotSupported();\n            }\n            throw e;\n        });\n    }\n    /**\n     * provides a domain name (like ENS) to be displayed during transactions in place of the address it is associated to. It shall be run just before a transaction involving the associated address that would be displayed on the device.\n     *\n     * @param data an stringied buffer of some TLV encoded data to represent the domain\n     * @returns a boolean\n     */\n    provideDomainName(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let APDU_FIELDS;\n            (function (APDU_FIELDS) {\n                APDU_FIELDS[APDU_FIELDS[\"CLA\"] = 224] = \"CLA\";\n                APDU_FIELDS[APDU_FIELDS[\"INS\"] = 34] = \"INS\";\n                APDU_FIELDS[APDU_FIELDS[\"P1_FIRST_CHUNK\"] = 1] = \"P1_FIRST_CHUNK\";\n                APDU_FIELDS[APDU_FIELDS[\"P1_FOLLOWING_CHUNK\"] = 0] = \"P1_FOLLOWING_CHUNK\";\n                APDU_FIELDS[APDU_FIELDS[\"P2\"] = 0] = \"P2\";\n            })(APDU_FIELDS || (APDU_FIELDS = {}));\n            const buffer = Buffer.from(data, \"hex\");\n            const payload = Buffer.concat([\n                Buffer.from(intAsHexBytes(buffer.length, 2), \"hex\"),\n                buffer,\n            ]);\n            const bufferChunks = new Array(Math.ceil(payload.length / 256))\n                .fill(null)\n                .map((_, i) => payload.slice(i * 255, (i + 1) * 255));\n            for (const chunk of bufferChunks) {\n                const isFirstChunk = chunk === bufferChunks[0];\n                yield this.transport.send(APDU_FIELDS.CLA, APDU_FIELDS.INS, isFirstChunk\n                    ? APDU_FIELDS.P1_FIRST_CHUNK\n                    : APDU_FIELDS.P1_FOLLOWING_CHUNK, APDU_FIELDS.P2, chunk);\n            }\n            return true;\n        });\n    }\n}\n//# sourceMappingURL=Eth.js.map",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));"],"names":["splitPath","path","result","split","forEach","element","number","parseInt","isNaN","length","push","hexBuffer","str","Buffer","from","startsWith","slice","maybeHexBuffer","decodeTxInfo","rawTx","txType","includes","rlpData","rlpTx","decode","map","hex","chainIdTruncated","rlpDecoded","decodedTx","data","to","chainId","chainIdSrc","toString","chainIdTruncatedBuf","alloc","copy","readUInt32BE","vrsOffset","rlpVrs","encode","intAsHexBytes","int","bytes","padStart","ERC20_CLEAR_SIGNED_SELECTORS","ERC721_CLEAR_SIGNED_SELECTORS","ERC1155_CLEAR_SIGNED_SELECTORS","tokenSelectors","Object","values","nftSelectors","mergeResolutions","resolutionsArray","mergedResolutions","nfts","erc20Tokens","externalPlugin","plugin","domains","resolutions","key","bind","fn","thisArg","apply","arguments","prototype","getPrototypeOf","kindOf","cache","create","thing","call","toLowerCase","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","obj","allOwnKeys","i","l","keys","getOwnPropertyNames","len","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","hasOwnProperty","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","isBuffer","constructor","isFormData","kind","FormData","append","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","this","assignValue","targetKey","extend","a","b","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","defineProperty","value","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","toCamelCase","m","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isThenable","then","catch","AxiosError","message","code","config","request","response","captureStackTrace","utils","toJSON","description","fileName","lineNumber","columnNumber","status","error","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","concat","token","join","predicates","test","formData","options","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","JSON","stringify","some","isFlatArray","el","index","exposedHelpers","build","pop","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","isStandardBrowserEnv","product","navigator","document","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","protocols","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","DEFAULT_CONTENT_TYPE","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","helpers","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","e","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","get","tokens","tokensRE","parseTokens","has","matcher","delete","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","static","first","computed","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","accessor","transformData","fns","isCancel","__CANCEL__","CanceledError","write","expires","domain","secure","cookie","Date","toGMTString","read","RegExp","decodeURIComponent","remove","now","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","samplesCount","min","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","knownAdapters","http","xhr","XMLHttpRequest","Promise","resolve","reject","requestData","requestHeaders","onCanceled","cancelToken","unsubscribe","signal","removeEventListener","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","floor","settle","err","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","isURLSameOrigin","cookies","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","parseProtocol","send","adapters","nameOrAdapter","throwIfCancellationRequested","throwIfRequested","dispatchRequest","reason","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","console","warn","assertOptions","schema","allowUnknown","Axios","instanceConfig","interceptors","configOrUrl","contextHeaders","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","default","__awaiter","_arguments","P","generator","step","REGISTRIES","resolvers","forward","reverse","signatures","patterns","coinTypes","getRegistries","defaultLoadConfig","nftExplorerBaseURL","pluginBaseURL","extraPlugins","cryptoassetsBaseURL","getLoadConfig","userLoadConfig","asContractAddress","addr","erc20SignaturesBlob","buf","item","j","tickerLength","readUInt8","ticker","contractAddress","decimals","entry","signature","list","byContractAndChainId","signatureBlob","api","getAdditionalDataForContract","loadConfig","shouldResolve","resolution","nft","nftInfo","_a","r","collectionNameLength","collectionName","substr","reduce","acc","curr","fromCharCode","getNFTInfo","erc20Info","contract","_b","byContractAddressAndChainId","loadNanoAppPlugins","selector","nftPluginPayload","loadNftPlugin","externalPlugins","contractMethodInfos","lcSelector","lcContractAddress","contractSelectors","erc20OfInterest","abi","loadInfosForContractMethod","args","parseTransaction","erc20ContractAddress","seg","externalPluginResolution","resolveTransaction","rawTxHex","resolutionConfig","erc20","pluginsResolution","contractResolution","domainResolutions","signDomainResolution","registryName","challenge","lengthIsValid","containsOnlyValidChars","validateDomain","registry","find","signAddressResolution","address","domainResolutionFlow","appBinding","domainDescriptor","getChallenge","domainAPDU","ledger","provideDomainName","EthAppPleaseEnableContractData","EthAppNftNotSupported","EIP712_ARRAY_TYPE_VALUE","EIP712_TYPE_PROPERTIES","CUSTOM","sizeInBits","INT","UINT","ADDRESS","BOOL","STRING","BYTES","EIP712_TYPE_ENCODERS","failSafeValue","valueAsBN","lt","sizeInBytes","plus","paddedHexString","destructTypeFromString","typeName","splitNameAndArraysRegex","splitArraysRegex","splitNameAndNumberRegex","maybeArrays","bits","makeTypeEntryStructBuffer","_c","_d","typeDescription","arrSizes","isTypeAnArray","Boolean","typeProperties","typeKey","typeSizeInBits","typeDescData","typeSize","typeValue","isArrayBit","hasTypeSize","typeValueBits","constructTypeDescByteString","bufferArray","FIXED","DYNAMIC","isEIP712Message","sortObjectAlphabetically","sort","field","getFiltersForMessage","remoteCryptoAssetsListURI","schemaHash","types","sortedTypes","getSchemaHashForMessage","messageId","verifyingContract","dynamicCAL","sendStructDef","structDef","APDU_FIELDS","structType","CLA","INS","P1_complete","P2_name","P2_field","sendStructImplem","structImplem","P2_root","P2_array","rawData","encodedData","dataLengthPer16Bits","dataLengthModulo16Bits","bufferSlices","ceil","fill","_","bufferSlice","P1_partial","sendFilteringInfo","P1","P2_activate","displayName","filtersCount","sig","displayNameLengthBuffer","displayNameBuffer","filtersCountBuffer","sigLengthBuffer","sigBuffer","callData","P2_contract_name","P2_show_field","signEIP712Message","jsonMessage","fullImplem","primaryType","unsortedTypes","filters","typeEntries","typeEntryBuffer","recursiveFieldStructImplem","typesMap","destructedType","currSize","restSizes","isCustomType","fieldName","fieldValue","fieldType","fields","f","label","makeRecursiveFieldStructImplem","domainName","domainTypeFields","domainFieldValue","contractName","contractNameInfos","primaryTypeFields","primaryTypeValue","paths","signatureBuffer","writeUInt32BE","P2_v0","P2_full","v","s","starkQuantizationTypeMap","eth","erc721","erc20mintable","erc721mintable","remapTransactionRelatedErrors","statusCode","Eth","setLoadConfig","scrambleKey","decorateAppAPIMethods","getAddress","boolDisplay","boolChaincode","publicKeyLength","addressLength","publicKey","chainCode","signTransaction","setPlugin","setExternalPlugin","provideNFTInformation","provideERC20TokenInformation","offset","maxChunkSize","chunkSize","response_byte","times","isGreaterThan","oneByteChainId","ecc_parity","abs","clearSignTransaction","throwOnError","getAppConfiguration","arbitraryDataEnabled","erc20ProvisioningNecessary","starkEnabled","starkv2Supported","signPersonalMessage","messageHex","signEIP712HashedMessage","domainSeparatorHex","hashStructMessageHex","domainSeparator","hashStruct","P2","res","fourBytesChallenge","starkGetPublicKey","starkSignOrder","sourceTokenAddress","sourceQuantization","destinationTokenAddress","destinationQuantization","sourceVault","destinationVault","amountSell","amountBuy","nonce","timestamp","sourceTokenAddressHex","destinationTokenAddressHex","starkSignOrder_v2","sourceQuantizationType","sourceMintableBlobOrTokenId","destinationQuantizationType","destinationMintableBlobOrTokenId","starkSignTransfer","transferTokenAddress","transferQuantization","targetPublicKey","amountTransfer","transferTokenAddressHex","targetPublicKeyHex","starkSignTransfer_v2","transferQuantizationType","transferMintableBlobOrTokenId","conditionalTransferAddress","conditionalTransferFact","conditionalTransferAddressHex","starkProvideQuantum","operationContract","operationQuantization","operationContractHex","starkProvideQuantum_v2","operationQuantizationType","operationMintableBlobOrTokenId","starkUnsafeSign","hashHex","eth2GetPublicKey","eth2SetWithdrawalIndex","withdrawalIndex","getEIP1024PublicEncryptionKey","getEIP1024SharedSecret","remotePublicKeyHex","remotePublicKey","sharedSecret","payloadBuffer","bufferChunks","chunk","isFirstChunk","P1_FIRST_CHUNK","P1_FOLLOWING_CHUNK","module","exports","CryptoJS","crypto","msCrypto","g","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","subtype","C","C_lib","lib","Base","overrides","mixIn","init","$super","properties","propertyName","clone","WordArray","words","sigBytes","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","escape","utf8Str","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","_doProcessBlock","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","factory","root","undef","SHA256","SHA224","_hash","HmacSHA224","H","K","isPrime","n","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","W","M","d","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","nBitsTotal","nBitsLeft","HmacSHA256"],"sourceRoot":""}