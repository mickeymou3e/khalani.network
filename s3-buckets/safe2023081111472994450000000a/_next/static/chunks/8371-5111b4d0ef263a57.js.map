{"version":3,"file":"static/chunks/8371-5111b4d0ef263a57.js","mappings":"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","sources":["webpack://_N_E/./src/components/safe-apps/types.ts","webpack://_N_E/./src/hooks/safe-apps/permissions/useBrowserPermissions.ts","webpack://_N_E/./src/hooks/safe-apps/permissions/useSafePermissions.ts","webpack://_N_E/./src/hooks/safe-apps/permissions/index.ts","webpack://_N_E/./src/hooks/safe-apps/useCustomSafeApps.ts","webpack://_N_E/./src/hooks/safe-apps/useSafeApps.ts","webpack://_N_E/./src/hooks/safe-apps/usePinnedSafeApps.ts","webpack://_N_E/./src/hooks/safe-apps/useRankedSafeApps.ts","webpack://_N_E/./src/services/safe-apps/manifest.ts","webpack://_N_E/./src/services/safe-apps/track-app-usage-count.ts"],"sourcesContent":["import type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport enum PermissionStatus {\n  GRANTED = 'granted',\n  PROMPT = 'prompt',\n  DENIED = 'denied',\n}\n\nconst FEATURES = [\n  'accelerometer',\n  'ambient-light-sensor',\n  'autoplay',\n  'battery',\n  'camera',\n  'cross-origin-isolated',\n  'display-capture',\n  'document-domain',\n  'encrypted-media',\n  'execution-while-not-rendered',\n  'execution-while-out-of-viewport',\n  'fullscreen',\n  'geolocation',\n  'gyroscope',\n  'keyboard-map',\n  'magnetometer',\n  'microphone',\n  'midi',\n  'navigation-override',\n  'payment',\n  'picture-in-picture',\n  'publickey-credentials-get',\n  'screen-wake-lock',\n  'sync-xhr',\n  'usb',\n  'web-share',\n  'xr-spatial-tracking',\n  'clipboard-read',\n  'clipboard-write',\n  'gamepad',\n  'speaker-selection',\n]\n\nexport type AllowedFeatures = typeof FEATURES[number]\n\nexport const isBrowserFeature = (featureKey: string): featureKey is AllowedFeatures => {\n  return FEATURES.includes(featureKey as AllowedFeatures)\n}\n\nexport type AllowedFeatureSelection = { feature: AllowedFeatures; checked: boolean }\n\nexport type SafeAppDataWithPermissions = SafeAppData & { safeAppsPermissions: AllowedFeatures[] }\n","import type { AllowedFeatures } from '@/components/safe-apps/types'\nimport { PermissionStatus } from '@/components/safe-apps/types'\nimport useLocalStorage from '@/services/local-storage/useLocalStorage'\nimport { useCallback } from 'react'\nimport { trimTrailingSlash } from '@/utils/url'\n\nconst BROWSER_PERMISSIONS = 'SafeApps__browserPermissions'\n\nexport type BrowserPermission = { feature: AllowedFeatures; status: PermissionStatus }\n\ntype BrowserPermissions = { [origin: string]: BrowserPermission[] }\n\ntype BrowserPermissionChangeSet = { feature: AllowedFeatures; selected: boolean }[]\n\ntype UseBrowserPermissionsReturnType = {\n  permissions: BrowserPermissions\n  getPermissions: (origin: string) => BrowserPermission[]\n  updatePermission: (origin: string, changeset: BrowserPermissionChangeSet) => void\n  addPermissions: (origin: string, permissions: BrowserPermission[]) => void\n  removePermissions: (origin: string) => void\n  getAllowedFeaturesList: (origin: string) => string\n}\n\nconst useBrowserPermissions = (): UseBrowserPermissionsReturnType => {\n  const [permissions = {}, setPermissions] = useLocalStorage<BrowserPermissions>(BROWSER_PERMISSIONS)\n\n  const getPermissions = useCallback(\n    (origin: string) => {\n      return permissions[trimTrailingSlash(origin)] || []\n    },\n    [permissions],\n  )\n\n  const updatePermission = useCallback(\n    (origin: string, changeset: BrowserPermissionChangeSet) => {\n      const appUrl = trimTrailingSlash(origin)\n\n      setPermissions({\n        ...permissions,\n        [appUrl]: permissions[appUrl].map((p) => {\n          const change = changeset.find((change) => change.feature === p.feature)\n\n          if (change) {\n            p.status = change.selected ? PermissionStatus.GRANTED : PermissionStatus.DENIED\n          }\n\n          return p\n        }),\n      })\n    },\n    [permissions, setPermissions],\n  )\n\n  const removePermissions = useCallback(\n    (origin: string) => {\n      delete permissions[trimTrailingSlash(origin)]\n      setPermissions({ ...permissions })\n    },\n    [permissions, setPermissions],\n  )\n\n  const addPermissions = useCallback(\n    (origin: string, selectedPermissions: BrowserPermission[]) => {\n      setPermissions({ ...permissions, [trimTrailingSlash(origin)]: selectedPermissions })\n    },\n    [permissions, setPermissions],\n  )\n\n  const getAllowedFeaturesList = useCallback(\n    (origin: string): string => {\n      return getPermissions(origin)\n        .filter(({ status }) => status === PermissionStatus.GRANTED)\n        .map((permission) => permission.feature)\n        .join('; ')\n    },\n    [getPermissions],\n  )\n\n  return {\n    permissions,\n    getPermissions,\n    updatePermission,\n    addPermissions,\n    removePermissions,\n    getAllowedFeaturesList,\n  }\n}\n\nexport { useBrowserPermissions }\n","import { useState, useCallback } from 'react'\nimport type { Methods } from '@safe-global/safe-apps-sdk'\nimport type {\n  Permission,\n  PermissionCaveat,\n  PermissionRequest,\n} from '@safe-global/safe-apps-sdk/dist/src/types/permissions'\n\nimport { PermissionStatus } from '@/components/safe-apps/types'\nimport useLocalStorage from '@/services/local-storage/useLocalStorage'\nimport { trimTrailingSlash } from '@/utils/url'\n\nconst SAFE_PERMISSIONS = 'SafeApps__safePermissions'\nconst USER_RESTRICTED = 'userRestricted'\n\nexport type SafePermissions = { [origin: string]: Permission[] }\n\nexport type SafePermissionsRequest = {\n  origin: string\n  requestId: string\n  request: PermissionRequest[]\n}\n\ntype SafePermissionChangeSet = { capability: string; selected: boolean }[]\n\ntype UseSafePermissionsReturnType = {\n  permissions: SafePermissions\n  getPermissions: (origin: string) => Permission[]\n  updatePermission: (origin: string, changeset: SafePermissionChangeSet) => void\n  removePermissions: (origin: string) => void\n  permissionsRequest: SafePermissionsRequest | undefined\n  setPermissionsRequest: (permissionsRequest?: SafePermissionsRequest) => void\n  confirmPermissionRequest: (result: PermissionStatus) => Permission[]\n  hasPermission: (origin: string, permission: Methods) => boolean\n  isUserRestricted: (caveats?: PermissionCaveat[]) => boolean\n}\n\nconst useSafePermissions = (): UseSafePermissionsReturnType => {\n  const [permissions = {}, setPermissions] = useLocalStorage<SafePermissions>(SAFE_PERMISSIONS)\n\n  const [permissionsRequest, setPermissionsRequest] = useState<SafePermissionsRequest | undefined>()\n\n  const getPermissions = useCallback(\n    (origin: string) => {\n      return permissions[trimTrailingSlash(origin)] || []\n    },\n    [permissions],\n  )\n\n  const updatePermission = useCallback(\n    (origin: string, changeset: SafePermissionChangeSet) => {\n      const appUrl = trimTrailingSlash(origin)\n\n      setPermissions({\n        ...permissions,\n        [appUrl]: permissions[appUrl].map((permission) => {\n          const change = changeset.find((change) => change.capability === permission.parentCapability)\n\n          if (change) {\n            if (change.selected) {\n              permission.caveats = permission.caveats?.filter((caveat) => caveat.type !== USER_RESTRICTED) || []\n            } else if (!isUserRestricted(permission.caveats)) {\n              permission.caveats = [\n                ...(permission.caveats || []),\n                {\n                  type: USER_RESTRICTED,\n                  value: true,\n                },\n              ]\n            }\n          }\n\n          return permission\n        }),\n      })\n    },\n    [permissions, setPermissions],\n  )\n\n  const removePermissions = useCallback(\n    (origin: string) => {\n      delete permissions[trimTrailingSlash(origin)]\n      setPermissions({ ...permissions })\n    },\n    [permissions, setPermissions],\n  )\n\n  const hasPermission = useCallback(\n    (origin: string, permission: Methods) => {\n      return permissions[trimTrailingSlash(origin)]?.some(\n        (p) => p.parentCapability === permission && !isUserRestricted(p.caveats),\n      )\n    },\n    [permissions],\n  )\n\n  const hasCapability = useCallback(\n    (origin: string, permission: Methods) => {\n      return permissions[trimTrailingSlash(origin)]?.some((p) => p.parentCapability === permission)\n    },\n    [permissions],\n  )\n\n  const confirmPermissionRequest = useCallback(\n    (result: PermissionStatus) => {\n      if (!permissionsRequest) return []\n\n      const updatedPermissionsByOrigin = [...(permissions[permissionsRequest.origin] || [])]\n\n      permissionsRequest.request.forEach((requestedPermission) => {\n        const capability = Object.keys(requestedPermission)[0]\n\n        if (hasCapability(permissionsRequest.origin, capability as Methods)) {\n          updatedPermissionsByOrigin.map((permission) => {\n            if (permission.parentCapability === capability) {\n              if (isUserRestricted(permission.caveats)) {\n                if (result === PermissionStatus.GRANTED) {\n                  permission.caveats = permission.caveats?.filter((caveat) => caveat.type !== USER_RESTRICTED) || []\n                }\n              } else {\n                if (result === PermissionStatus.DENIED) {\n                  permission.caveats?.push({\n                    type: USER_RESTRICTED,\n                    value: true,\n                  })\n                }\n              }\n            }\n          })\n        } else {\n          updatedPermissionsByOrigin.push({\n            invoker: permissionsRequest.origin,\n            parentCapability: capability,\n            date: new Date().getTime(),\n            caveats:\n              result === PermissionStatus.DENIED\n                ? [\n                    {\n                      type: USER_RESTRICTED,\n                      value: true,\n                    },\n                  ]\n                : [],\n          })\n        }\n      })\n\n      setPermissions({\n        ...permissions,\n        [permissionsRequest.origin]: updatedPermissionsByOrigin,\n      })\n      setPermissionsRequest(undefined)\n\n      return updatedPermissionsByOrigin\n    },\n    [permissionsRequest, permissions, setPermissions, hasCapability],\n  )\n\n  const isUserRestricted = (caveats?: PermissionCaveat[]) =>\n    !!caveats?.some((caveat) => caveat.type === USER_RESTRICTED && caveat.value === true)\n\n  return {\n    permissions,\n    isUserRestricted,\n    getPermissions,\n    updatePermission,\n    removePermissions,\n    permissionsRequest,\n    setPermissionsRequest,\n    confirmPermissionRequest,\n    hasPermission,\n  }\n}\n\nexport { useSafePermissions }\n","import { RestrictedMethods } from '@safe-global/safe-apps-sdk'\nimport type { AllowedFeatures } from '@/components/safe-apps/types'\nimport { capitalize } from '@/utils/formatters'\n\ntype PermissionsDisplayType = {\n  displayName: string\n  description: string\n}\n\nexport * from './useBrowserPermissions'\nexport * from './useSafePermissions'\n\nconst SAFE_PERMISSIONS_TEXTS: Record<string, PermissionsDisplayType> = {\n  [RestrictedMethods.requestAddressBook]: {\n    displayName: 'Address Book',\n    description: 'Access to your address book',\n  },\n}\n\nexport const getSafePermissionDisplayValues = (method: string) => {\n  return SAFE_PERMISSIONS_TEXTS[method]\n}\n\nexport const getBrowserPermissionDisplayValues = (feature: AllowedFeatures) => {\n  return {\n    displayName: capitalize(feature).replace(/-/g, ' '),\n    description: `Allow to use - ${feature}`,\n  }\n}\n","import { useState, useEffect, useCallback } from 'react'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport local from '@/services/local-storage/local'\nimport { fetchSafeAppFromManifest } from '@/services/safe-apps/manifest'\nimport useChainId from '@/hooks/useChainId'\n\ntype ReturnType = {\n  customSafeApps: SafeAppData[]\n  loading: boolean\n  updateCustomSafeApps: (newCustomSafeApps: SafeAppData[]) => void\n}\n\nconst CUSTOM_SAFE_APPS_STORAGE_KEY = 'customSafeApps'\n\nconst getChainSpecificSafeAppsStorageKey = (chainId: string) => `${CUSTOM_SAFE_APPS_STORAGE_KEY}-${chainId}`\n\ntype StoredCustomSafeApp = { url: string }\n\n/*\n  This hook is used to manage the list of custom safe apps.\n  What it does:\n  1. Loads a list of custom safe apps from local storage\n  2. Does some backward compatibility checks (supported app networks, etc)\n  3. Tries to fetch the app info (manifest.json) from the app url\n*/\nconst useCustomSafeApps = (): ReturnType => {\n  const [customSafeApps, setCustomSafeApps] = useState<SafeAppData[]>([])\n  const [loading, setLoading] = useState(false)\n  const chainId = useChainId()\n\n  const updateCustomSafeApps = useCallback(\n    (newCustomSafeApps: SafeAppData[]) => {\n      setCustomSafeApps(newCustomSafeApps)\n\n      const chainSpecificSafeAppsStorageKey = getChainSpecificSafeAppsStorageKey(chainId)\n      local.setItem(\n        chainSpecificSafeAppsStorageKey,\n        newCustomSafeApps.map((app) => ({ url: app.url })),\n      )\n    },\n    [chainId],\n  )\n\n  useEffect(() => {\n    const loadCustomApps = async () => {\n      setLoading(true)\n      const chainSpecificSafeAppsStorageKey = getChainSpecificSafeAppsStorageKey(chainId)\n      const storedApps = local.getItem<StoredCustomSafeApp[]>(chainSpecificSafeAppsStorageKey) || []\n      const appManifests = await Promise.allSettled(storedApps.map((app) => fetchSafeAppFromManifest(app.url, chainId)))\n      const resolvedApps = appManifests\n        .filter((promiseResult) => promiseResult.status === 'fulfilled')\n        .map((promiseResult) => (promiseResult as PromiseFulfilledResult<SafeAppData>).value)\n\n      setCustomSafeApps(resolvedApps)\n      setLoading(false)\n    }\n\n    loadCustomApps()\n  }, [chainId])\n\n  return { customSafeApps, loading, updateCustomSafeApps }\n}\n\nexport { useCustomSafeApps }\n","import { useMemo, useCallback } from 'react'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport { useRemoteSafeApps } from '@/hooks/safe-apps/useRemoteSafeApps'\nimport { useCustomSafeApps } from '@/hooks/safe-apps/useCustomSafeApps'\nimport { usePinnedSafeApps } from '@/hooks/safe-apps/usePinnedSafeApps'\nimport { useBrowserPermissions, useSafePermissions } from './permissions'\nimport { useRankedSafeApps } from '@/hooks/safe-apps/useRankedSafeApps'\nimport { SAFE_APPS_EVENTS, trackSafeAppEvent } from '@/services/analytics'\n\ntype ReturnType = {\n  allSafeApps: SafeAppData[]\n  pinnedSafeApps: SafeAppData[]\n  pinnedSafeAppIds: Set<number>\n  remoteSafeApps: SafeAppData[]\n  customSafeApps: SafeAppData[]\n  rankedSafeApps: SafeAppData[]\n  remoteSafeAppsLoading: boolean\n  customSafeAppsLoading: boolean\n  remoteSafeAppsError?: Error\n  addCustomApp: (app: SafeAppData) => void\n  togglePin: (appId: number) => void\n  removeCustomApp: (appId: number) => void\n}\n\nconst useSafeApps = (): ReturnType => {\n  const [remoteSafeApps = [], remoteSafeAppsError, remoteSafeAppsLoading] = useRemoteSafeApps()\n  const { customSafeApps, loading: customSafeAppsLoading, updateCustomSafeApps } = useCustomSafeApps()\n  const { pinnedSafeAppIds, updatePinnedSafeApps } = usePinnedSafeApps()\n  const { removePermissions: removeSafePermissions } = useSafePermissions()\n  const { removePermissions: removeBrowserPermissions } = useBrowserPermissions()\n\n  const allSafeApps = useMemo(\n    () => remoteSafeApps.concat(customSafeApps).sort((a, b) => a.name.localeCompare(b.name)),\n    [remoteSafeApps, customSafeApps],\n  )\n\n  const pinnedSafeApps = useMemo(\n    () => remoteSafeApps.filter((app) => pinnedSafeAppIds.has(app.id)),\n    [remoteSafeApps, pinnedSafeAppIds],\n  )\n\n  const rankedSafeApps = useRankedSafeApps(allSafeApps, pinnedSafeApps)\n\n  const addCustomApp = useCallback(\n    (app: SafeAppData) => {\n      updateCustomSafeApps([...customSafeApps, app])\n    },\n    [updateCustomSafeApps, customSafeApps],\n  )\n\n  const removeCustomApp = useCallback(\n    (appId: number) => {\n      updateCustomSafeApps(customSafeApps.filter((app) => app.id !== appId))\n      const app = customSafeApps.find((app) => app.id === appId)\n\n      if (app) {\n        removeSafePermissions(app.url)\n        removeBrowserPermissions(app.url)\n      }\n    },\n    [updateCustomSafeApps, customSafeApps, removeSafePermissions, removeBrowserPermissions],\n  )\n\n  const togglePin = (appId: number) => {\n    const alreadyPinned = pinnedSafeAppIds.has(appId)\n    const newSet = new Set(pinnedSafeAppIds)\n    const appName = allSafeApps.find((app) => app.id === appId)?.name\n\n    if (alreadyPinned) {\n      newSet.delete(appId)\n      trackSafeAppEvent(SAFE_APPS_EVENTS.UNPIN, appName)\n    } else {\n      newSet.add(appId)\n      trackSafeAppEvent(SAFE_APPS_EVENTS.PIN, appName)\n    }\n    updatePinnedSafeApps(newSet)\n  }\n\n  return {\n    allSafeApps,\n    rankedSafeApps,\n\n    remoteSafeApps,\n    remoteSafeAppsLoading: remoteSafeAppsLoading || !(remoteSafeApps || remoteSafeAppsError),\n    remoteSafeAppsError,\n\n    pinnedSafeApps,\n    pinnedSafeAppIds,\n    togglePin,\n\n    customSafeApps,\n    customSafeAppsLoading,\n    addCustomApp,\n    removeCustomApp,\n  }\n}\n\nexport { useSafeApps }\n","import { useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { selectPinned, setPinned } from '@/store/safeAppsSlice'\nimport useChainId from '../useChainId'\n\ntype ReturnType = {\n  pinnedSafeAppIds: Set<number>\n  updatePinnedSafeApps: (newPinnedSafeAppIds: Set<number>) => void\n}\n\n// Return the pinned app ids across all chains\nexport const usePinnedSafeApps = (): ReturnType => {\n  const chainId = useChainId()\n  const pinned = useAppSelector((state) => selectPinned(state, chainId))\n  const pinnedSafeAppIds = useMemo(() => new Set(pinned), [pinned])\n  const dispatch = useAppDispatch()\n\n  const updatePinnedSafeApps = useCallback(\n    (ids: Set<number>) => {\n      dispatch(setPinned({ pinned: Array.from(ids), chainId }))\n    },\n    [dispatch, chainId],\n  )\n\n  return { pinnedSafeAppIds, updatePinnedSafeApps }\n}\n","import { useMemo } from 'react'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\nimport { rankSafeApps } from '@/services/safe-apps/track-app-usage-count'\nimport { SafeAppsTag } from '@/config/constants'\n\n// number of ranked Safe Apps that we want to display\nconst NUMBER_OF_SAFE_APPS = 5\n\nconst useRankedSafeApps = (safeApps: SafeAppData[], pinnedSafeApps: SafeAppData[]): SafeAppData[] => {\n  return useMemo(() => {\n    if (!safeApps.length) return []\n\n    const mostUsedApps = rankSafeApps(safeApps)\n    const rankedPinnedApps = rankSafeApps(pinnedSafeApps)\n    const randomApps = safeApps.slice().sort(() => Math.random() - 0.5)\n\n    const allRankedApps = rankedPinnedApps\n      .concat(pinnedSafeApps, mostUsedApps, randomApps)\n      // Filter out Featured Apps because they are in their own section\n      .filter((app) => !app.tags.includes(SafeAppsTag.DASHBOARD_FEATURED))\n\n    // Use a Set to remove duplicates\n    return [...new Set(allRankedApps)].slice(0, NUMBER_OF_SAFE_APPS)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [safeApps])\n}\n\nexport { useRankedSafeApps }\n","import type { AllowedFeatures, SafeAppDataWithPermissions } from '@/components/safe-apps/types'\nimport { isRelativeUrl, trimTrailingSlash } from '@/utils/url'\nimport { SafeAppAccessPolicyTypes } from '@safe-global/safe-gateway-typescript-sdk'\n\ntype AppManifestIcon = {\n  src: string\n  sizes: string\n  type?: string\n  purpose?: string\n}\n\nexport type AppManifest = {\n  // SPEC: https://developer.mozilla.org/en-US/docs/Web/Manifest\n  name: string\n  short_name?: string\n  description: string\n  icons?: AppManifestIcon[]\n  iconPath?: string\n  safe_apps_permissions?: AllowedFeatures[]\n}\n\nconst MIN_ICON_WIDTH = 128\n\nconst chooseBestIcon = (icons: AppManifestIcon[]): string => {\n  const svgIcon = icons.find((icon) => icon?.sizes?.includes('any') || icon?.type === 'image/svg+xml')\n\n  if (svgIcon) {\n    return svgIcon.src\n  }\n\n  for (const icon of icons) {\n    for (const size of icon.sizes.split(' ')) {\n      if (Number(size.split('x')[0]) >= MIN_ICON_WIDTH) {\n        return icon.src\n      }\n    }\n  }\n\n  return icons[0].src || ''\n}\n\n// The icons URL can be any of the following format:\n// - https://example.com/icon.png\n// - icon.png\n// - /icon.png\n// This function calculates the absolute URL of the icon taking into account the\n// different formats.\nconst getAppLogoUrl = (appUrl: string, { icons = [], iconPath = '' }: AppManifest) => {\n  const iconUrl = icons.length ? chooseBestIcon(icons) : iconPath\n  const includesBaseUrl = iconUrl.startsWith('https://')\n  if (includesBaseUrl) {\n    return iconUrl\n  }\n\n  return `${appUrl}${isRelativeUrl(iconUrl) ? '' : '/'}${iconUrl}`\n}\n\nconst fetchAppManifest = async (appUrl: string, timeout = 5000): Promise<unknown> => {\n  const normalizedUrl = trimTrailingSlash(appUrl)\n  const manifestUrl = `${normalizedUrl}/manifest.json`\n\n  // A lot of apps are hosted on IPFS and IPFS never times out, so we add our own timeout\n  const controller = new AbortController()\n  const id = setTimeout(() => controller.abort(), timeout)\n\n  const response = await fetch(manifestUrl, {\n    signal: controller.signal,\n  })\n  clearTimeout(id)\n\n  if (!response.ok) {\n    throw new Error(`Failed to fetch manifest from ${manifestUrl}`)\n  }\n\n  return response.json()\n}\n\nconst isAppManifestValid = (json: unknown): json is AppManifest => {\n  return (\n    json != null &&\n    typeof json === 'object' &&\n    'name' in json &&\n    'description' in json &&\n    ('icons' in json || 'iconPath' in json)\n  )\n}\n\nconst fetchSafeAppFromManifest = async (\n  appUrl: string,\n  currentChainId: string,\n): Promise<SafeAppDataWithPermissions> => {\n  const normalizedAppUrl = trimTrailingSlash(appUrl)\n  const appManifest = await fetchAppManifest(appUrl)\n\n  if (!isAppManifestValid(appManifest)) {\n    throw new Error('Invalid Safe App manifest')\n  }\n\n  const iconUrl = getAppLogoUrl(normalizedAppUrl, appManifest)\n\n  return {\n    id: Math.random(),\n    url: normalizedAppUrl,\n    name: appManifest.name,\n    description: appManifest.description,\n    accessControl: { type: SafeAppAccessPolicyTypes.NoRestrictions },\n    tags: [],\n    features: [],\n    socialProfiles: [],\n    developerWebsite: '',\n    chainIds: [currentChainId],\n    iconUrl,\n    safeAppsPermissions: appManifest.safe_apps_permissions || [],\n  }\n}\n\nexport { fetchAppManifest, isAppManifestValid, getAppLogoUrl, fetchSafeAppFromManifest }\n","import local from '@/services/local-storage/local'\nimport type { SafeAppData } from '@safe-global/safe-gateway-typescript-sdk'\n\nexport const APPS_DASHBOARD = 'SafeApps__dashboard'\n\nconst TX_COUNT_WEIGHT = 2\nconst OPEN_COUNT_WEIGHT = 1\n\nexport type AppTrackData = {\n  [safeAppId: string]: {\n    timestamp: number\n    openCount: number\n    txCount: number\n  }\n}\n\nexport const getAppsUsageData = (): AppTrackData => {\n  return local.getItem<AppTrackData>(APPS_DASHBOARD) || {}\n}\n\nexport const trackSafeAppOpenCount = (id: SafeAppData['id']): void => {\n  const trackData = getAppsUsageData()\n  const currentOpenCount = trackData[id]?.openCount || 0\n  const currentTxCount = trackData[id]?.txCount || 0\n\n  local.setItem(APPS_DASHBOARD, {\n    ...trackData,\n    [id]: {\n      timestamp: Date.now(),\n      openCount: currentOpenCount + 1,\n      txCount: currentTxCount,\n    },\n  })\n}\n\nexport const trackSafeAppTxCount = (id: SafeAppData['id']): void => {\n  const trackData = getAppsUsageData()\n  const currentTxCount = trackData[id]?.txCount || 0\n\n  local.setItem(APPS_DASHBOARD, {\n    ...trackData,\n    // The object contains the openCount when we are creating a transaction\n    [id]: { ...trackData[id], txCount: currentTxCount + 1 },\n  })\n}\n\n// https://stackoverflow.com/a/55212064\nconst normalizeBetweenTwoRanges = (\n  val: number,\n  minVal: number,\n  maxVal: number,\n  newMin: number,\n  newMax: number,\n): number => {\n  return newMin + ((val - minVal) * (newMax - newMin)) / (maxVal - minVal)\n}\n\nexport const rankSafeApps = (safeApps: SafeAppData[]) => {\n  const apps = getAppsUsageData()\n  const appsWithScore = computeTrackedSafeAppsScore(apps)\n\n  return Object.entries(appsWithScore)\n    .sort((a, b) => b[1] - a[1])\n    .map((app) => safeApps.find((safeApp) => String(safeApp.id) === app[0]))\n    .filter(Boolean) as SafeAppData[]\n}\n\nexport const computeTrackedSafeAppsScore = (apps: AppTrackData): Record<string, number> => {\n  const scoredApps: Record<string, number> = {}\n\n  const sortedByTimestamp = Object.entries(apps).sort((a, b) => {\n    return a[1].timestamp - b[1].timestamp\n  })\n\n  for (const [idx, app] of Array.from(sortedByTimestamp.entries())) {\n    // UNIX Timestamps add too much weight, so we normalize by uniformly distributing them to range [1..2]\n    const timeMultiplier = normalizeBetweenTwoRanges(idx, 0, sortedByTimestamp.length, 1, 2)\n\n    scoredApps[app[0]] = (TX_COUNT_WEIGHT * app[1].txCount + OPEN_COUNT_WEIGHT * app[1].openCount) * timeMultiplier\n  }\n\n  return scoredApps\n}\n"],"names":["PermissionStatus","FEATURES","isBrowserFeature","featureKey","includes","useBrowserPermissions","useLocalStorage","permissions","setPermissions","getPermissions","useCallback","origin","trimTrailingSlash","updatePermission","changeset","appUrl","map","p","change","find","feature","status","selected","removePermissions","addPermissions","selectedPermissions","getAllowedFeaturesList","filter","permission","join","USER_RESTRICTED","useSafePermissions","useState","permissionsRequest","setPermissionsRequest","capability","parentCapability","caveats","caveat","type","isUserRestricted","value","hasPermission","some","hasCapability","confirmPermissionRequest","result","updatedPermissionsByOrigin","request","forEach","requestedPermission","Object","keys","push","invoker","date","Date","getTime","undefined","SAFE_PERMISSIONS_TEXTS","RestrictedMethods","displayName","description","getSafePermissionDisplayValues","method","getBrowserPermissionDisplayValues","capitalize","replace","getChainSpecificSafeAppsStorageKey","chainId","useSafeApps","useRemoteSafeApps","remoteSafeApps","remoteSafeAppsError","remoteSafeAppsLoading","useCustomSafeApps","customSafeApps","setCustomSafeApps","loading","setLoading","useChainId","updateCustomSafeApps","newCustomSafeApps","chainSpecificSafeAppsStorageKey","local","app","url","useEffect","loadCustomApps","storedApps","appManifests","resolvedApps","Promise","allSettled","fetchSafeAppFromManifest","promiseResult","usePinnedSafeApps","pinned","useAppSelector","state","selectPinned","pinnedSafeAppIds","useMemo","Set","dispatch","useAppDispatch","updatePinnedSafeApps","ids","setPinned","Array","from","allSafeApps","concat","sort","a","b","name","localeCompare","pinnedSafeApps","has","id","rankedSafeApps","safeApps","length","mostUsedApps","rankSafeApps","rankedPinnedApps","randomApps","slice","Math","random","allRankedApps","tags","SafeAppsTag","useRankedSafeApps","addCustomApp","removeCustomApp","appId","removeSafePermissions","removeBrowserPermissions","togglePin","alreadyPinned","newSet","appName","delete","trackSafeAppEvent","SAFE_APPS_EVENTS","add","customSafeAppsLoading","getAppLogoUrl","icons","iconPath","iconUrl","svgIcon","icon","sizes","src","split","size","Number","chooseBestIcon","startsWith","isRelativeUrl","fetchAppManifest","timeout","normalizedUrl","manifestUrl","controller","response","AbortController","setTimeout","abort","fetch","signal","clearTimeout","ok","Error","json","currentChainId","normalizedAppUrl","appManifest","accessControl","SafeAppAccessPolicyTypes","features","socialProfiles","developerWebsite","chainIds","safeAppsPermissions","safe_apps_permissions","APPS_DASHBOARD","getAppsUsageData","trackSafeAppOpenCount","trackData","currentOpenCount","openCount","currentTxCount","txCount","timestamp","now","trackSafeAppTxCount","apps","appsWithScore","computeTrackedSafeAppsScore","entries","safeApp","String","Boolean","val","minVal","maxVal","newMin","scoredApps","sortedByTimestamp","idx","timeMultiplier"],"sourceRoot":""}