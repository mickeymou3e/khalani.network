{"version":3,"file":"static/chunks/7549-8c99ea144f768c77.js","mappings":"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","sources":["webpack://_N_E/./public/images/common/export.svg","webpack://_N_E/./public/images/settings/data/file.svg","webpack://_N_E/./src/components/common/FileUpload/index.tsx","webpack://_N_E/./src/components/settings/DataManagement/FileListCard.tsx","webpack://_N_E/./src/components/settings/DataManagement/ImportDialog.tsx","webpack://_N_E/./src/components/settings/DataManagement/ImportFileUpload.tsx","webpack://_N_E/./src/components/settings/DataManagement/index.tsx","webpack://_N_E/./src/components/settings/DataManagement/useGlobalImportFileParser.ts","webpack://_N_E/./src/services/ls-migration/addressBook.ts","webpack://_N_E/./src/components/common/FileUpload/styles.module.css","webpack://_N_E/./src/components/settings/DataManagement/styles.module.css"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nvar SvgExport = function SvgExport(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.9995 8.41611V20.9991C10.9995 21.5521 11.4475 21.9991 11.9995 21.9991C12.5525 21.9991 12.9995 21.5521 12.9995 20.9991V8.41611L17.1215 12.5371C17.5125 12.9281 18.1455 12.9281 18.5355 12.5371C18.9265 12.1461 18.9265 11.5141 18.5355 11.1231L12.8785 5.46611C12.8495 5.43711 12.8185 5.41011 12.7875 5.38611C12.6035 5.15111 12.3195 5.00211 11.9995 5.00211C11.6805 5.00211 11.3955 5.15111 11.2125 5.38611C11.1815 5.41011 11.1495 5.43711 11.1215 5.46611L5.46451 11.1231C5.07351 11.5141 5.07351 12.1461 5.46451 12.5371C5.85451 12.9281 6.48751 12.9281 6.87851 12.5371L10.9995 8.41611Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M20.9995 4H2.99951C2.44951 4 1.99951 3.55 1.99951 3C1.99951 2.45 2.44951 2 2.99951 2H20.9995C21.5505 2 21.9995 2.45 21.9995 3C21.9995 3.55 21.5505 4 20.9995 4\"\n  })));\n};\nexport default SvgExport;","var _path, _path2, _path3, _path4, _path5;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nvar SvgFile = function SvgFile(_ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.33366 1.33301H4.00033C3.6467 1.33301 3.30756 1.47348 3.05752 1.72353C2.80747 1.97358 2.66699 2.31272 2.66699 2.66634V13.333C2.66699 13.6866 2.80747 14.0258 3.05752 14.2758C3.30756 14.5259 3.6467 14.6663 4.00033 14.6663H12.0003C12.3539 14.6663 12.6931 14.5259 12.9431 14.2758C13.1932 14.0258 13.3337 13.6866 13.3337 13.333V5.33301L9.33366 1.33301Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.33301 1.33301V5.33301H13.333\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.6663 8.66699H5.33301\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.6663 11.333H5.33301\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.66732 6H6.00065H5.33398\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n};\nexport default SvgFile;","import css from './styles.module.css'\nimport { Box, Grid, IconButton, Link, SvgIcon, type SvgIconTypeMap, Typography } from '@mui/material'\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff'\nimport FileIcon from '@/public/images/settings/data/file.svg'\nimport type { MouseEventHandler, ReactElement } from 'react'\nimport type { DropzoneInputProps, DropzoneRootProps } from 'react-dropzone'\n\nexport type FileInfo = {\n  name: string\n  additionalInfo?: string\n  summary: ReactElement[]\n  error?: string\n}\n\nexport enum FileTypes {\n  JSON = 'JSON',\n  CSV = 'CSV',\n}\n\nconst ColoredFileIcon = ({ color }: { color: SvgIconTypeMap['props']['color'] }) => (\n  <SvgIcon component={FileIcon} inheritViewBox fontSize=\"small\" color={color} sx={{ fill: 'none' }} />\n)\n\nconst UploadSummary = ({ fileInfo, onRemove }: { fileInfo: FileInfo; onRemove: (() => void) | MouseEventHandler }) => {\n  return (\n    <Grid container direction=\"column\" gap={1} mt={3}>\n      <Grid container gap={1} display=\"flex\" alignItems=\"center\">\n        <Grid item xs={1}>\n          <ColoredFileIcon color=\"primary\" />\n        </Grid>\n        <Grid item xs={7}>\n          {fileInfo.name}\n          {fileInfo.additionalInfo && ` - ${fileInfo.additionalInfo}`}\n        </Grid>\n\n        <Grid item xs display=\"flex\" justifyContent=\"flex-end\">\n          <IconButton onClick={onRemove} size=\"small\">\n            <HighlightOffIcon color=\"primary\" />\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} display=\"flex\" justifyContent=\"flex-start\">\n        <div className={css.verticalLine} />\n      </Grid>\n      <>\n        {fileInfo.summary.map((summaryItem, idx) => (\n          <Grid key={`${fileInfo.name}${idx}`} container display=\"flex\" gap={1} alignItems=\"center\">\n            <Grid item xs={1}>\n              <ColoredFileIcon color=\"border\" />\n            </Grid>\n            <Grid item xs>\n              <Typography>{summaryItem}</Typography>\n            </Grid>\n          </Grid>\n        ))}\n        {fileInfo.error && (\n          <Grid container display=\"flex\" gap={1} alignItems=\"center\">\n            <Grid item xs={1}>\n              <ColoredFileIcon color=\"border\" />\n            </Grid>\n            <Grid item xs>\n              <Typography color=\"error\">\n                <strong>{fileInfo.error}</strong>\n              </Typography>\n            </Grid>\n          </Grid>\n        )}\n      </>\n    </Grid>\n  )\n}\n\nconst FileUpload = ({\n  getRootProps,\n  getInputProps,\n  isDragReject = false,\n  isDragActive = false,\n  fileType,\n  fileInfo,\n  onRemove,\n}: {\n  isDragReject?: boolean\n  isDragActive?: boolean\n  fileType: FileTypes\n  getInputProps?: <T extends DropzoneInputProps>(props?: T | undefined) => T\n  getRootProps: <T extends DropzoneRootProps>(props?: T | undefined) => T\n  fileInfo?: FileInfo\n  onRemove: (() => void) | MouseEventHandler\n}) => {\n  if (fileInfo) {\n    return <UploadSummary fileInfo={fileInfo} onRemove={onRemove} />\n  }\n  return (\n    <Box\n      {...getRootProps()}\n      className={css.dropbox}\n      sx={{\n        cursor: isDragReject ? 'not-allowed' : undefined,\n        background: ({ palette }) => `${isDragReject ? palette.error.light : undefined} !important`,\n        border: ({ palette }) =>\n          `1px dashed ${\n            isDragReject ? palette.error.dark : isDragActive ? palette.primary.main : palette.secondary.dark\n          }`,\n      }}\n    >\n      {getInputProps && <input {...getInputProps()} />}\n\n      <Box display=\"flex\" alignItems=\"center\" gap={1}>\n        <SvgIcon\n          component={FileIcon}\n          inheritViewBox\n          fontSize=\"small\"\n          sx={{ fill: 'none', color: ({ palette }) => palette.primary.light }}\n        />\n        <Typography>\n          Drag and drop a {fileType} file or{' '}\n          <Link href=\"#\" color=\"secondary\">\n            choose a file\n          </Link>\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\nexport default FileUpload\n","import { Box, Card, CardContent, CardHeader, List, ListItem, ListItemIcon, ListItemText, SvgIcon } from '@mui/material'\nimport type { ListItemTextProps } from '@mui/material'\nimport type { CardHeaderProps } from '@mui/material'\nimport type { ReactElement } from 'react'\n\nimport FileIcon from '@/public/images/settings/data/file.svg'\nimport useChains from '@/hooks/useChains'\nimport { ImportErrors } from '@/components/settings/DataManagement/useGlobalImportFileParser'\nimport type { AddedSafesState } from '@/store/addedSafesSlice'\nimport type { AddressBookState } from '@/store/addressBookSlice'\nimport type { SafeAppsState } from '@/store/safeAppsSlice'\nimport type { SettingsState } from '@/store/settingsSlice'\nimport type { ChainInfo } from '@safe-global/safe-gateway-typescript-sdk'\n\nimport css from './styles.module.css'\n\nconst getItemSecondaryText = (\n  chains: ChainInfo[],\n  data: AddedSafesState | AddressBookState = {},\n  singular: string,\n  plural: string,\n): ReactElement => {\n  return (\n    <List sx={{ p: 0 }}>\n      {Object.keys(data).map((chainId) => {\n        const count = Object.keys(data[chainId] ?? {}).length\n\n        if (count === 0) {\n          return null\n        }\n\n        const chain = chains.find((chain) => chain.chainId === chainId)\n\n        return (\n          <ListItem key={chainId} sx={{ p: 0, m: 0.5 }}>\n            <Box\n              className={css.networkIcon}\n              sx={{ backgroundColor: chain?.theme.backgroundColor ?? '#D9D9D9' }}\n              component=\"span\"\n            />\n            {chain?.chainName}: {count} {count === 1 ? singular : plural}\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\ntype Data = {\n  addedSafes?: AddedSafesState\n  addressBook?: AddressBookState\n  settings?: SettingsState\n  safeApps?: SafeAppsState\n  error?: string\n}\n\ntype ListProps = Data & {\n  showPreview?: boolean\n}\n\ntype ItemProps = ListProps & { chains: ChainInfo[] }\n\nconst getItems = ({\n  addedSafes,\n  addressBook,\n  settings,\n  safeApps,\n  error,\n  chains,\n  showPreview = false,\n}: ItemProps): Array<ListItemTextProps> => {\n  if (error) {\n    return [{ primary: <>{error}</> }]\n  }\n\n  const addedSafeChainAmount = Object.keys(addedSafes || {}).length\n  const addressBookChainAmount = Object.keys(addressBook || {}).length\n\n  const items: Array<ListItemTextProps> = []\n\n  if (addedSafeChainAmount > 0) {\n    const addedSafesPreview: ListItemTextProps = {\n      primary: (\n        <>\n          <b>Added Safe Accounts</b> on {addedSafeChainAmount} {addedSafeChainAmount === 1 ? 'chain' : 'chains'}\n        </>\n      ),\n      secondary: showPreview ? getItemSecondaryText(chains, addedSafes, 'Safe', 'Safes') : undefined,\n    }\n\n    items.push(addedSafesPreview)\n  }\n\n  if (addressBookChainAmount > 0) {\n    const addressBookPreview: ListItemTextProps = {\n      primary: (\n        <>\n          <b>Address book</b> for {addressBookChainAmount} {addressBookChainAmount === 1 ? 'chain' : 'chains'}\n        </>\n      ),\n      secondary: showPreview ? getItemSecondaryText(chains, addressBook, 'contact', 'contacts') : undefined,\n    }\n\n    items.push(addressBookPreview)\n  }\n\n  if (settings) {\n    const settingsPreview: ListItemTextProps = {\n      primary: (\n        <>\n          <b>Settings</b> (appearance, currency, hidden tokens and custom environment variables)\n        </>\n      ),\n    }\n\n    items.push(settingsPreview)\n  }\n\n  const hasBookmarkedSafeApps = Object.values(safeApps || {}).some((chainId) => chainId.pinned?.length > 0)\n  if (hasBookmarkedSafeApps) {\n    const safeAppsPreview: ListItemTextProps = {\n      primary: (\n        <>\n          Bookmarked <b>Safe Apps</b>\n        </>\n      ),\n    }\n\n    items.push(safeAppsPreview)\n  }\n\n  if (items.length === 0) {\n    return [{ primary: <>{ImportErrors.NO_IMPORT_DATA_FOUND}</> }]\n  }\n\n  return items\n}\n\ntype Props = ListProps & CardHeaderProps\n\nexport const FileListCard = ({\n  addedSafes,\n  addressBook,\n  settings,\n  safeApps,\n  error,\n  showPreview = false,\n  ...cardHeaderProps\n}: Props): ReactElement => {\n  const chains = useChains()\n  const items = getItems({ addedSafes, addressBook, settings, safeApps, error, chains: chains.configs, showPreview })\n\n  return (\n    <Card className={css.card}>\n      <CardHeader {...cardHeaderProps} className={css.header} />\n      <CardContent className={css.content}>\n        <List sx={{ p: 0 }}>\n          {items.map((item, i) => (\n            <ListItem key={i} sx={{ p: 0 }}>\n              <ListItemIcon className={css.listIcon}>\n                <SvgIcon component={FileIcon} inheritViewBox fontSize=\"small\" sx={{ fill: 'none' }} />\n              </ListItemIcon>\n              <ListItemText\n                {...item}\n                // <ul> cannot appear as a descendant of <p>\n                secondaryTypographyProps={{ component: 'div' }}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  )\n}\n","import { DialogContent, Alert, AlertTitle, DialogActions, Button, Box, SvgIcon } from '@mui/material'\nimport type { ReactElement, Dispatch, SetStateAction } from 'react'\n\nimport ModalDialog from '@/components/common/ModalDialog'\nimport { useAppDispatch } from '@/store'\nimport { trackEvent, SETTINGS_EVENTS } from '@/services/analytics'\nimport { addedSafesSlice } from '@/store/addedSafesSlice'\nimport { addressBookSlice } from '@/store/addressBookSlice'\nimport { safeAppsSlice } from '@/store/safeAppsSlice'\nimport { settingsSlice } from '@/store/settingsSlice'\nimport { FileListCard } from '@/components/settings/DataManagement/FileListCard'\nimport { useGlobalImportJsonParser } from '@/components/settings/DataManagement/useGlobalImportFileParser'\nimport FileIcon from '@/public/images/settings/data/file.svg'\nimport { ImportFileUpload } from '@/components/settings/DataManagement/ImportFileUpload'\nimport { showNotification } from '@/store/notificationsSlice'\n\nimport css from './styles.module.css'\n\nexport const ImportDialog = ({\n  onClose,\n  fileName = '',\n  setFileName,\n  jsonData = '',\n  setJsonData,\n}: {\n  onClose?: () => void\n  fileName: string | undefined\n  setFileName: Dispatch<SetStateAction<string | undefined>>\n  jsonData: string | undefined\n  setJsonData: Dispatch<SetStateAction<string | undefined>>\n}): ReactElement => {\n  const dispatch = useAppDispatch()\n  const { addedSafes, addedSafesCount, addressBook, addressBookEntriesCount, settings, safeApps, error } =\n    useGlobalImportJsonParser(jsonData)\n\n  const isDisabled = (!addedSafes && !addressBook && !settings && !safeApps) || !!error\n\n  const handleClose = () => {\n    setFileName(undefined)\n    setJsonData(undefined)\n    onClose?.()\n  }\n\n  const handleImport = () => {\n    if (addressBook) {\n      dispatch(addressBookSlice.actions.setAddressBook(addressBook))\n      trackEvent({\n        ...SETTINGS_EVENTS.DATA.IMPORT_ADDRESS_BOOK,\n        label: addressBookEntriesCount,\n      })\n    }\n    if (addedSafes) {\n      dispatch(addedSafesSlice.actions.setAddedSafes(addedSafes))\n      trackEvent({\n        ...SETTINGS_EVENTS.DATA.IMPORT_ADDED_SAFES,\n        label: addedSafesCount,\n      })\n    }\n\n    if (settings) {\n      dispatch(settingsSlice.actions.setSettings(settings))\n      trackEvent(SETTINGS_EVENTS.DATA.IMPORT_SETTINGS)\n    }\n\n    if (safeApps) {\n      dispatch(safeAppsSlice.actions.setSafeApps(safeApps))\n      trackEvent(SETTINGS_EVENTS.DATA.IMPORT_SAFE_APPS)\n    }\n\n    dispatch(\n      showNotification({\n        variant: 'success',\n        groupKey: 'global-import-success',\n        message: 'Successfully imported data',\n      }),\n    )\n\n    handleClose()\n  }\n\n  return (\n    <ModalDialog open onClose={handleClose} dialogTitle=\"Data import\" hideChainIndicator>\n      <DialogContent>\n        {!jsonData || !fileName ? (\n          <Box mt={2}>\n            <ImportFileUpload setFileName={setFileName} setJsonData={setJsonData} />\n          </Box>\n        ) : (\n          <>\n            <FileListCard\n              avatar={\n                <Box sx={{ borderRadius: ({ shape }) => `${shape.borderRadius}px` }}>\n                  <SvgIcon\n                    component={FileIcon}\n                    inheritViewBox\n                    fontSize=\"small\"\n                    sx={{ fill: 'none', display: 'block' }}\n                  />\n                </Box>\n              }\n              title={<b>{fileName}</b>}\n              className={css.header}\n              addedSafes={addedSafes}\n              addressBook={addressBook}\n              settings={settings}\n              safeApps={safeApps}\n              error={error}\n              showPreview\n            />\n            {!isDisabled && (\n              <Alert severity=\"warning\">\n                <AlertTitle sx={{ fontWeight: 700 }}>Overwrite your current data?</AlertTitle>\n                This action will overwrite your currently added Safe Accounts, address book and settings with those from\n                the imported file.\n              </Alert>\n            )}\n          </>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleImport} variant=\"contained\" disableElevation disabled={isDisabled}>\n          Import\n        </Button>\n      </DialogActions>\n    </ModalDialog>\n  )\n}\n","import { useDropzone } from 'react-dropzone'\nimport { Typography, SvgIcon } from '@mui/material'\nimport { useCallback } from 'react'\nimport type { Dispatch, SetStateAction } from 'react'\n\nimport FileUpload, { FileTypes } from '@/components/common/FileUpload'\nimport InfoIcon from '@/public/images/notifications/info.svg'\n\nconst AcceptedMimeTypes = {\n  'application/json': ['.json'],\n}\n\nexport const ImportFileUpload = ({\n  setFileName,\n  setJsonData,\n}: {\n  setFileName: Dispatch<SetStateAction<string | undefined>>\n  setJsonData: Dispatch<SetStateAction<string | undefined>>\n}) => {\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      if (acceptedFiles.length === 0) {\n        return\n      }\n      const file = acceptedFiles[0]\n      const reader = new FileReader()\n      reader.onload = (event) => {\n        if (!event.target) {\n          return\n        }\n        if (typeof event.target.result !== 'string') {\n          return\n        }\n        setFileName(file.name)\n        setJsonData(event.target.result)\n      }\n      reader.readAsText(file)\n    },\n    [setFileName, setJsonData],\n  )\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject } = useDropzone({\n    maxFiles: 1,\n    onDrop,\n    accept: AcceptedMimeTypes,\n  })\n\n  const onRemove = () => {\n    setFileName(undefined)\n    setJsonData(undefined)\n  }\n\n  return (\n    <>\n      <Typography>Import {'Safe{Wallet}'} data by clicking or dragging a file below.</Typography>\n\n      <FileUpload\n        fileType={FileTypes.JSON}\n        getRootProps={() => ({ ...getRootProps(), height: '228px' })}\n        getInputProps={getInputProps}\n        isDragActive={isDragActive}\n        isDragReject={isDragReject}\n        onRemove={onRemove}\n      />\n\n      <Typography>\n        <SvgIcon\n          component={InfoIcon}\n          inheritViewBox\n          fontSize=\"small\"\n          color=\"border\"\n          sx={{\n            verticalAlign: 'middle',\n            mr: 0.5,\n          }}\n        />\n        Only JSON files exported from a {'Safe{Wallet}'} can be imported.\n      </Typography>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { Paper, Grid, Typography, Button, SvgIcon, Box } from '@mui/material'\n\nimport FileIcon from '@/public/images/settings/data/file.svg'\nimport ExportIcon from '@/public/images/common/export.svg'\nimport { getPersistedState, useAppSelector } from '@/store'\nimport { addressBookSlice, selectAllAddressBooks } from '@/store/addressBookSlice'\nimport { addedSafesSlice, selectAllAddedSafes } from '@/store/addedSafesSlice'\nimport { safeAppsSlice, selectSafeApps } from '@/store/safeAppsSlice'\nimport { selectSettings, settingsSlice } from '@/store/settingsSlice'\nimport InfoIcon from '@/public/images/notifications/info.svg'\nimport ExternalLink from '@/components/common/ExternalLink'\nimport { ImportFileUpload } from '@/components/settings/DataManagement/ImportFileUpload'\nimport { ImportDialog } from '@/components/settings/DataManagement/ImportDialog'\nimport { SAFE_EXPORT_VERSION } from '@/components/settings/DataManagement/useGlobalImportFileParser'\nimport { FileListCard } from '@/components/settings/DataManagement/FileListCard'\nimport { SETTINGS_EVENTS, trackEvent } from '@/services/analytics'\n\nimport css from './styles.module.css'\n\nconst getExportFileName = () => {\n  const today = new Date().toISOString().slice(0, 10)\n  return `safe-${today}.json`\n}\n\nexport const exportAppData = () => {\n  // Extract the slices we want to export\n  const {\n    [addressBookSlice.name]: addressBook,\n    [addedSafesSlice.name]: addedSafes,\n    [settingsSlice.name]: setting,\n    [safeAppsSlice.name]: safeApps,\n  } = getPersistedState()\n\n  // Ensure they are under the same name as the slice\n  const exportData = {\n    [addressBookSlice.name]: addressBook,\n    [addedSafesSlice.name]: addedSafes,\n    [settingsSlice.name]: setting,\n    [safeAppsSlice.name]: safeApps,\n  }\n\n  const data = JSON.stringify({ version: SAFE_EXPORT_VERSION.V2, data: exportData })\n\n  const blob = new Blob([data], { type: 'text/json' })\n  const link = document.createElement('a')\n\n  link.download = getExportFileName()\n  link.href = window.URL.createObjectURL(blob)\n  link.dataset.downloadurl = ['text/json', link.download, link.href].join(':')\n  link.dispatchEvent(new MouseEvent('click'))\n\n  trackEvent(SETTINGS_EVENTS.DATA.EXPORT_ALL_BUTTON)\n}\n\nconst DataManagement = () => {\n  const [exportFileName, setExportFileName] = useState('')\n  const [importFileName, setImportFileName] = useState<string>()\n  const [jsonData, setJsonData] = useState<string>()\n\n  const addedSafes = useAppSelector(selectAllAddedSafes)\n  const addressBook = useAppSelector(selectAllAddressBooks)\n  const settings = useAppSelector(selectSettings)\n  const safeApps = useAppSelector(selectSafeApps)\n\n  useEffect(() => {\n    // Prevent hydration errors\n    setExportFileName(getExportFileName())\n  }, [])\n\n  return (\n    <>\n      <Paper sx={{ p: 4, mb: 2 }}>\n        <Grid container spacing={3}>\n          <Grid item sm={4} xs={12}>\n            <Typography variant=\"h4\" fontWeight={700}>\n              Data export\n            </Typography>\n          </Grid>\n\n          <Grid item container xs>\n            <Typography>Download your local data with your added Safe Accounts, address book and settings.</Typography>\n\n            <FileListCard\n              avatar={\n                <Box className={css.fileIcon} sx={{ borderRadius: ({ shape }) => `${shape.borderRadius}px` }}>\n                  <SvgIcon component={FileIcon} inheritViewBox fontSize=\"small\" sx={{ fill: 'none' }} />\n                </Box>\n              }\n              title={<b>{exportFileName}</b>}\n              action={\n                <Button variant=\"contained\" className={css.exportIcon} onClick={exportAppData}>\n                  <SvgIcon component={ExportIcon} inheritViewBox fontSize=\"small\" />\n                </Button>\n              }\n              addedSafes={addedSafes}\n              addressBook={addressBook}\n              settings={settings}\n              safeApps={safeApps}\n            />\n            <Typography>\n              <SvgIcon\n                component={InfoIcon}\n                inheritViewBox\n                fontSize=\"small\"\n                color=\"border\"\n                sx={{\n                  verticalAlign: 'middle',\n                  mr: 0.5,\n                }}\n              />\n              You can also export your data from the{' '}\n              <ExternalLink href=\"https://gnosis-safe.io/app/export\">old app</ExternalLink>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Paper sx={{ p: 4 }}>\n        <Grid container spacing={3}>\n          <Grid item sm={4} xs={12}>\n            <Typography variant=\"h4\" fontWeight={700}>\n              Data import\n            </Typography>\n          </Grid>\n\n          <Grid item xs>\n            <ImportFileUpload setFileName={setImportFileName} setJsonData={setJsonData} />\n          </Grid>\n\n          {jsonData && (\n            <ImportDialog\n              jsonData={jsonData}\n              fileName={importFileName}\n              setJsonData={setJsonData}\n              setFileName={setImportFileName}\n            />\n          )}\n        </Grid>\n      </Paper>\n    </>\n  )\n}\n\nexport default DataManagement\n","import { logError } from '@/services/exceptions'\nimport ErrorCodes from '@/services/exceptions/ErrorCodes'\nimport { migrateAddedSafes } from '@/services/ls-migration/addedSafes'\nimport { migrateAddressBook } from '@/services/ls-migration/addressBook'\nimport { isChecksummedAddress } from '@/utils/addresses'\nimport type { AddressBook, AddressBookState } from '@/store/addressBookSlice'\nimport type { AddedSafesState } from '@/store/addedSafesSlice'\nimport type { SafeAppsState } from '@/store/safeAppsSlice'\nimport type { SettingsState } from '@/store/settingsSlice'\n\nimport { useMemo } from 'react'\n\nexport const enum SAFE_EXPORT_VERSION {\n  V1 = '1.0',\n  V2 = '2.0',\n}\n\nexport enum ImportErrors {\n  INVALID_VERSION = 'The file is not a Safe{Wallet} export.',\n  INVALID_JSON_FORMAT = 'The JSON format is invalid.',\n  NO_IMPORT_DATA_FOUND = 'This file contains no importable data.',\n}\n\nconst countEntries = (data: { [chainId: string]: { [address: string]: unknown } }) =>\n  Object.values(data).reduce<number>((count, entry) => count + Object.keys(entry).length, 0)\n\nexport const _filterValidAbEntries = (ab?: AddressBookState): AddressBookState | undefined => {\n  if (!ab) {\n    return undefined\n  }\n\n  return Object.entries(ab).reduce<AddressBookState>((acc, [chainId, chainAb]) => {\n    const sanitizedChainAb = Object.entries(chainAb).reduce<AddressBook>((acc, [address, name]) => {\n      // Legacy imported address books could have undefined name or address entries\n      if (name?.trim() && address && isChecksummedAddress(address)) {\n        acc[address] = name\n      }\n      return acc\n    }, {})\n\n    if (Object.keys(sanitizedChainAb).length > 0) {\n      acc[chainId] = sanitizedChainAb\n    }\n\n    return acc\n  }, {})\n}\n\n/**\n * The global import currently imports:\n * 1.0:\n *  - address book\n *  - added Safes\n *\n * 2.0:\n *  - address book\n *  - added Safes\n *  - safeApps\n *  - settings\n *\n * @param jsonData\n * @returns data to import and some insights about it\n */\n\ntype Data = {\n  addedSafes?: AddedSafesState\n  addressBook?: AddressBookState\n  settings?: SettingsState\n  safeApps?: SafeAppsState\n  error?: ImportErrors\n  addressBookEntriesCount: number\n  addedSafesCount: number\n}\n\nexport const useGlobalImportJsonParser = (jsonData: string | undefined): Data => {\n  return useMemo(() => {\n    const data: Data = {\n      addressBookEntriesCount: 0,\n      addedSafesCount: 0,\n      addressBook: undefined,\n      addedSafes: undefined,\n      settings: undefined,\n      safeApps: undefined,\n    }\n\n    if (!jsonData) {\n      return data\n    }\n\n    let parsedFile\n\n    try {\n      parsedFile = JSON.parse(jsonData)\n    } catch (err) {\n      logError(ErrorCodes._704, err)\n\n      data.error = ImportErrors.INVALID_JSON_FORMAT\n      return data\n    }\n\n    if (!parsedFile.data || Object.keys(parsedFile.data).length === 0) {\n      data.error = ImportErrors.NO_IMPORT_DATA_FOUND\n      return data\n    }\n\n    switch (parsedFile.version) {\n      case SAFE_EXPORT_VERSION.V1: {\n        data.addressBook = migrateAddressBook(parsedFile.data) ?? undefined\n        data.addedSafes = migrateAddedSafes(parsedFile.data) ?? undefined\n\n        break\n      }\n\n      case SAFE_EXPORT_VERSION.V2: {\n        data.addressBook = _filterValidAbEntries(parsedFile.data.addressBook)\n        data.addedSafes = parsedFile.data.addedSafes\n        data.settings = parsedFile.data.settings\n        data.safeApps = parsedFile.data.safeApps\n\n        break\n      }\n\n      default: {\n        data.error = ImportErrors.INVALID_VERSION\n      }\n    }\n\n    data.addressBookEntriesCount = data.addressBook ? countEntries(data.addressBook) : 0\n    data.addedSafesCount = data.addedSafes ? countEntries(data.addedSafes) : 0\n\n    return data\n  }, [jsonData])\n}\n","import chains from '@/config/chains'\nimport { type AddressBookState } from '@/store/addressBookSlice'\nimport { isChecksummedAddress } from '@/utils/addresses'\nimport type { LOCAL_STORAGE_DATA } from './common'\nimport { parseLsValue } from './common'\n\nconst OLD_LS_KEY = 'SAFE__addressBook'\n\ntype OldAddressBook = Array<{ address: string; name: string; chainId: string }>\n\nexport const migrateAddressBook = (lsData: LOCAL_STORAGE_DATA): AddressBookState | void => {\n  const legacyAb = parseLsValue<OldAddressBook>(lsData[OLD_LS_KEY])\n  if (Array.isArray(legacyAb)) {\n    console.log('Migrating address book')\n\n    const newAb = legacyAb.reduce<AddressBookState>((acc, { address, name, chainId }) => {\n      if (!name || !address || !isChecksummedAddress(address) || chainId === chains.rin) {\n        return acc\n      }\n      acc[chainId] = acc[chainId] || {}\n      acc[chainId][address] = name\n      return acc\n    }, {})\n\n    if (Object.keys(newAb).length > 0) {\n      return newAb\n    }\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropbox\":\"styles_dropbox__X4BLs\",\"verticalLine\":\"styles_verticalLine__jbh_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__uAg2o\",\"fileIcon\":\"styles_fileIcon__5SNJ1\",\"exportIcon\":\"styles_exportIcon__EtYlQ\",\"header\":\"styles_header__kHd1O\",\"content\":\"styles_content__T2lkN\",\"listIcon\":\"styles_listIcon__4W6BA\",\"networkIcon\":\"styles_networkIcon__5Rop1\"};"],"names":["_path","_path2","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","title","titleId","props","width","height","viewBox","fill","xmlns","id","fillRule","clipRule","d","_path3","_path4","_path5","stroke","strokeWidth","strokeLinecap","strokeLinejoin","FileTypes","JSON","CSV","ColoredFileIcon","color","SvgIcon","component","FileIcon","inheritViewBox","fontSize","sx","UploadSummary","fileInfo","onRemove","Grid","container","direction","gap","mt","display","alignItems","item","xs","name","additionalInfo","justifyContent","IconButton","onClick","size","HighlightOffIcon","div","className","css","summary","map","summaryItem","idx","Typography","error","strong","getRootProps","getInputProps","isDragReject","isDragActive","fileType","Box","cursor","undefined","background","palette","light","border","dark","primary","main","secondary","input","Link","href","getItemSecondaryText","chains","data","singular","plural","List","p","chainId","count","chain","find","ListItem","m","backgroundColor","theme","chainName","FileListCard","addedSafes","addressBook","settings","safeApps","showPreview","cardHeaderProps","items","addedSafeChainAmount","addressBookChainAmount","addedSafesPreview","b","push","addressBookPreview","settingsPreview","values","some","pinned","safeAppsPreview","ImportErrors","getItems","useChains","configs","Card","CardHeader","CardContent","ListItemIcon","ListItemText","secondaryTypographyProps","ImportDialog","onClose","fileName","setFileName","jsonData","setJsonData","dispatch","useAppDispatch","useGlobalImportJsonParser","addedSafesCount","addressBookEntriesCount","isDisabled","handleClose","ModalDialog","open","dialogTitle","hideChainIndicator","DialogContent","avatar","borderRadius","shape","Alert","severity","AlertTitle","fontWeight","ImportFileUpload","DialogActions","Button","addressBookSlice","trackEvent","SETTINGS_EVENTS","label","addedSafesSlice","settingsSlice","safeAppsSlice","showNotification","variant","groupKey","message","disableElevation","disabled","AcceptedMimeTypes","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onload","event","result","readAsText","useDropzone","maxFiles","accept","FileUpload","InfoIcon","verticalAlign","mr","getExportFileName","today","Date","toISOString","slice","exportAppData","getPersistedState","exportData","setting","stringify","version","SAFE_EXPORT_VERSION","blob","Blob","type","link","document","createElement","download","window","URL","createObjectURL","dataset","downloadurl","join","dispatchEvent","MouseEvent","useState","exportFileName","setExportFileName","importFileName","setImportFileName","useAppSelector","selectAllAddedSafes","selectAllAddressBooks","selectSettings","selectSafeApps","useEffect","Paper","mb","spacing","sm","action","ExportIcon","ExternalLink","countEntries","reduce","entry","useMemo","parsedFile","parse","err","logError","ErrorCodes","INVALID_JSON_FORMAT","NO_IMPORT_DATA_FOUND","migrateAddressBook","migrateAddedSafes","lsData","legacyAb","parseLsValue","Array","isArray","console","log","newAb","acc","address","isChecksummedAddress","ab","entries","chainAb","sanitizedChainAb","trim","_filterValidAbEntries","INVALID_VERSION","module","exports"],"sourceRoot":""}