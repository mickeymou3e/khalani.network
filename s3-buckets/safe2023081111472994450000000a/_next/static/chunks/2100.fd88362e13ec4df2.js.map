{"version":3,"file":"static/chunks/2100.fd88362e13ec4df2.js","mappings":"yHAIIA,EAAK,IAAIC,EAFJ,aAEO,aACZC,EAAgB,EAAAC,EAAOC,QAAU,EAAAD,EAAOE,UAAY,GACpDC,EAASJ,EAAcI,QAAUJ,EAAcK,aAE/CC,EAAa,EAAQ,OAEzB,MAAMC,EAAiBC,EAAOC,KAAK,mEAAoE,OACjGC,EAASF,EAAOG,MAAM,GAAI,GAEhC,SAASC,EAAOC,EAAWC,GACzB,IAAKD,EACH,MAAM,IAAIE,MAAMD,GAAW,oBAQ/B,SAASE,EAAkBC,GACzB,OALiBC,EAKHD,KAJPT,EAAOW,SAASD,IAAmB,KAAbA,EAAEE,UAQxBH,EAAWI,QAAQX,GAAU,GACpCO,EAAWI,QAAQd,GAAkB,GAVvC,IAAmBW,EA4BnB,SAASI,EAAYC,GACnB,IAAIC,EAAM,IAAIC,WAAWF,GACzB,MAA6C,qBAAlCvB,EAAc0B,gBAChBlB,EAAOC,KAAKH,EAAWgB,YAAYC,KAE1CvB,EAAc0B,gBAAgBF,GAEzBhB,EAAOC,KAAKe,IAGrB,SAASG,EAAOC,GACd,OAAO,IAAIC,SAAQ,SAASC,GAC1B,IACIC,EADOzB,EAAW0B,WAAW,UACfC,OAAOL,GAAKM,SAC9BJ,EAAQ,IAAIL,WAAWM,OAI3B,SAASI,EAAOC,GACd,OAAO,SAASC,EAAIC,EAAKC,GACvB,OAAO,IAAIV,SAAQ,SAASC,GAC1B,GAAI1B,EAAQ,CAGV,OADWA,EAAOoC,UAAU,MAAOF,EADb,CAACG,KAAM,YAC4B,EAAO,CAACL,IACrDM,MAAK,SAASC,GACxB,IAAIC,EAAe,CAACH,KAAM,UAAWJ,GAAIA,GACzC,OAAOjC,EAAOgC,GAAIQ,EAAcD,EAAWJ,MAC1CG,MAAK,SAASX,GACfD,EAAQtB,EAAOC,KAAK,IAAIgB,WAAWM,QAGrC,GAAW,YAAPK,EAAkB,CACpB,IAAIS,EAASvC,EAAWwC,eAAe,cAAeR,EAAKD,GAC3D,IAAIU,EAAaF,EAAOZ,OAAOM,GAC3BS,EAAcH,EAAOI,QACzBnB,EAAQtB,EAAO0C,OAAO,CAACH,EAAYC,UAEhC,GAAW,YAAPZ,EAAkB,CACzB,IAAIe,EAAW7C,EAAW8C,iBAAiB,cAAed,EAAKD,GAC/D,IAAIU,EAAaI,EAASlB,OAAOM,GAC7BS,EAAcG,EAASF,QAC3BnB,EAAQtB,EAAO0C,OAAO,CAACH,EAAYC,UAO7C,IAAIK,EAAgBlB,EAAO,WACvBmB,EAAgBnB,EAAO,WAkC3B,IAAIoB,EAAgC,SAAStC,GAM3C,OAJAL,EAA6B,KAAtBK,EAAWG,OAAe,mBACjCR,EAAOI,EAAkBC,GAAa,mBAG/BT,EAAOC,KAAKX,EAAG0D,eAAevC,GAAYsC,UAAU,SAkD7D,IAAIE,EAA0B,SAASC,EAAaC,GAClD,OAAO,IAAI9B,SAAQ,SAASC,GAC1BlB,EAAOJ,EAAOW,SAASuC,GAAc,mBACrC9C,EAAOJ,EAAOW,SAASwC,GAAa,kBACpC/C,EAA8B,KAAvB8C,EAAYtC,OAAe,mBAClCR,EAAOI,EAAkB0C,GAAc,mBACvC9C,EAA6B,KAAtB+C,EAAWvC,QAAuC,KAAtBuC,EAAWvC,OAAe,kBACnC,KAAtBuC,EAAWvC,QAEbR,EAAyB,IAAlB+C,EAAW,GAAU,kBAEJ,KAAtBA,EAAWvC,QAEbR,EAAyB,IAAlB+C,EAAW,IAA8B,IAAlBA,EAAW,GAAU,kBAErD,IAAIC,EAAO9D,EAAG0D,eAAeE,GACzBG,EAAO/D,EAAGgE,cAAcH,GACxBI,EAAKH,EAAKH,OAAOI,EAAKN,aAC1BzB,EAAQtB,EAAOC,KAAKsD,EAAGC,gBAI3BC,EAAQ,GAAU,SAASC,EAAatC,EAAKuC,GAG3C,IAAI9B,EAAI+B,EAAgBC,EAAYC,EACpC,OAHAH,EAAOA,GAAQ,GAGR,IAAItC,SAAQ,SAASC,GAG1B,IAFA,IAAIyC,EAAkBJ,EAAKI,iBAAmBjD,EAAY,KAEnDN,EAAkBuD,IAEvBA,EAAkBJ,EAAKI,iBAAmBjD,EAAY,IAExD8C,EAAiBb,EAAUgB,GAC3BzC,EAAQ2B,EAAOc,EAAiBL,OAC/BxB,MAAK,SAASqB,GACf,OAAOpC,EAAOoC,MACbrB,MAAK,SAAS8B,GACfnC,EAAK8B,EAAK9B,IAAMf,EAAY,IAC5B,IAAImD,EAAgBD,EAAKE,MAAM,EAAG,IAElC,OADAJ,EAASE,EAAKE,MAAM,IACbrB,EAAchB,EAAIoC,EAAe7C,MACvCc,MAAK,SAASH,GACf8B,EAAa9B,EACb,IAAIoC,EAAYnE,EAAO0C,OAAO,CAACb,EAAI+B,EAAgBC,IACnD,OArIJ,SAAwB/B,EAAKV,GAC3B,OAAO,IAAIC,SAAQ,SAASC,GAC1B,IAAI8C,EAAOtE,EAAWuE,WAAW,SAAUrE,EAAOC,KAAK6B,IACvDsC,EAAK3C,OAAOL,GAEZE,EADa8C,EAAK1C,aAiIX4C,CAAeR,EAAQK,MAC7BjC,MAAK,SAASqC,GACf,MAAO,CACL1C,GAAIA,EACJ+B,eAAgBA,EAChBC,WAAYA,EACZU,IAAKA,OAKXd,EAAQ,GAAU,SAAShD,EAAYkD,GAErC,IAAIM,EACJ,OAAOhB,EAAOxC,EAAYkD,EAAKC,gBAAgB1B,MAAK,SAASqB,GAC3D,OAAOpC,EAAOoC,MACbrB,MAAK,SAAS8B,GACfC,EAAgBD,EAAKE,MAAM,EAAG,IAC9B,IA9IsBpC,EAAKV,EAAKoD,EA8I5BV,EAASE,EAAKE,MAAM,IACpBC,EAAYnE,EAAO0C,OAAO,CAC5BiB,EAAK9B,GACL8B,EAAKC,eACLD,EAAKE,aAEP,OApJsB/B,EAoJEgC,EApJG1C,EAoJK+C,EApJAK,EAoJWb,EAAKY,IAnJ3C,IAAIlD,SAAQ,SAASC,GAC1B,IAAI8C,EAAOtE,EAAWuE,WAAW,SAAUrE,EAAOC,KAAK6B,IACvDsC,EAAK3C,OAAOL,GAEZE,EA/EJ,SAAwBmD,EAAIC,GAC1B,GAAID,EAAG7D,SAAW8D,EAAG9D,OACnB,OAAO,EAGT,IADA,IAAI+D,EAAM,EACDC,EAAI,EAAGA,EAAIH,EAAG7D,OAAQgE,IAC7BD,GAAOF,EAAGG,GAAKF,EAAGE,GAEpB,OAAe,IAARD,EAuEGE,CADUT,EAAK1C,SACa8C,UAgJnCtC,MAAK,SAAS4C,GAEf,OADA1E,EAAO0E,EAAS,WACThC,EAAca,EAAK9B,GAAIoC,EAAeN,EAAKE,eACjD3B,MAAK,SAASd,GACf,OAAOpB,EAAOC,KAAK,IAAIgB,WAAWG,S,ozCCjQlC2D,EAAY,YA0BD,SAASC,EAAeC,GACrC,IAAIxE,EApBC,SAA0BwE,GAC/B,GAAIA,EAAS,CACX,IAAKjF,EAAOW,SAASsE,GAAU,MAAM,IAAI1E,MAAM,4DAC/C,GAAIP,EAAOkF,WAAWD,EAAS,QAXZ,IAWwC,MAAM,IAAI1E,MAAM,mEAE3E,OADewE,EAAUE,GAGzB,IAAIE,EAAWJ,EAAU,SAAmB,CAAC,IAAwB,IAAK,IAAwB,OAC9FK,EAAY,SAAmB,CAAC,SAAmB,CAAC,IAAwB,IAAKD,IAAY,IAAwB,MAEzH,OADgBJ,EAAUK,GAWXC,CAAiBJ,GAC9BK,EAAS,IAAI,EAAAC,OAAO9E,GAOxB,MANe,CACbA,WAAYA,EAEZ+E,WAAW,IAAAC,gBAAeH,EAAOE,WAAWtB,MAAM,GAClDwB,QAASJ,EAAOI,S,iCCpCb,SAASC,EAAgBC,GAC9B,OAAIA,EAAIC,WAAW,MAAcD,EAAIE,UAAU,GAAeF,EAEzD,SAASG,EAAaH,GAC3B,OAAKA,EAAIC,WAAW,MAAqCD,EAAvB,KAAOA,EAEpC,SAASI,EAAgBhF,GAC9B,OAAO,EAAOf,KAAKe,GAAKiF,SAAS,OAE5B,SAASC,EAAgBN,GAC9B,OAAO,IAAI3E,WAAW,EAAOhB,KAAK2F,EAAK,Q,sBCPlC,SAASO,EAASC,GAIvB,OAD0B,KADT,EAAOnG,KAAKmG,EAAc,OAC5BxF,SAAewF,EAAe,KAAOA,GAC7CJ,GAAgB,IAAAK,kBAAiBH,EAAgBE,IAAe,IAElE,SAASE,EAAWC,GAGC,KADT,EAAOtG,KAAKsG,EAAkB,OAChC3F,SAAe2F,EAAmB,KAAOA,GACxD,IAAIC,EAAeR,GAAgB,IAAAK,kBAAiBH,EAAgBK,IAAmB,IAIvF,OADAC,EAAeA,EAAaV,UAAU,GASjC,SAASW,EAAUjB,GAExBA,EAAYc,EAAWd,GACvB,IAAIkB,GAAgB,IAAAC,eAAa,IAAAC,UAASb,EAAaP,KAEvD,OADqB,IAAAqB,mBAAkBd,EAAaW,EAAcT,SAAS,S,iCC5BtE,SAASa,EAAUzE,GACxB,GAAsB,kBAAXA,EAAqB,OAAOA,EAGvC,IAAI0E,EAAgBZ,EAAS9D,EAAOuB,gBAUpC,OATU,EAAOlB,OAAO,CAAC,EAAOzC,KAAKoC,EAAOR,GAAI,OAEhD,EAAO5B,KAAK8G,EAAe,OAE3B,EAAO9G,KAAKoC,EAAOkC,IAAK,OAExB,EAAOtE,KAAKoC,EAAOwB,WAAY,SAGpBoC,SAAS,OAEf,SAASe,EAAMpB,GACpB,GAAmB,kBAARA,EAAkB,OAAOA,EACpC,IAAIqB,EAAM,EAAOhH,KAAK2F,EAAK,OACvBsB,EAAM,CACRrF,GAAIoF,EAAIhB,SAAS,MAAO,EAAG,IAC3BrC,eAAgBqD,EAAIhB,SAAS,MAAO,GAAI,IACxC1B,IAAK0C,EAAIhB,SAAS,MAAO,GAAI,IAC7BpC,WAAYoD,EAAIhB,SAAS,MAAO,GAAIgB,EAAIrG,SAK1C,OADAsG,EAAItD,eAAiB,KAAO0C,EAAWY,EAAItD,gBACpCsD,E,sBC1BM,SAASC,EAAsB1G,EAAY2G,GACxDA,EAAYJ,EAAMI,GAGlB,IAAIC,EAAc1B,EAAgBlF,GAC9B6G,EAAkB,CACpBzF,GAAI,EAAO5B,KAAKmH,EAAUvF,GAAI,OAC9B+B,eAAgB,EAAO3D,KAAKmH,EAAUxD,eAAgB,OACtDC,WAAY,EAAO5D,KAAKmH,EAAUvD,WAAY,OAC9CU,IAAK,EAAOtE,KAAKmH,EAAU7C,IAAK,QAElC,OAAO,QAAQ,EAAOtE,KAAKoH,EAAa,OAAQC,GAAiBpF,MAAK,SAAUqF,GAC9E,OAAOA,EAAgBtB,c,sBCbZ,SAASuB,EAAqBhC,EAAWlF,EAASqD,GAK/D,IAAI8D,EAAY,MAHhBjC,EAAYc,EAAWd,IAIvB,OAAO,QAAQ,EAAOvF,KAAKwH,EAAW,OAAQ,EAAOxH,KAAKK,GAAUqD,GAAc,IAAIzB,MAAK,SAAUwF,GAOnG,MANgB,CACd7F,GAAI6F,EAAiB7F,GAAGoE,SAAS,OACjCrC,eAAgB8D,EAAiB9D,eAAeqC,SAAS,OACzDpC,WAAY6D,EAAiB7D,WAAWoC,SAAS,OACjD1B,IAAKmD,EAAiBnD,IAAI0B,SAAS,WCJ1B,SAAS0B,EAAsBlH,GAG5C,OAFAA,EAAasF,EAAatF,IACJ,IAAAmH,kBAAgB,IAAAhB,UAASnG,IACxBwF,SAAS,OCHnB,SAAS4B,EAAiBC,EAAW9D,GAIlD,IAAI+D,GAHJD,EAAYnC,EAAgBmC,IAGJhC,UAAU,EAAGgC,EAAUlH,OAAS,GAGpDoH,EAA4B,OAFnBF,EAAU5D,OAAO,GAES,EAAI,EACvC+D,EAASjC,GAAgB,IAAAkC,cAAahC,EAAgB6B,GAAUC,EAAgB9B,EAAgBP,EAAgB3B,KAAQ,IAI5H,OADAiE,EAASA,EAAO/D,MAAM,GCXT,SAASiE,EAAQC,EAAWpE,GAGzC,OADc,EADD6D,EAAiBO,EAAWpE,I,sBCA5B,SAASqE,EAAK5H,EAAYuD,GAEvC,GAAoB,MADpBA,EAAO+B,EAAa/B,IACXpD,OAAe,MAAM,IAAIL,MAAM,kDAAoDyD,GAC5F,IAAIsE,GAAS,eAAe,IAAIrH,WAAW,EAAOhB,KAAK0F,EAAgB3B,GAAO,QAAS,IAAI/C,WAAW,EAAOhB,KAAK0F,EAAgBlF,GAAa,SAC3I8H,EAA8B,IAAjBD,EAAOE,MAAc,KAAO,KAE7C,MADmB,KAAO,EAAOvI,KAAKqI,EAAOR,WAAW7B,SAAS,OAASsC,E,iCCZ7D,SAASE,EAAgBC,EAAOjI,GAC7C,IAAIkI,EAAYC,UAAUhI,OAAS,QAAsBiI,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,GAEhFpD,EAAY,EAAsB/E,GAClCiF,EAAU,EAAmBF,GACjC,GAAIE,GAAWgD,EAAMzI,KAAM,MAAM,IAAIM,MAAM,wFAC3C,IAAIuI,EAAmB,EAAO7I,KAAKQ,EAAWsI,QAAQ,SAAU,IAAK,OACjEC,EAAK,EAAAC,YAAA,WAAuBP,EAAOC,GACnCO,EAAWF,EAAGX,KAAKS,GACnBK,EAAeD,EAASE,YAAYnD,SAAS,OACjD,OAAOkD,ECbM,SAASE,EAAkBrI,EAAKsI,IAClC,MAAPA,GAAeA,EAAMtI,EAAIJ,UAAQ0I,EAAMtI,EAAIJ,QAC/C,IAAK,IAAIgE,EAAI,EAAG2E,EAAO,IAAIC,MAAMF,GAAM1E,EAAI0E,EAAK1E,IAC9C2E,EAAK3E,GAAK5D,EAAI4D,GAEhB,OAAO2E,ECDM,SAASE,EAAmBzI,GACzC,OCJa,SAA4BA,GACzC,GAAIwI,MAAME,QAAQ1I,GAAM,OAAO,EAAiBA,GDGzC,CAAkBA,IELZ,SAA0B2I,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMvJ,KAAK0J,GFInF,CAAgB3I,IGJpC,SAAqC8I,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUjE,SAASkE,KAAKL,GAAG5F,MAAM,GAAI,GAEpD,MADU,WAAN8F,GAAkBF,EAAEM,cAAaJ,EAAIF,EAAEM,YAAYnI,MAC7C,QAAN+H,GAAqB,QAANA,EAAoBR,MAAMvJ,KAAK6J,GACxC,cAANE,GAAqB,2CAA2CK,KAAKL,GAAW,EAAiBF,EAAGC,QAAxG,GHFyD,CAA2B/I,IILvE,WACb,MAAM,IAAIsJ,UAAU,wIJIwE,G,eKH/E,SAASC,EAAiBC,EAAKC,EAAUC,GAEnC,kBAARF,IAAkBA,EAAMG,KAAK3D,MAAMwD,IAG9C,IAAII,EAAU,IAAI,KAAgBJ,EAAK,KAAOC,GAE9C,OADwBG,EAAQC,qBAAqBC,MAAMF,EAASnB,EAAmBiB,IAC9D3I,KCPZ,SAASgJ,EAAyBC,EAAgBC,GAC/D,IACIvF,GADgB,IAAAwF,kBAAgB,IAAAtE,UAASb,EAAaiF,KAAkB,IAAApE,UAASqE,IACzDhF,SAAS,OACrC,OAAO,IAAAY,mBAAkBd,EAAaL,I,eCJjC,SAAS,EAAUyF,GACxB,IAAIC,EAAQ,GACRC,EAAS,GAUb,OATK7B,MAAME,QAAQyB,GAIjBA,EAAOG,SAAQ,SAAUC,GACvBH,EAAMI,KAAKD,EAAEE,MACbJ,EAAOG,KAAKD,EAAEG,WALhBN,EAAMI,KAAK,UACXH,EAAOG,KAAKL,IAOP,YAA8BC,EAAOC,GAEvC,IAAIM,EAAc,mC,kBCRlB,SAAS,EAASC,GACvB,IAAIC,EAASjD,UAAUhI,OAAS,QAAsBiI,IAAjBD,UAAU,IAAmBA,UAAU,GAI5E,GAHAgD,EAAMjG,EAAgBiG,IAGP,IAAXC,EAAiB,OAAO,EAAO5L,KAAK2L,EAAK,OAAO3F,SAAS,UAE7D,IADA,IAAI6F,EAAS,GACNF,EAAIhL,OAAS,GAAK,GAEvBgL,EAAM,IAAMA,EAEd,IAAK,IAAIhH,EAAI,EAAGA,EAAIgH,EAAIhL,OAAQgE,GAAK,EAEnCkH,GAAUC,OAAOC,aAAaC,SAASL,EAAI9F,UAAUlB,EAAGA,EAAI,GAAI,KAElE,OAAOkH,EAEF,SAAS,EAAWI,GACzB,IAAIL,EAASjD,UAAUhI,OAAS,QAAsBiI,IAAjBD,UAAU,IAAmBA,UAAU,GAE5E,IAAe,IAAXiD,EAAiB,CACnB,IAAI3E,EAAM,EAAOjH,KAAKiM,EAAkB,UAAUjG,SAAS,OAC3D,OAAOF,EAAamB,GAGtB,IADA,IAAI0E,EAAM,GACDhH,EAAI,EAAGA,EAAIsH,EAAiBtL,OAAQgE,IAE3CgH,KAAc,GAALhH,EAAS,GAAK,OAASsH,EAAiBC,WAAWvH,GAAGqB,SAAS,KAAK/B,OAAO,GAGtF,OAAO6B,EADP6F,EAAMA,EAAIQ,eC9BL,SAASC,GAAWC,GACzB,IAAItL,EAAM,iBAA2BsL,GACrC,MAAO,CAELC,EAAG,KAAK7J,OAAO1B,EAAIuL,EAAEtG,SAAS,KAC9BuG,EAAGxL,EAAIwL,EACPC,EAAGzL,EAAIyL,GASJ,SAAS,GAASjI,GACvB,OAAO,gBAA0BA,GCLnC,QACEQ,eAAgBA,EAChBQ,UAAW,EACX2B,sBAAuBA,EACvBK,qBAAsBA,EACtBnF,OAAQ,EACRqK,sBAAuB,EACvBvE,QAASA,EACTN,iBAAkBA,EAClBQ,KAAMA,EACNI,gBAAiBA,EACjB8B,iBAAkBA,EAClBQ,yBAA0BA,EAC1B/G,KAAM,EACN4H,IAAK,EACLe,IAAK,EACLC,KAAM,I,0CCjCR,WAAY,IAAIC,oBAAoB,CAAC,IAAI,SAASC,wBAAwBrJ,SAAS,IAAIsJ,QAAQ,SAASC,EAAEC,GAAG,GAAGD,EAAED,QAAQ,OAAOC,EAAED,QAAQE,GAAQ,IAAI,IAAIT,EAAE,EAAEA,EAAEQ,EAAEpM,OAAO4L,IAAK,GAAGQ,EAAER,KAAKS,EAAE,OAAOT,EAAE,OAAO,GAAOU,YAAY,SAASF,GAAG,GAAG/C,OAAOkD,KAAK,OAAOlD,OAAOkD,KAAKH,GAAQ,IAAIC,EAAE,GAAG,IAAI,IAAIT,KAAKQ,EAAEC,EAAEzB,KAAKgB,GAAG,OAAOS,GAAQ3B,QAAQ,SAAS0B,EAAEC,GAAG,GAAGD,EAAE1B,QAAQ,OAAO0B,EAAE1B,QAAQ2B,GAAQ,IAAI,IAAIT,EAAE,EAAEA,EAAEQ,EAAEpM,OAAO4L,IAAKS,EAAED,EAAER,GAAGA,EAAEQ,IAASI,WAAW,WAAW,IAAqC,OAAjCnD,OAAOoD,eAAe,GAAG,IAAI,IAAW,SAASL,EAAEC,EAAET,GAAGvC,OAAOoD,eAAeL,EAAEC,EAAE,CAACK,UAAS,EAAKC,YAAW,EAAMC,cAAa,EAAK9B,MAAMc,KAAK,MAAMQ,GAAG,OAAO,SAASA,EAAEC,EAAET,GAAGQ,EAAEC,GAAGT,IAAnM,GAA8MiB,QAAQ,CAAC,QAAQ,UAAU,OAAO,QAAQ,YAAY,WAAW,WAAW,OAAO,OAAO,MAAM,SAAS,SAAS,aAAa,iBAAiB,SAAS,SAAS,cAAc,YAAY,WAAW,YAAY,qBAAqB,YAAY,qBAAqB,SAAS,OAAO,WAAW,QAAQ,aAAa,WAAW,YAAY,YAAY,SAASC,WAAWA,QAAQxD,UAAU,GAAG,IAAIyD,OAAOlK,QAAQkK,OAAO,SAAoBX,GAAG,KAAKY,gBAAgBD,QAAQ,OAAO,IAAIA,OAAOX,GAAGY,KAAKC,KAAKb,GAAGW,OAAOzD,UAAU4D,aAAa,SAASd,GAAG,KAAKA,aAAaU,SAAU,MAAM,IAAIpD,UAAU,+BAA+B,IAAI2C,EAAEc,SAASC,cAAc,UAAcf,EAAEgB,QAAMhB,EAAEgB,MAAM,IAAGhB,EAAEgB,MAAMC,QAAQ,OAAOH,SAASI,KAAKC,YAAYnB,GAAG,IAAIT,EAAES,EAAEoB,cAAkBrE,EAAEwC,EAAE8B,KAAKxE,EAAE0C,EAAE+B,YAAevE,GAAGF,IAAGA,EAAEK,KAAKqC,EAAE,QAAQxC,EAAEwC,EAAE8B,MAAKhD,QAAQ4B,YAAYF,IAAG,SAAUC,GAAGT,EAAES,GAAGD,EAAEC,MAAM3B,QAAQmC,SAAQ,SAAUR,GAAMD,EAAEC,KAAIT,EAAES,GAAGD,EAAEC,OAAO,IAAIuB,EAAEtB,YAAYV,GAAO5H,EAAEoF,EAAEG,KAAKqC,EAAEoB,KAAKC,MAAuL,OAAjLvC,QAAQ4B,YAAYV,IAAG,SAAUS,IAAMA,KAAKD,IAAmB,IAAhBD,QAAQyB,EAAEvB,MAASD,EAAEC,GAAGT,EAAES,OAAO3B,QAAQmC,SAAQ,SAAUR,GAAQA,KAAKD,GAAII,WAAWJ,EAAEC,EAAET,EAAES,OAAQc,SAASI,KAAKM,YAAYxB,GAAUrI,GAAG+I,OAAOzD,UAAUwE,iBAAiB,WAAW,OAAOJ,KAAKV,KAAKC,OAAOF,OAAOzD,UAAUyE,gBAAgB,SAAS3B,GAAG,IAAIC,EAAEU,OAAOiB,cAAc5B,GAAOR,EAAEoB,KAAKE,aAAab,GAA0D,OAApDD,GAAG1B,QAAQ4B,YAAYD,IAAG,SAAUT,GAAGQ,EAAER,GAAGS,EAAET,MAAaA,GAAGlB,QAAQ4B,YAAYS,OAAOzD,YAAW,SAAU8C,GAAGvJ,QAAQuJ,GAAGW,OAAOX,GAAG,SAASC,GAAG,IAAIT,EAAEmB,OAAOV,GAAG,OAAOT,EAAEQ,GAAGlC,MAAM0B,EAAE,GAAGtI,MAAMiG,KAAKvB,UAAU,QAAQnF,QAAQoL,UAAU,SAAS7B,GAAG,OAAOA,aAAaU,SAASjK,QAAQqL,aAAa,SAAS9B,GAAG,OAAOvJ,QAAQkK,OAAOX,IAAIvJ,QAAQmL,cAAcjB,OAAOiB,cAAc,SAAS5B,GAAG,IAAIC,EAAE,IAAIS,QAAiF,MAA3D,kBAAJV,GAAc1B,QAAQ4B,YAAYF,IAAG,SAAUR,GAAGS,EAAET,GAAGQ,EAAER,MAAaS,KAAqC,qBAAtB8B,sBAAkCA,oBAAoBC,GAAGC,UAAU,KAAI,IAAIC,oBAAoB,GAAGrC,oBAAoB,KAAK,EAAEqC,qBAAqBC,OAAO1L,QAAQyL,qBAAhlF","sources":["webpack://_N_E/./node_modules/eccrypto/browser.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/create-identity.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/util.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/public-key.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/cipher.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/decrypt-with-private-key.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/encrypt-with-public-key.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/public-key-by-private-key.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/recover-public-key.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/recover.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/sign.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/sign-transaction.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/tx-data-by-compiled.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/calculate-contract-address.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/hash.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/hex.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/vrs.js","webpack://_N_E/./node_modules/eth-crypto/dist/es/index.js","webpack://_N_E/./node_modules/next/dist/compiled/vm-browserify/index.js"],"sourcesContent":["\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          let firstChunk = cipher.update(data);\n          let secondChunk = cipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          let firstChunk = decipher.update(data);\n          let secondChunk = decipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return Buffer.from(new Uint8Array(msg));\n  });\n};\n\n","import { utils as ethersUtils, Wallet } from 'ethers';\nimport { stripHexPrefix } from 'ethereumjs-util';\nvar MIN_ENTROPY_SIZE = 128;\nvar keccak256 = ethersUtils.keccak256;\n\n/**\n * create a privateKey from the given entropy or a new one\n * @param  {Buffer} entropy\n * @return {string}\n */\nexport function createPrivateKey(entropy) {\n  if (entropy) {\n    if (!Buffer.isBuffer(entropy)) throw new Error('EthCrypto.createPrivateKey(): given entropy is no Buffer');\n    if (Buffer.byteLength(entropy, 'utf8') < MIN_ENTROPY_SIZE) throw new Error('EthCrypto.createPrivateKey(): Entropy-size must be at least ' + MIN_ENTROPY_SIZE);\n    var outerHex = keccak256(entropy);\n    return outerHex;\n  } else {\n    var innerHex = keccak256(ethersUtils.concat([ethersUtils.randomBytes(32), ethersUtils.randomBytes(32)]));\n    var middleHex = ethersUtils.concat([ethersUtils.concat([ethersUtils.randomBytes(32), innerHex]), ethersUtils.randomBytes(32)]);\n    var _outerHex = keccak256(middleHex);\n    return _outerHex;\n  }\n}\n\n/**\n * creates a new object with\n * private-, public-Key and address\n * @param {Buffer?} entropy if provided, will use that as single random-source\n */\nexport default function createIdentity(entropy) {\n  var privateKey = createPrivateKey(entropy);\n  var wallet = new Wallet(privateKey);\n  var identity = {\n    privateKey: privateKey,\n    // remove trailing '0x04'\n    publicKey: stripHexPrefix(wallet.publicKey).slice(2),\n    address: wallet.address\n  };\n  return identity;\n}","export function removeLeading0x(str) {\n  if (str.startsWith('0x')) return str.substring(2);else return str;\n}\nexport function addLeading0x(str) {\n  if (!str.startsWith('0x')) return '0x' + str;else return str;\n}\nexport function uint8ArrayToHex(arr) {\n  return Buffer.from(arr).toString('hex');\n}\nexport function hexToUnit8Array(str) {\n  return new Uint8Array(Buffer.from(str, 'hex'));\n}","import { publicKeyConvert } from 'secp256k1';\nimport { pubToAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { hexToUnit8Array, uint8ArrayToHex, addLeading0x } from './util';\nexport function compress(startsWith04) {\n  // add trailing 04 if not done before\n  var testBuffer = Buffer.from(startsWith04, 'hex');\n  if (testBuffer.length === 64) startsWith04 = '04' + startsWith04;\n  return uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith04), true));\n}\nexport function decompress(startsWith02Or03) {\n  // if already decompressed an not has trailing 04\n  var testBuffer = Buffer.from(startsWith02Or03, 'hex');\n  if (testBuffer.length === 64) startsWith02Or03 = '04' + startsWith02Or03;\n  var decompressed = uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith02Or03), false));\n\n  // remove trailing 04\n  decompressed = decompressed.substring(2);\n  return decompressed;\n}\n\n/**\n * generates the ethereum-adress of the publicKey\n * We create the checksum-adress which is case-sensitive\n * @returns {string} address\n */\nexport function toAddress(publicKey) {\n  // normalize key\n  publicKey = decompress(publicKey);\n  var addressBuffer = pubToAddress(toBuffer(addLeading0x(publicKey)));\n  var checkSumAdress = toChecksumAddress(addLeading0x(addressBuffer.toString('hex')));\n  return checkSumAdress;\n}","import { compress, decompress } from './public-key';\nexport function stringify(cipher) {\n  if (typeof cipher === 'string') return cipher;\n\n  // use compressed key because it's smaller\n  var compressedKey = compress(cipher.ephemPublicKey);\n  var ret = Buffer.concat([Buffer.from(cipher.iv, 'hex'),\n  // 16bit\n  Buffer.from(compressedKey, 'hex'),\n  // 33bit\n  Buffer.from(cipher.mac, 'hex'),\n  // 32bit\n  Buffer.from(cipher.ciphertext, 'hex') // var bit\n  ]);\n\n  return ret.toString('hex');\n}\nexport function parse(str) {\n  if (typeof str !== 'string') return str;\n  var buf = Buffer.from(str, 'hex');\n  var ret = {\n    iv: buf.toString('hex', 0, 16),\n    ephemPublicKey: buf.toString('hex', 16, 49),\n    mac: buf.toString('hex', 49, 81),\n    ciphertext: buf.toString('hex', 81, buf.length)\n  };\n\n  // decompress publicKey\n  ret.ephemPublicKey = '04' + decompress(ret.ephemPublicKey);\n  return ret;\n}","import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeLeading0x } from './util';\nexport default function decryptWithPrivateKey(privateKey, encrypted) {\n  encrypted = parse(encrypted);\n\n  // remove trailing '0x' from privateKey\n  var twoStripped = removeLeading0x(privateKey);\n  var encryptedBuffer = {\n    iv: Buffer.from(encrypted.iv, 'hex'),\n    ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n    ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n    mac: Buffer.from(encrypted.mac, 'hex')\n  };\n  return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n    return decryptedBuffer.toString();\n  });\n}","import { encrypt } from 'eccrypto';\nimport { decompress } from './public-key';\nexport default function encryptWithPublicKey(publicKey, message, opts) {\n  // ensure its an uncompressed publicKey\n  publicKey = decompress(publicKey);\n\n  // re-add the compression-flag\n  var pubString = '04' + publicKey;\n  return encrypt(Buffer.from(pubString, 'hex'), Buffer.from(message), opts ? opts : {}).then(function (encryptedBuffers) {\n    var encrypted = {\n      iv: encryptedBuffers.iv.toString('hex'),\n      ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n      ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n      mac: encryptedBuffers.mac.toString('hex')\n    };\n    return encrypted;\n  });\n}","import { privateToPublic, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\n\n/**\n * Generate publicKey from the privateKey.\n * This creates the uncompressed publicKey,\n * where 04 has stripped from left\n * @returns {string}\n */\nexport default function publicKeyOfPrivateKey(privateKey) {\n  privateKey = addLeading0x(privateKey);\n  var publicKeyBuffer = privateToPublic(toBuffer(privateKey));\n  return publicKeyBuffer.toString('hex');\n}","import { ecdsaRecover } from 'secp256k1';\nimport { removeLeading0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\nexport default function recoverPublicKey(signature, hash) {\n  signature = removeLeading0x(signature);\n\n  // split into v-value and sig\n  var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n  var vValue = signature.slice(-2); // last 2 chars\n\n  var recoveryNumber = vValue === '1c' ? 1 : 0;\n  var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeLeading0x(hash)), false));\n\n  // remove trailing '04'\n  pubKey = pubKey.slice(2);\n  return pubKey;\n}","import recoverPublicKey from './recover-public-key';\nimport { toAddress as addressByPublicKey } from './public-key';\n\n/**\n * returns the adress with which the messageHash was signed\n * @param  {string} sigString\n * @param  {string} hash\n * @return {string} address\n */\nexport default function recover(sigString, hash) {\n  var pubkey = recoverPublicKey(sigString, hash);\n  var address = addressByPublicKey(pubkey);\n  return address;\n}","import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addLeading0x, removeLeading0x } from './util';\n\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\nexport default function sign(privateKey, hash) {\n  hash = addLeading0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeLeading0x(hash), 'hex')), new Uint8Array(Buffer.from(removeLeading0x(privateKey), 'hex')));\n  var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n  var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n  return newSignature;\n}","import { Transaction } from '@ethereumjs/tx';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport { toAddress as addressByPublicKey } from './public-key';\nexport default function signTransaction(rawTx, privateKey) {\n  var txOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // check if privateKey->address matches rawTx.from\n  var publicKey = publicKeyByPrivateKey(privateKey);\n  var address = addressByPublicKey(publicKey);\n  if (address != rawTx.from) throw new Error('EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey');\n  var privateKeyBuffer = Buffer.from(privateKey.replace(/^.{2}/g, ''), 'hex');\n  var tx = Transaction.fromTxData(rawTx, txOptions);\n  var signedTx = tx.sign(privateKeyBuffer);\n  var serializedTx = signedTx.serialize().toString('hex');\n  return serializedTx;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ContractFactory } from 'ethers';\nexport default function txDataByCompiled(abi, bytecode, args) {\n  // solc returns a string which is often passed instead of the json\n  if (typeof abi === 'string') abi = JSON.parse(abi);\n\n  // Construct a Contract Factory\n  var factory = new ContractFactory(abi, '0x' + bytecode);\n  var deployTransaction = factory.getDeployTransaction.apply(factory, _toConsumableArray(args));\n  return deployTransaction.data;\n}","import { generateAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\nexport default function calculateContractAddress(creatorAddress, nonce) {\n  var addressBuffer = generateAddress(toBuffer(addLeading0x(creatorAddress)), toBuffer(nonce));\n  var address = addressBuffer.toString('hex');\n  return toChecksumAddress(addLeading0x(address));\n}","import { utils as ethersUtils } from 'ethers';\nexport function keccak256(params) {\n  var types = [];\n  var values = [];\n  if (!Array.isArray(params)) {\n    types.push('string');\n    values.push(params);\n  } else {\n    params.forEach(function (p) {\n      types.push(p.type);\n      values.push(p.value);\n    });\n  }\n  return ethersUtils.solidityKeccak256(types, values);\n}\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';","/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\n\nimport { removeLeading0x, addLeading0x } from './util';\nexport function compress(hex) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  hex = removeLeading0x(hex);\n\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n  var string = '';\n  while (hex.length % 4 != 0) {\n    // we need it to be multiple of 4\n    hex = '0' + hex;\n  }\n  for (var i = 0; i < hex.length; i += 4) {\n    // get char from ascii code which goes from 0 to 65536\n    string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n  }\n  return string;\n}\nexport function decompress(compressedString) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) {\n    var ret = Buffer.from(compressedString, 'base64').toString('hex');\n    return addLeading0x(ret);\n  }\n  var hex = '';\n  for (var i = 0; i < compressedString.length; i++) {\n    // get character ascii code and convert to hexa string, adding necessary 0s\n    hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n  }\n  hex = hex.toLowerCase();\n  return addLeading0x(hex);\n}","import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}","import createIdentity from './create-identity';\nimport * as publicKey from './public-key';\nimport decryptWithPrivateKey from './decrypt-with-private-key';\nimport encryptWithPublicKey from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport recover from './recover';\nimport recoverPublicKey from './recover-public-key';\nimport sign from './sign';\nimport signTransaction from './sign-transaction';\nimport txDataByCompiled from './tx-data-by-compiled';\nimport calculateContractAddress from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\nexport default {\n  createIdentity: createIdentity,\n  publicKey: publicKey,\n  decryptWithPrivateKey: decryptWithPrivateKey,\n  encryptWithPublicKey: encryptWithPublicKey,\n  cipher: cipher,\n  publicKeyByPrivateKey: publicKeyByPrivateKey,\n  recover: recover,\n  recoverPublicKey: recoverPublicKey,\n  sign: sign,\n  signTransaction: signTransaction,\n  txDataByCompiled: txDataByCompiled,\n  calculateContractAddress: calculateContractAddress,\n  hash: hash,\n  hex: hex,\n  vrs: vrs,\n  util: util\n};","(function(){var __webpack_modules__={965:function(__unused_webpack_module,exports){var indexOf=function(e,t){if(e.indexOf)return e.indexOf(t);else for(var r=0;r<e.length;r++){if(e[r]===t)return r}return-1};var Object_keys=function(e){if(Object.keys)return Object.keys(e);else{var t=[];for(var r in e)t.push(r);return t}};var forEach=function(e,t){if(e.forEach)return e.forEach(t);else for(var r=0;r<e.length;r++){t(e[r],r,e)}};var defineProp=function(){try{Object.defineProperty({},\"_\",{});return function(e,t,r){Object.defineProperty(e,t,{writable:true,enumerable:false,configurable:true,value:r})}}catch(e){return function(e,t,r){e[t]=r}}}();var globals=[\"Array\",\"Boolean\",\"Date\",\"Error\",\"EvalError\",\"Function\",\"Infinity\",\"JSON\",\"Math\",\"NaN\",\"Number\",\"Object\",\"RangeError\",\"ReferenceError\",\"RegExp\",\"String\",\"SyntaxError\",\"TypeError\",\"URIError\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"undefined\",\"unescape\"];function Context(){}Context.prototype={};var Script=exports.Script=function NodeScript(e){if(!(this instanceof Script))return new Script(e);this.code=e};Script.prototype.runInContext=function(e){if(!(e instanceof Context)){throw new TypeError(\"needs a 'context' argument.\")}var t=document.createElement(\"iframe\");if(!t.style)t.style={};t.style.display=\"none\";document.body.appendChild(t);var r=t.contentWindow;var n=r.eval,o=r.execScript;if(!n&&o){o.call(r,\"null\");n=r.eval}forEach(Object_keys(e),(function(t){r[t]=e[t]}));forEach(globals,(function(t){if(e[t]){r[t]=e[t]}}));var c=Object_keys(r);var i=n.call(r,this.code);forEach(Object_keys(r),(function(t){if(t in e||indexOf(c,t)===-1){e[t]=r[t]}}));forEach(globals,(function(t){if(!(t in e)){defineProp(e,t,r[t])}}));document.body.removeChild(t);return i};Script.prototype.runInThisContext=function(){return eval(this.code)};Script.prototype.runInNewContext=function(e){var t=Script.createContext(e);var r=this.runInContext(t);if(e){forEach(Object_keys(t),(function(r){e[r]=t[r]}))}return r};forEach(Object_keys(Script.prototype),(function(e){exports[e]=Script[e]=function(t){var r=Script(t);return r[e].apply(r,[].slice.call(arguments,1))}}));exports.isContext=function(e){return e instanceof Context};exports.createScript=function(e){return exports.Script(e)};exports.createContext=Script.createContext=function(e){var t=new Context;if(typeof e===\"object\"){forEach(Object_keys(e),(function(r){t[r]=e[r]}))}return t}}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var __webpack_exports__={};__webpack_modules__[965](0,__webpack_exports__);module.exports=__webpack_exports__})();"],"names":["ec","EC","browserCrypto","g","crypto","msCrypto","subtle","webkitSubtle","nodeCrypto","EC_GROUP_ORDER","Buffer","from","ZERO32","alloc","assert","condition","message","Error","isValidPrivateKey","privateKey","x","isBuffer","length","compare","randomBytes","size","arr","Uint8Array","getRandomValues","sha512","msg","Promise","resolve","result","createHash","update","digest","getAes","op","iv","key","data","importKey","name","then","cryptoKey","encAlgorithm","cipher","createCipheriv","firstChunk","secondChunk","final","concat","decipher","createDecipheriv","aesCbcEncrypt","aesCbcDecrypt","getPublic","keyFromPrivate","derive","privateKeyA","publicKeyB","keyA","keyB","keyFromPublic","Px","toArray","exports","publicKeyTo","opts","ephemPublicKey","ciphertext","macKey","ephemPrivateKey","hash","encryptionKey","slice","dataToMac","hmac","createHmac","hmacSha256Sign","mac","sig","b1","b2","res","i","equalConstTime","macGood","keccak256","createIdentity","entropy","byteLength","innerHex","middleHex","createPrivateKey","wallet","Wallet","publicKey","stripHexPrefix","address","removeLeading0x","str","startsWith","substring","addLeading0x","uint8ArrayToHex","toString","hexToUnit8Array","compress","startsWith04","publicKeyConvert","decompress","startsWith02Or03","decompressed","toAddress","addressBuffer","pubToAddress","toBuffer","toChecksumAddress","stringify","compressedKey","parse","buf","ret","decryptWithPrivateKey","encrypted","twoStripped","encryptedBuffer","decryptedBuffer","encryptWithPublicKey","pubString","encryptedBuffers","publicKeyOfPrivateKey","privateToPublic","recoverPublicKey","signature","sigOnly","recoveryNumber","pubKey","ecdsaRecover","recover","sigString","sign","sigObj","recoveryId","recid","signTransaction","rawTx","txOptions","arguments","undefined","privateKeyBuffer","replace","tx","Transaction","signedTx","serializedTx","serialize","_arrayLikeToArray","len","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","o","minLen","n","Object","prototype","call","constructor","test","TypeError","txDataByCompiled","abi","bytecode","args","JSON","factory","getDeployTransaction","apply","calculateContractAddress","creatorAddress","nonce","generateAddress","params","types","values","forEach","p","push","type","value","SIGN_PREFIX","hex","base64","string","String","fromCharCode","parseInt","compressedString","charCodeAt","toLowerCase","fromString","hexString","v","r","s","publicKeyByPrivateKey","vrs","util","__webpack_modules__","__unused_webpack_module","indexOf","e","t","Object_keys","keys","defineProp","defineProperty","writable","enumerable","configurable","globals","Context","Script","this","code","runInContext","document","createElement","style","display","body","appendChild","contentWindow","eval","execScript","c","removeChild","runInThisContext","runInNewContext","createContext","isContext","createScript","__nccwpck_require__","ab","__dirname","__webpack_exports__","module"],"sourceRoot":""}