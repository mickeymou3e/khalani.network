"use strict";(self.webpackChunk_tvl_labs_khalani_ui=self.webpackChunk_tvl_labs_khalani_ui||[]).push([[783],{"./src/components/inputs/TokenInput/TokenInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Error:()=>Error,Loading:()=>Loading,WithSlider:()=>WithSlider,WithTopLabel:()=>WithTopLabel,WithUSDValue:()=>WithUSDValue,WithoutMaxAmount:()=>WithoutMaxAmount,WithoutMaxButton:()=>WithoutMaxButton,WithoutTokenButton:()=>WithoutTokenButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Basic$parameters,_Basic$parameters2,_Basic$parameters2$do,_Error$parameters,_Error$parameters2,_Error$parameters2$do,_Loading$parameters,_Loading$parameters2,_Loading$parameters2$,_WithoutMaxAmount$par,_WithoutMaxAmount$par2,_WithoutMaxAmount$par3,_WithUSDValue$paramet,_WithUSDValue$paramet2,_WithUSDValue$paramet3,_WithSlider$parameter,_WithSlider$parameter2,_WithSlider$parameter3,_WithTopLabel$paramet,_WithTopLabel$paramet2,_WithTopLabel$paramet3,_WithoutTokenButton$p,_WithoutTokenButton$p2,_WithoutTokenButton$p3,_WithoutMaxButton$par,_WithoutMaxButton$par2,_WithoutMaxButton$par3,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Container/Container.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/inputs/TokenInput/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Inputs/TokenInput",description:"",component:___WEBPACK_IMPORTED_MODULE_1__.ZP},tokens=[{id:"0x85a454E7388AEC5783FD237eCA1a6a96Ed56f511",address:"0x85a454E7388AEC5783FD237eCA1a6a96Ed56f511",name:"USDT",decimals:18,symbol:"USDT",chainId:"0x1"},{id:"0xA600286A67c5BaedCDb4bEA2696Ff51fE72cF419",address:"0xA600286A67c5BaedCDb4bEA2696Ff51fE72cF419",name:"usdc",decimals:6,symbol:"usdc",chainId:"0x1"}],maxAmount=BigInt("100000000000000030000"),Template=args=>{const[amount,setAmount]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{sx:{width:550,mt:4},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,{elevation:2,sx:{py:5,px:2},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.ZP,_objectSpread(_objectSpread({},args),{},{amount,onMaxRequest:()=>setAmount(maxAmount),onAmountChange:amount=>setAmount(amount),onSliderChange:value=>{console.log(value)}}))})})};Template.displayName="Template";const Basic=Template.bind({});Basic.args={token:tokens[0],maxAmount};const Error=Template.bind({});Error.args={token:tokens[0],error:!0,maxAmount:BigInt("100000002000000000000")};const Loading=Template.bind({});Loading.args={token:void 0,maxAmount:BigInt(0),isFetchingMaxAmount:!0};const WithoutMaxAmount=Template.bind({});WithoutMaxAmount.args={token:tokens[0],isFetchingMaxAmount:!0};const WithUSDValue=Template.bind({});WithUSDValue.args={token:tokens[0],maxAmount,usdAmount:{value:BigInt("1052354543463400000"),decimals:16}};const WithSlider=Template.bind({});WithSlider.args={token:tokens[0],maxAmount,usdAmount:{value:BigInt("1052354543463400000"),decimals:16},isSlider:!0};const WithTopLabel=Template.bind({});WithTopLabel.args={token:tokens[0],topLabel:"Receive on Optimism"};const WithoutTokenButton=Template.bind({});WithoutTokenButton.args={token:tokens[0],maxAmount,hideTokenButton:!0};const WithoutMaxButton=Template.bind({});WithoutMaxButton.args={token:tokens[0],maxAmount,hideMaxButton:!0},Basic.parameters=_objectSpread(_objectSpread({},Basic.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Basic$parameters=Basic.parameters)||void 0===_Basic$parameters?void 0:_Basic$parameters.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_Basic$parameters2=Basic.parameters)||void 0===_Basic$parameters2||null===(_Basic$parameters2$do=_Basic$parameters2.docs)||void 0===_Basic$parameters2$do?void 0:_Basic$parameters2$do.source)})}),Error.parameters=_objectSpread(_objectSpread({},Error.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Error$parameters=Error.parameters)||void 0===_Error$parameters?void 0:_Error$parameters.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_Error$parameters2=Error.parameters)||void 0===_Error$parameters2||null===(_Error$parameters2$do=_Error$parameters2.docs)||void 0===_Error$parameters2$do?void 0:_Error$parameters2$do.source)})}),Loading.parameters=_objectSpread(_objectSpread({},Loading.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Loading$parameters=Loading.parameters)||void 0===_Loading$parameters?void 0:_Loading$parameters.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_Loading$parameters2=Loading.parameters)||void 0===_Loading$parameters2||null===(_Loading$parameters2$=_Loading$parameters2.docs)||void 0===_Loading$parameters2$?void 0:_Loading$parameters2$.source)})}),WithoutMaxAmount.parameters=_objectSpread(_objectSpread({},WithoutMaxAmount.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithoutMaxAmount$par=WithoutMaxAmount.parameters)||void 0===_WithoutMaxAmount$par?void 0:_WithoutMaxAmount$par.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_WithoutMaxAmount$par2=WithoutMaxAmount.parameters)||void 0===_WithoutMaxAmount$par2||null===(_WithoutMaxAmount$par3=_WithoutMaxAmount$par2.docs)||void 0===_WithoutMaxAmount$par3?void 0:_WithoutMaxAmount$par3.source)})}),WithUSDValue.parameters=_objectSpread(_objectSpread({},WithUSDValue.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithUSDValue$paramet=WithUSDValue.parameters)||void 0===_WithUSDValue$paramet?void 0:_WithUSDValue$paramet.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_WithUSDValue$paramet2=WithUSDValue.parameters)||void 0===_WithUSDValue$paramet2||null===(_WithUSDValue$paramet3=_WithUSDValue$paramet2.docs)||void 0===_WithUSDValue$paramet3?void 0:_WithUSDValue$paramet3.source)})}),WithSlider.parameters=_objectSpread(_objectSpread({},WithSlider.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithSlider$parameter=WithSlider.parameters)||void 0===_WithSlider$parameter?void 0:_WithSlider$parameter.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_WithSlider$parameter2=WithSlider.parameters)||void 0===_WithSlider$parameter2||null===(_WithSlider$parameter3=_WithSlider$parameter2.docs)||void 0===_WithSlider$parameter3?void 0:_WithSlider$parameter3.source)})}),WithTopLabel.parameters=_objectSpread(_objectSpread({},WithTopLabel.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithTopLabel$paramet=WithTopLabel.parameters)||void 0===_WithTopLabel$paramet?void 0:_WithTopLabel$paramet.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_WithTopLabel$paramet2=WithTopLabel.parameters)||void 0===_WithTopLabel$paramet2||null===(_WithTopLabel$paramet3=_WithTopLabel$paramet2.docs)||void 0===_WithTopLabel$paramet3?void 0:_WithTopLabel$paramet3.source)})}),WithoutTokenButton.parameters=_objectSpread(_objectSpread({},WithoutTokenButton.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithoutTokenButton$p=WithoutTokenButton.parameters)||void 0===_WithoutTokenButton$p?void 0:_WithoutTokenButton$p.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_WithoutTokenButton$p2=WithoutTokenButton.parameters)||void 0===_WithoutTokenButton$p2||null===(_WithoutTokenButton$p3=_WithoutTokenButton$p2.docs)||void 0===_WithoutTokenButton$p3?void 0:_WithoutTokenButton$p3.source)})}),WithoutMaxButton.parameters=_objectSpread(_objectSpread({},WithoutMaxButton.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_WithoutMaxButton$par=WithoutMaxButton.parameters)||void 0===_WithoutMaxButton$par?void 0:_WithoutMaxButton$par.docs),{},{source:_objectSpread({originalSource:"args => {\n  const [amount, setAmount] = useState<bigint | undefined>();\n  const onSliderChange = (value: number) => {\n    console.log(value);\n  };\n  return <Container sx={{\n    width: 550,\n    mt: 4\n  }}>\n      <Paper elevation={2} sx={{\n      py: 5,\n      px: 2\n    }}>\n        <TokenInput {...args} amount={amount} onMaxRequest={() => setAmount(maxAmount)} onAmountChange={amount => setAmount(amount)} onSliderChange={onSliderChange} />\n      </Paper>\n    </Container>;\n}"},null===(_WithoutMaxButton$par2=WithoutMaxButton.parameters)||void 0===_WithoutMaxButton$par2||null===(_WithoutMaxButton$par3=_WithoutMaxButton$par2.docs)||void 0===_WithoutMaxButton$par3?void 0:_WithoutMaxButton$par3.source)})});const __namedExportsOrder=["Basic","Error","Loading","WithoutMaxAmount","WithUSDValue","WithSlider","WithTopLabel","WithoutTokenButton","WithoutMaxButton"]},"./src/utils/text.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C_:()=>formatPercentValue,DO:()=>convertDecimalToBigNumber,EA:()=>bigIntToString,LY:()=>getDisplayingValue,Mk:()=>formatOutputAmount,NL:()=>getAddressLabel,UX:()=>bigIntToNumber,Wl:()=>truncateToSpecificDecimals,b1:()=>formatWithCommas,d9:()=>getInputValue,mT:()=>convertBigIntToDecimal});__webpack_require__("./node_modules/core-js/modules/es.regexp.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js");const ckbRegex=new RegExp("^(ckb|ckt)"),getAddressLabel=address=>{if(!address||!(address=>42===(null==address?void 0:address.length))(address)&&!(address=>ckbRegex.test(address))(address))return"Wrong address";return`${address.substring(0,6)}...${address.substring(address.length-4,address.length)}`},truncateToSpecificDecimals=(text,decimals)=>{if(!text)return"";const dotPlace=text.indexOf(".");if(dotPlace<0)return(text+".").padEnd(text.length+1+decimals,"0");const lengthOfText=dotPlace+decimals+1;return decimals<=0?text.slice(0,dotPlace+1):text.length>lengthOfText?text.slice(0,lengthOfText):text.length<lengthOfText?text.padEnd(lengthOfText,"0"):text},convertBigIntToDecimal=(value,decimals)=>{if(!value||value===BigInt(0))return`0.${"0".repeat(decimals)}`;const integerDecimal=value.toString();if(integerDecimal.length>decimals)return integerDecimal.slice(0,integerDecimal.length-decimals)+"."+integerDecimal.slice(integerDecimal.length-decimals);{const additionalZeros=decimals-integerDecimal.length;return(`0.${"0".repeat(additionalZeros)}`+integerDecimal).replace(/0+$/,"")}},bigIntToString=(value,decimals)=>(text=>{const[intPart,decPart]=text.split("."),decPartTrimmed=decPart.replace(/0+$/,"");return decPartTrimmed.length>0?[intPart,decPartTrimmed].join("."):intPart})(convertBigIntToDecimal(value,decimals)),getInputValue=(value,decimals)=>{const decimalSupport=decimals&&0!==decimals,isValueEndsWithSingleDot=value.split(".").length-1==1&&value.endsWith(".");if(decimalSupport){const decimalLimitRegex=new RegExp("^\\d{0,30}"+`(\\.\\d{1,${decimals}})?$`);if(value.match(decimalLimitRegex))return value}else{const integerLimitRegex=new RegExp("^\\d{0,30}?$");if(value.match(integerLimitRegex))return value}if(isValueEndsWithSingleDot&&decimalSupport){const replacedValue=value.replace(/^0+/,"");return 1===replacedValue.length&&"."===replacedValue?"0.":replacedValue}return null},convertDecimalToBigNumber=(value,decimals)=>{const splitValue=value.split("."),numbersBeforeDecimal=splitValue[0],numbersAfterDecimal=splitValue.length>1?splitValue[1]:null;if(numbersAfterDecimal){let afterDecimal;if(decimals-numbersAfterDecimal.length>=0){const zerosToAdd=decimals-numbersAfterDecimal.length;afterDecimal=numbersAfterDecimal+`${"0".repeat(zerosToAdd)}`}else{const decimalsToRemove=numbersAfterDecimal.length-decimals;afterDecimal=numbersAfterDecimal.slice(0,-decimalsToRemove)}const result=(numbersBeforeDecimal+afterDecimal).replace(/^0+/,"");return BigInt(result||0)}return BigInt(numbersBeforeDecimal.replace(/^0+/,"")+`${"0".repeat(decimals)}`)},formatWithMathematicalNotation=function(n){let decimals=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return n<1e3?truncateToSpecificDecimals(n.toString(),decimals):n>=1e3&&n<1e6?+Math.trunc(n/1e3*Math.pow(10,decimals))/Math.pow(10,decimals)+"K":n>=1e6&&n<1e9?+Math.trunc(n/1e6*Math.pow(10,decimals))/Math.pow(10,decimals)+"M":n>=1e9&&n<1e12?+Math.trunc(n/1e9*Math.pow(10,decimals))/Math.pow(10,decimals)+"B":n>=1e12&&n<1e15?+Math.trunc(n/1e12*Math.pow(10,decimals))/Math.pow(10,decimals)+"T":n>=1e15&&n<1e18?+Math.trunc(n/1e15*Math.pow(10,decimals))/Math.pow(10,decimals)+"P":n>=1e18?+Math.trunc(n/1e18*Math.pow(10,decimals))/Math.pow(10,decimals)+"E":"0.00"},getDisplayingValue=function(value){let roundingDecimals=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,showDollars=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const parsedValue=Number(truncateToSpecificDecimals(value.toString(),roundingDecimals));let valueText;return valueText=showDollars?value>0&&value<.01?"< 0.01":formatWithMathematicalNotation(parsedValue,2):value>0&&value<.001?"< 0.001":formatWithMathematicalNotation(parsedValue,roundingDecimals),showDollars?valueText.includes("<")?valueText.slice(0,2)+"$"+valueText.slice(2):`$${valueText}`:valueText},formatWithCommas=(value,decimals)=>Number(bigIntToString(value,decimals)).toLocaleString("en-US",{maximumFractionDigits:2}),bigIntToNumber=(amount,tokenDecimals)=>Number(bigIntToString(amount,tokenDecimals)),formatOutputAmount=(amount,tokenDecimals)=>bigIntToNumber(amount,tokenDecimals).toFixed(5).replace(/[.,]0+$/,""),formatPercentValue=(amount,tokenDecimals)=>bigIntToNumber(amount,tokenDecimals).toFixed(2).replace(/[.,]0+$/,"")}}]);